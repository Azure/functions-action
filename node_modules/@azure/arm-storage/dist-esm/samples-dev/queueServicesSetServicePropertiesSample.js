/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { StorageManagementClient } from "@azure/arm-storage";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
 *
 * @summary Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/QueueServicesPut.json
 */
function queueServicesPut() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res4410";
        const accountName = "sto8607";
        const parameters = {
            cors: {
                corsRules: [
                    {
                        allowedHeaders: [
                            "x-ms-meta-abc",
                            "x-ms-meta-data*",
                            "x-ms-meta-target*"
                        ],
                        allowedMethods: ["GET", "HEAD", "POST", "OPTIONS", "MERGE", "PUT"],
                        allowedOrigins: ["http://www.contoso.com", "http://www.fabrikam.com"],
                        exposedHeaders: ["x-ms-meta-*"],
                        maxAgeInSeconds: 100
                    },
                    {
                        allowedHeaders: ["*"],
                        allowedMethods: ["GET"],
                        allowedOrigins: ["*"],
                        exposedHeaders: ["*"],
                        maxAgeInSeconds: 2
                    },
                    {
                        allowedHeaders: ["x-ms-meta-12345675754564*"],
                        allowedMethods: ["GET", "PUT"],
                        allowedOrigins: [
                            "http://www.abc23.com",
                            "https://www.fabrikam.com/*"
                        ],
                        exposedHeaders: [
                            "x-ms-meta-abc",
                            "x-ms-meta-data*",
                            "x-ms-meta-target*"
                        ],
                        maxAgeInSeconds: 2000
                    }
                ]
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.queueServices.setServiceProperties(resourceGroupName, accountName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        queueServicesPut();
    });
}
main().catch(console.error);
//# sourceMappingURL=queueServicesSetServicePropertiesSample.js.map