/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { StorageManagementClient } from "@azure/arm-storage";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetAsyncSkuConversionStatus.json
 */
function storageAccountGetAsyncSkuConversionStatus() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetProperties.json
 */
function storageAccountGetProperties() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetPropertiesCMKEnabled.json
 */
function storageAccountGetPropertiesCmkEnabled() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetPropertiesCMKVersionExpirationTime.json
 */
function storageAccountGetPropertiesCmkVersionExpirationTime() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetPropertiesGeoReplicationStatscanFailoverFalse.json
 */
function storageAccountGetPropertiesGeoReplicationStatscanFailoverFalse() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const expand = "geoReplicationStats";
        const options = { expand };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName, options);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 *
 * @summary Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
 * x-ms-original-file: specification/storage/resource-manager/Microsoft.Storage/stable/2023-01-01/examples/StorageAccountGetPropertiesGeoReplicationStatscanFailoverTrue.json
 */
function storageAccountGetPropertiesGeoReplicationStatscanFailoverTrue() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["STORAGE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["STORAGE_RESOURCE_GROUP"] || "res9407";
        const accountName = "sto8596";
        const expand = "geoReplicationStats";
        const options = { expand };
        const credential = new DefaultAzureCredential();
        const client = new StorageManagementClient(credential, subscriptionId);
        const result = yield client.storageAccounts.getProperties(resourceGroupName, accountName, options);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        storageAccountGetAsyncSkuConversionStatus();
        storageAccountGetProperties();
        storageAccountGetPropertiesCmkEnabled();
        storageAccountGetPropertiesCmkVersionExpirationTime();
        storageAccountGetPropertiesGeoReplicationStatscanFailoverFalse();
        storageAccountGetPropertiesGeoReplicationStatscanFailoverTrue();
    });
}
main().catch(console.error);
//# sourceMappingURL=storageAccountsGetPropertiesSample.js.map