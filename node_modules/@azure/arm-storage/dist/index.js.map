{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/operations.ts","../src/operations/skus.ts","../src/lroImpl.ts","../src/operations/storageAccounts.ts","../src/operations/deletedAccounts.ts","../src/operations/usages.ts","../src/operations/managementPolicies.ts","../src/operations/blobInventoryPolicies.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/objectReplicationPoliciesOperations.ts","../src/operations/localUsersOperations.ts","../src/operations/encryptionScopes.ts","../src/operations/blobServices.ts","../src/operations/blobContainers.ts","../src/operations/fileServices.ts","../src/operations/fileShares.ts","../src/operations/queueServices.ts","../src/operations/queue.ts","../src/operations/tableServices.ts","../src/operations/tableOperations.ts","../src/storageManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results. */\nexport interface OperationListResult {\n  /** List of Storage operations supported by the Storage resource provider. */\n  value?: Operation[];\n}\n\n/** Storage REST API operation definition. */\nexport interface Operation {\n  /** Operation name: {provider}/{resource}/{operation} */\n  name?: string;\n  /** Display metadata associated with the operation. */\n  display?: OperationDisplay;\n  /** The origin of operations. */\n  origin?: string;\n  /** One property of operation, include metric specifications. */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /** Service provider: Microsoft Storage. */\n  provider?: string;\n  /** Resource on which the operation is performed etc. */\n  resource?: string;\n  /** Type of operation: get, read, delete, etc. */\n  operation?: string;\n  /** Description of the operation. */\n  description?: string;\n}\n\n/** One property of operation, include metric specifications. */\nexport interface ServiceSpecification {\n  /** Metric specifications of operation. */\n  metricSpecifications?: MetricSpecification[];\n}\n\n/** Metric specification of operation. */\nexport interface MetricSpecification {\n  /** Name of metric specification. */\n  name?: string;\n  /** Display name of metric specification. */\n  displayName?: string;\n  /** Display description of metric specification. */\n  displayDescription?: string;\n  /** Unit could be Bytes or Count. */\n  unit?: string;\n  /** Dimensions of blobs, including blob type and access tier. */\n  dimensions?: Dimension[];\n  /** Aggregation type could be Average. */\n  aggregationType?: string;\n  /** The property to decide fill gap with zero or not. */\n  fillGapWithZero?: boolean;\n  /** The category this metric specification belong to, could be Capacity. */\n  category?: string;\n  /** Account Resource Id. */\n  resourceIdDimensionNameOverride?: string;\n}\n\n/** Dimension of blobs, possibly be blob type or access tier. */\nexport interface Dimension {\n  /** Display name of dimension. */\n  name?: string;\n  /** Display name of dimension. */\n  displayName?: string;\n}\n\n/** The response from the List Storage SKUs operation. */\nexport interface StorageSkuListResult {\n  /**\n   * Get the list result of storage SKUs and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SkuInformation[];\n}\n\n/** Storage SKU and its properties */\nexport interface SkuInformation {\n  /** The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. */\n  name: SkuName;\n  /**\n   * The SKU tier. This is based on the SKU name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: SkuTier;\n  /**\n   * The type of the resource, usually it is 'storageAccounts'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * Indicates the type of storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: Kind;\n  /**\n   * The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: SKUCapability[];\n  /** The restrictions because of which SKU cannot be used. This is empty if there are no restrictions. */\n  restrictions?: Restriction[];\n}\n\n/** The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc. */\nexport interface SKUCapability {\n  /**\n   * The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * A string value to indicate states of given capability. Possibly 'true' or 'false'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** The restriction because of which SKU cannot be used. */\nexport interface Restriction {\n  /**\n   * The type of restrictions. As of now only possible value for this is location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly values?: string[];\n  /** The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC. */\n  reasonCode?: ReasonCode;\n}\n\n/** The parameters used to check the availability of the storage account name. */\nexport interface StorageAccountCheckNameAvailabilityParameters {\n  /** The storage account name. */\n  name: string;\n  /** The type of resource, Microsoft.Storage/storageAccounts */\n  type: \"Microsoft.Storage/storageAccounts\";\n}\n\n/** The CheckNameAvailability operation response. */\nexport interface CheckNameAvailabilityResult {\n  /**\n   * Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nameAvailable?: boolean;\n  /**\n   * Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: Reason;\n  /**\n   * Gets an error message explaining the Reason value in more detail.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** The parameters used when creating a storage account. */\nexport interface StorageAccountCreateParameters {\n  /** Required. Gets or sets the SKU name. */\n  sku: Sku;\n  /** Required. Indicates the type of storage account. */\n  kind: Kind;\n  /** Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed. */\n  location: string;\n  /** Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location */\n  extendedLocation?: ExtendedLocation;\n  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters. */\n  tags?: { [propertyName: string]: string };\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** SasPolicy assigned to the storage account. */\n  sasPolicy?: SasPolicy;\n  /** KeyPolicy assigned to the storage account. */\n  keyPolicy?: KeyPolicy;\n  /** User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. */\n  customDomain?: CustomDomain;\n  /** Encryption settings to be used for server-side encryption for the storage account. */\n  encryption?: Encryption;\n  /** Network rule set */\n  networkRuleSet?: NetworkRuleSet;\n  /** Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. */\n  accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01. */\n  enableHttpsTrafficOnly?: boolean;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Account HierarchicalNamespace enabled if sets to true. */\n  isHnsEnabled?: boolean;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** NFS 3.0 protocol support enabled if set to true. */\n  enableNfsV3?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n}\n\n/** The SKU of the storage account. */\nexport interface Sku {\n  /** The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType. */\n  name: SkuName;\n  /**\n   * The SKU tier. This is based on the SKU name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tier?: SkuTier;\n}\n\n/** The complex type of the extended location. */\nexport interface ExtendedLocation {\n  /** The name of the extended location. */\n  name?: string;\n  /** The type of the extended location. */\n  type?: ExtendedLocationTypes;\n}\n\n/** Identity for the resource. */\nexport interface Identity {\n  /**\n   * The principal ID of resource identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The identity type. */\n  type: IdentityType;\n  /** Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here. */\n  userAssignedIdentities?: { [propertyName: string]: UserAssignedIdentity };\n}\n\n/** UserAssignedIdentity for the resource. */\nexport interface UserAssignedIdentity {\n  /**\n   * The principal ID of the identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The client ID of the identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** SasPolicy assigned to the storage account. */\nexport interface SasPolicy {\n  /** The SAS expiration period, DD.HH:MM:SS. */\n  sasExpirationPeriod: string;\n  /** The SAS expiration action. Can only be Log. */\n  expirationAction: ExpirationAction;\n}\n\n/** KeyPolicy assigned to the storage account. */\nexport interface KeyPolicy {\n  /** The key expiration period in days. */\n  keyExpirationPeriodInDays: number;\n}\n\n/** The custom domain assigned to this storage account. This can be set via Update. */\nexport interface CustomDomain {\n  /** Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source. */\n  name: string;\n  /** Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates. */\n  useSubDomainName?: boolean;\n}\n\n/** The encryption settings on the storage account. */\nexport interface Encryption {\n  /** List of services which support encryption. */\n  services?: EncryptionServices;\n  /** The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault */\n  keySource?: KeySource;\n  /** A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. */\n  requireInfrastructureEncryption?: boolean;\n  /** Properties provided by key vault. */\n  keyVaultProperties?: KeyVaultProperties;\n  /** The identity to be used with service-side encryption at rest. */\n  encryptionIdentity?: EncryptionIdentity;\n}\n\n/** A list of services that support encryption. */\nexport interface EncryptionServices {\n  /** The encryption function of the blob storage service. */\n  blob?: EncryptionService;\n  /** The encryption function of the file storage service. */\n  file?: EncryptionService;\n  /** The encryption function of the table storage service. */\n  table?: EncryptionService;\n  /** The encryption function of the queue storage service. */\n  queue?: EncryptionService;\n}\n\n/** A service that allows server-side encryption to be used. */\nexport interface EncryptionService {\n  /** A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled. */\n  enabled?: boolean;\n  /**\n   * Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastEnabledTime?: Date;\n  /** Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used. */\n  keyType?: KeyType;\n}\n\n/** Properties of key vault. */\nexport interface KeyVaultProperties {\n  /** The name of KeyVault key. */\n  keyName?: string;\n  /** The version of KeyVault key. */\n  keyVersion?: string;\n  /** The Uri of KeyVault. */\n  keyVaultUri?: string;\n  /**\n   * The object identifier of the current versioned Key Vault Key in use.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyIdentifier?: string;\n  /**\n   * Timestamp of last rotation of the Key Vault Key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastKeyRotationTimestamp?: Date;\n  /**\n   * This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyExpirationTimestamp?: Date;\n}\n\n/** Encryption identity for the storage account. */\nexport interface EncryptionIdentity {\n  /** Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account. */\n  encryptionUserAssignedIdentity?: string;\n  /** ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account. */\n  encryptionFederatedIdentityClientId?: string;\n}\n\n/** Network rule set */\nexport interface NetworkRuleSet {\n  /** Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics. */\n  bypass?: Bypass;\n  /** Sets the resource access rules */\n  resourceAccessRules?: ResourceAccessRule[];\n  /** Sets the virtual network rules */\n  virtualNetworkRules?: VirtualNetworkRule[];\n  /** Sets the IP ACL rules */\n  ipRules?: IPRule[];\n  /** Specifies the default action of allow or deny when no other rules match. */\n  defaultAction: DefaultAction;\n}\n\n/** Resource Access Rule. */\nexport interface ResourceAccessRule {\n  /** Tenant Id */\n  tenantId?: string;\n  /** Resource Id */\n  resourceId?: string;\n}\n\n/** Virtual Network rule. */\nexport interface VirtualNetworkRule {\n  /** Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}. */\n  virtualNetworkResourceId: string;\n  /** The action of virtual network rule. */\n  action?: \"Allow\";\n  /** Gets the state of virtual network rule. */\n  state?: State;\n}\n\n/** IP rule with specific IP or IP range in CIDR format. */\nexport interface IPRule {\n  /** Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed. */\n  iPAddressOrRange: string;\n  /** The action of IP ACL rule. */\n  action?: \"Allow\";\n}\n\n/** Settings for Azure Files identity based authentication. */\nexport interface AzureFilesIdentityBasedAuthentication {\n  /** Indicates the directory service used. Note that this enum may be extended in the future. */\n  directoryServiceOptions: DirectoryServiceOptions;\n  /** Required if directoryServiceOptions are AD, optional if they are AADKERB. */\n  activeDirectoryProperties?: ActiveDirectoryProperties;\n  /** Default share permission for users using Kerberos authentication if RBAC role is not assigned. */\n  defaultSharePermission?: DefaultSharePermission;\n}\n\n/** Settings properties for Active Directory (AD). */\nexport interface ActiveDirectoryProperties {\n  /** Specifies the primary domain that the AD DNS server is authoritative for. */\n  domainName: string;\n  /** Specifies the NetBIOS domain name. */\n  netBiosDomainName?: string;\n  /** Specifies the Active Directory forest to get. */\n  forestName?: string;\n  /** Specifies the domain GUID. */\n  domainGuid: string;\n  /** Specifies the security identifier (SID). */\n  domainSid?: string;\n  /** Specifies the security identifier (SID) for Azure Storage. */\n  azureStorageSid?: string;\n  /** Specifies the Active Directory SAMAccountName for Azure Storage. */\n  samAccountName?: string;\n  /** Specifies the Active Directory account type for Azure Storage. */\n  accountType?: AccountType;\n}\n\n/** Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing */\nexport interface RoutingPreference {\n  /** Routing Choice defines the kind of network routing opted by the user. */\n  routingChoice?: RoutingChoice;\n  /** A boolean flag which indicates whether microsoft routing storage endpoints are to be published */\n  publishMicrosoftEndpoints?: boolean;\n  /** A boolean flag which indicates whether internet routing storage endpoints are to be published */\n  publishInternetEndpoints?: boolean;\n}\n\n/** This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning. */\nexport interface ImmutableStorageAccount {\n  /** A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default. */\n  enabled?: boolean;\n  /** Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy. */\n  immutabilityPolicy?: AccountImmutabilityPolicyProperties;\n}\n\n/** This defines account-level immutability policy properties. */\nexport interface AccountImmutabilityPolicyProperties {\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /** The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted. */\n  state?: AccountImmutabilityPolicyState;\n  /** This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWrites?: boolean;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object. */\nexport interface Endpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the queue endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queue?: string;\n  /**\n   * Gets the table endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly table?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n  /** Gets the microsoft routing storage endpoints. */\n  microsoftEndpoints?: StorageAccountMicrosoftEndpoints;\n  /** Gets the internet routing storage endpoints */\n  internetEndpoints?: StorageAccountInternetEndpoints;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint. */\nexport interface StorageAccountMicrosoftEndpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the queue endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queue?: string;\n  /**\n   * Gets the table endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly table?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n}\n\n/** The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint. */\nexport interface StorageAccountInternetEndpoints {\n  /**\n   * Gets the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blob?: string;\n  /**\n   * Gets the file endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly file?: string;\n  /**\n   * Gets the web endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly web?: string;\n  /**\n   * Gets the dfs endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dfs?: string;\n}\n\n/** Storage account keys creation time. */\nexport interface KeyCreationTime {\n  key1?: Date;\n  key2?: Date;\n}\n\n/** Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account. */\nexport interface GeoReplicationStats {\n  /**\n   * The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: GeoReplicationStatus;\n  /**\n   * All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSyncTime?: Date;\n  /**\n   * A boolean flag which indicates whether or not account failover is supported for the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canFailover?: boolean;\n  /**\n   * A boolean flag which indicates whether or not planned account failover is supported for the account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly canPlannedFailover?: boolean;\n  /**\n   * The redundancy type of the account after an account failover is performed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly postFailoverRedundancy?: PostFailoverRedundancy;\n  /**\n   * The redundancy type of the account after a planned account failover is performed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly postPlannedFailoverRedundancy?: PostPlannedFailoverRedundancy;\n}\n\n/** The Private Endpoint resource. */\nexport interface PrivateEndpoint {\n  /**\n   * The ARM identifier for Private Endpoint\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** A collection of information about the state of the connection between service consumer and provider. */\nexport interface PrivateLinkServiceConnectionState {\n  /** Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service. */\n  status?: PrivateEndpointServiceConnectionStatus;\n  /** The reason for approval/rejection of the connection. */\n  description?: string;\n  /** A message indicating if changes on the service provider require any updates on the consumer. */\n  actionRequired?: string;\n}\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Blob restore status. */\nexport interface BlobRestoreStatus {\n  /**\n   * The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: BlobRestoreProgressStatus;\n  /**\n   * Failure reason when blob restore is failed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failureReason?: string;\n  /**\n   * Id for tracking blob restore request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restoreId?: string;\n  /**\n   * Blob restore request parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: BlobRestoreParameters;\n}\n\n/** Blob restore parameters */\nexport interface BlobRestoreParameters {\n  /** Restore blob to the specified time. */\n  timeToRestore: Date;\n  /** Blob ranges to restore. */\n  blobRanges: BlobRestoreRange[];\n}\n\n/** Blob range */\nexport interface BlobRestoreRange {\n  /** Blob start range. This is inclusive. Empty means account start. */\n  startRange: string;\n  /** Blob end range. This is exclusive. Empty means account end. */\n  endRange: string;\n}\n\n/** This defines the sku conversion status object for asynchronous sku conversions. */\nexport interface StorageAccountSkuConversionStatus {\n  /**\n   * This property indicates the current sku conversion status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly skuConversionStatus?: SkuConversionStatus;\n  /** This property represents the target sku name to which the account sku is being converted asynchronously. */\n  targetSkuName?: SkuName;\n  /**\n   * This property represents the sku conversion start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * This property represents the sku conversion end time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: string;\n}\n\n/** The parameters that can be provided when updating the storage account properties. */\nexport interface StorageAccountUpdateParameters {\n  /** Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value. */\n  sku?: Sku;\n  /** Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters. */\n  tags?: { [propertyName: string]: string };\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server. */\n  kind?: Kind;\n  /** Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property. */\n  customDomain?: CustomDomain;\n  /** Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled. */\n  encryption?: Encryption;\n  /** SasPolicy assigned to the storage account. */\n  sasPolicy?: SasPolicy;\n  /** KeyPolicy assigned to the storage account. */\n  keyPolicy?: KeyPolicy;\n  /** Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type. */\n  accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. */\n  enableHttpsTrafficOnly?: boolean;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Network rule set */\n  networkRuleSet?: NetworkRuleSet;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n}\n\n/** The response from the List Deleted Accounts operation. */\nexport interface DeletedAccountListResult {\n  /**\n   * Gets the list of deleted accounts and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DeletedAccount[];\n  /**\n   * Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An error response from the storage resource provider. */\nexport interface ErrorResponse {\n  /** Azure Storage Resource Provider error response body. */\n  error?: ErrorResponseBody;\n}\n\n/** Error response body contract. */\nexport interface ErrorResponseBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n}\n\n/** The response from the List Storage Accounts operation. */\nexport interface StorageAccountListResult {\n  /**\n   * Gets the list of storage accounts and their properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: StorageAccount[];\n  /**\n   * Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response from the ListKeys operation. */\nexport interface StorageAccountListKeysResult {\n  /**\n   * Gets the list of storage account keys and their properties for the specified storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keys?: StorageAccountKey[];\n}\n\n/** An access key for the storage account. */\nexport interface StorageAccountKey {\n  /**\n   * Name of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyName?: string;\n  /**\n   * Base 64-encoded value of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * Permissions for the key -- read-only or full permissions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly permissions?: KeyPermission;\n  /**\n   * Creation time of the key, in round trip date format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** The parameters used to regenerate the storage account key. */\nexport interface StorageAccountRegenerateKeyParameters {\n  /** The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2. */\n  keyName: string;\n}\n\n/** The response from the List Usages operation. */\nexport interface UsageListResult {\n  /** Gets or sets the list of Storage Resource Usages. */\n  value?: Usage[];\n}\n\n/** Describes Storage Resource Usage. */\nexport interface Usage {\n  /**\n   * Gets the unit of measurement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UsageUnit;\n  /**\n   * Gets the current count of the allocated resources in the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Gets the maximum count of the resources that can be allocated in the subscription.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Gets the name of the type of usage.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: UsageName;\n}\n\n/** The usage names that can be used; currently limited to StorageAccount. */\nexport interface UsageName {\n  /**\n   * Gets a string describing the resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * Gets a localized string describing the resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** The parameters to list SAS credentials of a storage account. */\nexport interface AccountSasParameters {\n  /** The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f). */\n  services: Services;\n  /** The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files. */\n  resourceTypes: SignedResourceTypes;\n  /** The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). */\n  permissions: Permissions;\n  /** An IP address or a range of IP addresses from which to accept requests. */\n  iPAddressOrRange?: string;\n  /** The protocol permitted for a request made with the account SAS. */\n  protocols?: HttpProtocol;\n  /** The time at which the SAS becomes valid. */\n  sharedAccessStartTime?: Date;\n  /** The time at which the shared access signature becomes invalid. */\n  sharedAccessExpiryTime: Date;\n  /** The key to sign the account SAS token with. */\n  keyToSign?: string;\n}\n\n/** The List SAS credentials operation response. */\nexport interface ListAccountSasResponse {\n  /**\n   * List SAS credentials of storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountSasToken?: string;\n}\n\n/** The parameters to list service SAS credentials of a specific resource. */\nexport interface ServiceSasParameters {\n  /** The canonical path to the signed resource. */\n  canonicalizedResource: string;\n  /** The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s). */\n  resource?: SignedResource;\n  /** The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p). */\n  permissions?: Permissions;\n  /** An IP address or a range of IP addresses from which to accept requests. */\n  iPAddressOrRange?: string;\n  /** The protocol permitted for a request made with the account SAS. */\n  protocols?: HttpProtocol;\n  /** The time at which the SAS becomes valid. */\n  sharedAccessStartTime?: Date;\n  /** The time at which the shared access signature becomes invalid. */\n  sharedAccessExpiryTime?: Date;\n  /** A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table. */\n  identifier?: string;\n  /** The start of partition key. */\n  partitionKeyStart?: string;\n  /** The end of partition key. */\n  partitionKeyEnd?: string;\n  /** The start of row key. */\n  rowKeyStart?: string;\n  /** The end of row key. */\n  rowKeyEnd?: string;\n  /** The key to sign the account SAS token with. */\n  keyToSign?: string;\n  /** The response header override for cache control. */\n  cacheControl?: string;\n  /** The response header override for content disposition. */\n  contentDisposition?: string;\n  /** The response header override for content encoding. */\n  contentEncoding?: string;\n  /** The response header override for content language. */\n  contentLanguage?: string;\n  /** The response header override for content type. */\n  contentType?: string;\n}\n\n/** The List service SAS credentials operation response. */\nexport interface ListServiceSasResponse {\n  /**\n   * List service SAS credentials of specific resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceSasToken?: string;\n}\n\n/** The parameters or status associated with an ongoing or enqueued storage account migration in order to update its current SKU or region. */\nexport interface StorageAccountMigration {\n  /**\n   * Migration Resource Id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** current value is 'default' for customer initiated migration */\n  name?: string;\n  /** SrpAccountMigrationType in ARM contract which is 'accountMigrations' */\n  type?: string;\n  /** Target sku name for the account */\n  targetSkuName: SkuName;\n  /**\n   * Current status of migration\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationStatus?: MigrationStatus;\n  /**\n   * Error code for migration failure\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationFailedReason?: string;\n  /**\n   * Reason for migration failure\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationFailedDetailedReason?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponseAutoGenerated {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. */\nexport interface ManagementPolicySchema {\n  /** The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. */\n  rules: ManagementPolicyRule[];\n}\n\n/** An object that wraps the Lifecycle rule. Each rule is uniquely defined by name. */\nexport interface ManagementPolicyRule {\n  /** Rule is enabled if set to true. */\n  enabled?: boolean;\n  /** A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. */\n  name: string;\n  /** The valid value is Lifecycle */\n  type: RuleType;\n  /** An object that defines the Lifecycle rule. */\n  definition: ManagementPolicyDefinition;\n}\n\n/** An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set. */\nexport interface ManagementPolicyDefinition {\n  /** An object that defines the action set. */\n  actions: ManagementPolicyAction;\n  /** An object that defines the filter set. */\n  filters?: ManagementPolicyFilter;\n}\n\n/** Actions are applied to the filtered blobs when the execution condition is met. */\nexport interface ManagementPolicyAction {\n  /** The management policy action for base blob */\n  baseBlob?: ManagementPolicyBaseBlob;\n  /** The management policy action for snapshot */\n  snapshot?: ManagementPolicySnapShot;\n  /** The management policy action for version */\n  version?: ManagementPolicyVersion;\n}\n\n/** Management policy action for base blob. */\nexport interface ManagementPolicyBaseBlob {\n  /** The function to tier blobs to cool storage. */\n  tierToCool?: DateAfterModification;\n  /** The function to tier blobs to archive storage. */\n  tierToArchive?: DateAfterModification;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterModification;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterModification;\n  /** The function to delete the blob */\n  delete?: DateAfterModification;\n  /** This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan. */\n  enableAutoTierToHotFromCool?: boolean;\n}\n\n/** Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan. */\nexport interface DateAfterModification {\n  /** Value indicating the age in days after last modification */\n  daysAfterModificationGreaterThan?: number;\n  /** Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy */\n  daysAfterLastAccessTimeGreaterThan?: number;\n  /** Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied. */\n  daysAfterLastTierChangeGreaterThan?: number;\n  /** Value indicating the age in days after blob creation. */\n  daysAfterCreationGreaterThan?: number;\n}\n\n/** Management policy action for snapshot. */\nexport interface ManagementPolicySnapShot {\n  /** The function to tier blob snapshot to cool storage. */\n  tierToCool?: DateAfterCreation;\n  /** The function to tier blob snapshot to archive storage. */\n  tierToArchive?: DateAfterCreation;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterCreation;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterCreation;\n  /** The function to delete the blob snapshot */\n  delete?: DateAfterCreation;\n}\n\n/** Object to define snapshot and version action conditions. */\nexport interface DateAfterCreation {\n  /** Value indicating the age in days after creation */\n  daysAfterCreationGreaterThan: number;\n  /** Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied. */\n  daysAfterLastTierChangeGreaterThan?: number;\n}\n\n/** Management policy action for blob version. */\nexport interface ManagementPolicyVersion {\n  /** The function to tier blob version to cool storage. */\n  tierToCool?: DateAfterCreation;\n  /** The function to tier blob version to archive storage. */\n  tierToArchive?: DateAfterCreation;\n  /** The function to tier blobs to cold storage. */\n  tierToCold?: DateAfterCreation;\n  /** The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts */\n  tierToHot?: DateAfterCreation;\n  /** The function to delete the blob version */\n  delete?: DateAfterCreation;\n}\n\n/** Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. */\nexport interface ManagementPolicyFilter {\n  /** An array of strings for prefixes to be match. */\n  prefixMatch?: string[];\n  /** An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob. */\n  blobTypes: string[];\n  /** An array of blob index tag based filters, there can be at most 10 tag filters */\n  blobIndexMatch?: TagFilter[];\n}\n\n/** Blob index tag based filtering for blob objects */\nexport interface TagFilter {\n  /** This is the filter tag name, it can have 1 - 128 characters */\n  name: string;\n  /** This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported */\n  op: string;\n  /** This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters */\n  value: string;\n}\n\n/** The storage account blob inventory policy rules. */\nexport interface BlobInventoryPolicySchema {\n  /** Policy is enabled if set to true. */\n  enabled: boolean;\n  /**\n   * Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly destination?: string;\n  /** The valid value is Inventory */\n  type: InventoryRuleType;\n  /** The storage account blob inventory policy rules. The rule is applied when it is enabled. */\n  rules: BlobInventoryPolicyRule[];\n}\n\n/** An object that wraps the blob inventory rule. Each rule is uniquely defined by name. */\nexport interface BlobInventoryPolicyRule {\n  /** Rule is enabled when set to true. */\n  enabled: boolean;\n  /** A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy. */\n  name: string;\n  /** Container name where blob inventory files are stored. Must be pre-created. */\n  destination: string;\n  /** An object that defines the blob inventory policy rule. */\n  definition: BlobInventoryPolicyDefinition;\n}\n\n/** An object that defines the blob inventory rule. */\nexport interface BlobInventoryPolicyDefinition {\n  /** An object that defines the filter set. */\n  filters?: BlobInventoryPolicyFilter;\n  /** This is a required field, it specifies the format for the inventory files. */\n  format: Format;\n  /** This is a required field. This field is used to schedule an inventory formation. */\n  schedule: Schedule;\n  /** This is a required field. This field specifies the scope of the inventory created either at the blob or container level. */\n  objectType: ObjectType;\n  /** This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts. */\n  schemaFields: string[];\n}\n\n/** An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional. */\nexport interface BlobInventoryPolicyFilter {\n  /** An array of strings with maximum 10 blob prefixes to be included in the inventory. */\n  prefixMatch?: string[];\n  /** An array of strings with maximum 10 blob prefixes to be excluded from the inventory. */\n  excludePrefix?: string[];\n  /** An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'. */\n  blobTypes?: string[];\n  /** Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded. */\n  includeBlobVersions?: boolean;\n  /** Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded. */\n  includeSnapshots?: boolean;\n  /** For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded. */\n  includeDeleted?: boolean;\n  /** This property is used to filter objects based on the object creation time */\n  creationTime?: BlobInventoryCreationTime;\n}\n\n/** This property defines the creation time based filtering condition. Blob Inventory schema parameter 'Creation-Time' is mandatory with this filter. */\nexport interface BlobInventoryCreationTime {\n  /** When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500. */\n  lastNDays?: number;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** An error response from the Storage service. */\nexport interface CloudError {\n  /** An error response from the Storage service. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the Storage service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n  /** The target of the particular error. For example, the name of the property in error. */\n  target?: string;\n  /** A list of additional details about the error. */\n  details?: CloudErrorBody[];\n}\n\n/** List of blob inventory policies returned. */\nexport interface ListBlobInventoryPolicy {\n  /**\n   * List of blob inventory policies.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BlobInventoryPolicy[];\n}\n\n/** List of private endpoint connection associated with the specified storage account */\nexport interface PrivateEndpointConnectionListResult {\n  /** Array of private endpoint connections */\n  value?: PrivateEndpointConnection[];\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /** Array of private link resources */\n  value?: PrivateLinkResource[];\n}\n\n/** List storage account object replication policies. */\nexport interface ObjectReplicationPolicies {\n  /** The replication policy between two storage accounts. */\n  value?: ObjectReplicationPolicy[];\n}\n\n/** The replication policy rule between two containers. */\nexport interface ObjectReplicationPolicyRule {\n  /** Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account. */\n  ruleId?: string;\n  /** Required. Source container name. */\n  sourceContainer: string;\n  /** Required. Destination container name. */\n  destinationContainer: string;\n  /** Optional. An object that defines the filter set. */\n  filters?: ObjectReplicationPolicyFilter;\n}\n\n/** Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters. */\nexport interface ObjectReplicationPolicyFilter {\n  /** Optional. Filters the results to replicate only blobs whose names begin with the specified prefix. */\n  prefixMatch?: string[];\n  /** Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z */\n  minCreationTime?: string;\n}\n\n/** List storage account local users. */\nexport interface LocalUsers {\n  /** The local users associated with the storage account. */\n  value?: LocalUser[];\n}\n\nexport interface PermissionScope {\n  /** The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c). */\n  permissions: string;\n  /** The service used by the local user, e.g. blob, file. */\n  service: string;\n  /** The name of resource, normally the container name or the file share name, used by the local user. */\n  resourceName: string;\n}\n\nexport interface SshPublicKey {\n  /** Optional. It is used to store the function/usage of the key */\n  description?: string;\n  /** Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB */\n  key?: string;\n}\n\n/** The Storage Account Local User keys. */\nexport interface LocalUserKeys {\n  /** Optional, local user ssh authorized keys for SFTP. */\n  sshAuthorizedKeys?: SshPublicKey[];\n  /**\n   * Auto generated by the server for SMB authentication.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sharedKey?: string;\n}\n\n/** The secrets of Storage Account Local User. */\nexport interface LocalUserRegeneratePasswordResult {\n  /**\n   * Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sshPassword?: string;\n}\n\n/** The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. */\nexport interface EncryptionScopeKeyVaultProperties {\n  /** The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope. */\n  keyUri?: string;\n  /**\n   * The object identifier of the current versioned Key Vault Key in use.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentVersionedKeyIdentifier?: string;\n  /**\n   * Timestamp of last rotation of the Key Vault Key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastKeyRotationTimestamp?: Date;\n}\n\n/** List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes. */\nexport interface EncryptionScopeListResult {\n  /**\n   * List of encryption scopes requested.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EncryptionScope[];\n  /**\n   * Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface BlobServiceItems {\n  /**\n   * List of blob services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BlobServiceProperties[];\n}\n\n/** Sets the CORS rules. You can include up to five CorsRule elements in the request. */\nexport interface CorsRules {\n  /** The List of CORS rules. You can include up to five CorsRule elements in the request. */\n  corsRules?: CorsRule[];\n}\n\n/** Specifies a CORS rule for the Blob service. */\nexport interface CorsRule {\n  /** Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains */\n  allowedOrigins: string[];\n  /** Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin. */\n  allowedMethods: AllowedMethods[];\n  /** Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response. */\n  maxAgeInSeconds: number;\n  /** Required if CorsRule element is present. A list of response headers to expose to CORS clients. */\n  exposedHeaders: string[];\n  /** Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request. */\n  allowedHeaders: string[];\n}\n\n/** The service properties for soft delete. */\nexport interface DeleteRetentionPolicy {\n  /** Indicates whether DeleteRetentionPolicy is enabled. */\n  enabled?: boolean;\n  /** Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365. */\n  days?: number;\n  /** This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share. */\n  allowPermanentDelete?: boolean;\n}\n\n/** The blob service properties for change feed events. */\nexport interface ChangeFeed {\n  /** Indicates whether change feed event logging is enabled for the Blob service. */\n  enabled?: boolean;\n  /** Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed. */\n  retentionInDays?: number;\n}\n\n/** The blob service properties for blob restore policy */\nexport interface RestorePolicyProperties {\n  /** Blob restore is enabled if set to true. */\n  enabled: boolean;\n  /** how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days. */\n  days?: number;\n  /**\n   * Deprecated in favor of minRestoreTime property.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastEnabledTime?: Date;\n  /**\n   * Returns the minimum date and time that the restore can be started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minRestoreTime?: Date;\n}\n\n/** The blob service properties for Last access time based tracking policy. */\nexport interface LastAccessTimeTrackingPolicy {\n  /** When set to true last access time based tracking is enabled. */\n  enable: boolean;\n  /** Name of the policy. The valid value is AccessTimeTracking. This field is currently read only */\n  name?: Name;\n  /** The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1 */\n  trackingGranularityInDays?: number;\n  /** An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only */\n  blobType?: string[];\n}\n\n/** Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers. */\nexport interface ListContainerItems {\n  /**\n   * List of blobs containers returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ListContainerItem[];\n  /**\n   * Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of an ImmutabilityPolicy of a blob container. */\nexport interface ImmutabilityPolicyProperties {\n  /**\n   * ImmutabilityPolicy Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * The ImmutabilityPolicy update history of the blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updateHistory?: UpdateHistoryProperty[];\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ImmutabilityPolicyState;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** An update history of the ImmutabilityPolicy of a blob container. */\nexport interface UpdateHistoryProperty {\n  /**\n   * The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly update?: ImmutabilityPolicyUpdateType;\n  /**\n   * The immutability period for the blobs in the container since the policy creation, in days.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * Returns the date and time the ImmutabilityPolicy was updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * Returns the Object ID of the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectIdentifier?: string;\n  /**\n   * Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * Returns the User Principal Name of the user who updated the ImmutabilityPolicy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly upn?: string;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** The LegalHold property of a blob container. */\nexport interface LegalHoldProperties {\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /** The list of LegalHold tags of a blob container. */\n  tags?: TagProperty[];\n  /** Protected append blob writes history. */\n  protectedAppendWritesHistory?: ProtectedAppendWritesHistory;\n}\n\n/** A tag of the LegalHold of a blob container. */\nexport interface TagProperty {\n  /**\n   * The tag value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tag?: string;\n  /**\n   * Returns the date and time the tag was added.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * Returns the Object ID of the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly objectIdentifier?: string;\n  /**\n   * Returns the Tenant ID that issued the token for the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /**\n   * Returns the User Principal Name of the user who added the tag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly upn?: string;\n}\n\n/** Protected append writes history setting for the blob container with Legal holds. */\nexport interface ProtectedAppendWritesHistory {\n  /** When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWritesAll?: boolean;\n  /**\n   * Returns the date and time the tag was added.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n}\n\n/** Object level immutability properties of the container. */\nexport interface ImmutableStorageWithVersioning {\n  /** This is an immutable property, when set to true it enables object level immutability at the container level. */\n  enabled?: boolean;\n  /**\n   * Returns the date and time the object level immutability was enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeStamp?: Date;\n  /**\n   * This property denotes the container level immutability to object level immutability migration state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly migrationState?: MigrationState;\n}\n\n/** The LegalHold property of a blob container. */\nexport interface LegalHold {\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /** Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP. */\n  tags: string[];\n  /** When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** Lease Container request schema. */\nexport interface LeaseContainerRequest {\n  /** Specifies the lease action. Can be one of the available actions. */\n  action: LeaseContainerRequestAction;\n  /** Identifies the lease. Can be specified in any valid GUID string format. */\n  leaseId?: string;\n  /** Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. */\n  breakPeriod?: number;\n  /** Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. */\n  leaseDuration?: number;\n  /** Optional for acquire, required for change. Proposed lease ID, in a GUID string format. */\n  proposedLeaseId?: string;\n}\n\n/** Lease Container response schema. */\nexport interface LeaseContainerResponse {\n  /** Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease. */\n  leaseId?: string;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTimeSeconds?: string;\n}\n\nexport interface FileServiceItems {\n  /**\n   * List of file services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FileServiceProperties[];\n}\n\n/** Protocol settings for file service */\nexport interface ProtocolSettings {\n  /** Setting for SMB protocol */\n  smb?: SmbSetting;\n}\n\n/** Setting for SMB protocol */\nexport interface SmbSetting {\n  /** Multichannel setting. Applies to Premium FileStorage only. */\n  multichannel?: Multichannel;\n  /** SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'. */\n  versions?: string;\n  /** SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'. */\n  authenticationMethods?: string;\n  /** Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';' */\n  kerberosTicketEncryption?: string;\n  /** SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'. */\n  channelEncryption?: string;\n}\n\n/** Multichannel setting. Applies to Premium FileStorage only. */\nexport interface Multichannel {\n  /** Indicates whether multichannel is enabled */\n  enabled?: boolean;\n}\n\n/** Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares. */\nexport interface FileShareItems {\n  /**\n   * List of file shares returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FileShareItem[];\n  /**\n   * Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface SignedIdentifier {\n  /** An unique identifier of the stored access policy. */\n  id?: string;\n  /** Access policy */\n  accessPolicy?: AccessPolicy;\n}\n\nexport interface AccessPolicy {\n  /** Start time of the access policy */\n  startTime?: Date;\n  /** Expiry time of the access policy */\n  expiryTime?: Date;\n  /** List of abbreviated permissions. */\n  permission?: string;\n}\n\n/** The deleted share to be restored. */\nexport interface DeletedShare {\n  /** Required. Identify the name of the deleted share that will be restored. */\n  deletedShareName: string;\n  /** Required. Identify the version of the deleted share that will be restored. */\n  deletedShareVersion: string;\n}\n\n/** Lease Share request schema. */\nexport interface LeaseShareRequest {\n  /** Specifies the lease action. Can be one of the available actions. */\n  action: LeaseShareAction;\n  /** Identifies the lease. Can be specified in any valid GUID string format. */\n  leaseId?: string;\n  /** Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. */\n  breakPeriod?: number;\n  /** Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. */\n  leaseDuration?: number;\n  /** Optional for acquire, required for change. Proposed lease ID, in a GUID string format. */\n  proposedLeaseId?: string;\n}\n\n/** Lease Share response schema. */\nexport interface LeaseShareResponse {\n  /** Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease. */\n  leaseId?: string;\n  /** Approximate time remaining in the lease period, in seconds. */\n  leaseTimeSeconds?: string;\n}\n\nexport interface ListQueueServices {\n  /**\n   * List of queue services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: QueueServiceProperties[];\n}\n\n/** Response schema. Contains list of queues returned */\nexport interface ListQueueResource {\n  /**\n   * List of queues returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ListQueue[];\n  /**\n   * Request URL that can be used to list next page of queues\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface ListTableServices {\n  /**\n   * List of table services returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TableServiceProperties[];\n}\n\n/** Object to set Table Access Policy. */\nexport interface TableSignedIdentifier {\n  /** unique-64-character-value of the stored access policy. */\n  id: string;\n  /** Access policy */\n  accessPolicy?: TableAccessPolicy;\n}\n\n/** Table Access Policy Properties Object. */\nexport interface TableAccessPolicy {\n  /** Start time of the access policy */\n  startTime?: Date;\n  /** Expiry time of the access policy */\n  expiryTime?: Date;\n  /** Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d' */\n  permission: string;\n}\n\n/** Response schema. Contains list of tables returned */\nexport interface ListTableResource {\n  /**\n   * List of tables returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Table[];\n  /**\n   * Request URL that can be used to query next page of tables\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Private Endpoint Connection resource. */\nexport interface PrivateEndpointConnection extends Resource {\n  /** The resource of private end point. */\n  privateEndpoint?: PrivateEndpoint;\n  /** A collection of information about the state of the connection between service consumer and provider. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * The provisioning state of the private endpoint connection resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointConnectionProvisioningState;\n}\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport interface TrackedResource extends Resource {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport interface ProxyResource extends Resource {}\n\n/** The Get Storage Account ManagementPolicies operation response. */\nexport interface ManagementPolicy extends Resource {\n  /**\n   * Returns the date and time the ManagementPolicies was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts. */\n  policy?: ManagementPolicySchema;\n}\n\n/** The storage account blob inventory policy. */\nexport interface BlobInventoryPolicy extends Resource {\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * Returns the last modified date and time of the blob inventory policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The storage account blob inventory policy object. It is composed of policy rules. */\n  policy?: BlobInventoryPolicySchema;\n}\n\n/** A private link resource */\nexport interface PrivateLinkResource extends Resource {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /** The private link resource Private link DNS zone name. */\n  requiredZoneNames?: string[];\n}\n\n/** The replication policy between two storage accounts. Multiple rules can be defined in one policy. */\nexport interface ObjectReplicationPolicy extends Resource {\n  /**\n   * A unique id for object replication policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly policyId?: string;\n  /**\n   * Indicates when the policy is enabled on the source account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly enabledTime?: Date;\n  /** Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false. */\n  sourceAccount?: string;\n  /** Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false. */\n  destinationAccount?: string;\n  /** The storage account object replication rules. */\n  rules?: ObjectReplicationPolicyRule[];\n}\n\n/** The local user associated with the storage accounts. */\nexport interface LocalUser extends Resource {\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The permission scopes of the local user. */\n  permissionScopes?: PermissionScope[];\n  /** Optional, local user home directory. */\n  homeDirectory?: string;\n  /** Optional, local user ssh authorized keys for SFTP. */\n  sshAuthorizedKeys?: SshPublicKey[];\n  /**\n   * A unique Security Identifier that is generated by the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sid?: string;\n  /** Indicates whether shared key exists. Set it to false to remove existing shared key. */\n  hasSharedKey?: boolean;\n  /** Indicates whether ssh key exists. Set it to false to remove existing SSH key. */\n  hasSshKey?: boolean;\n  /** Indicates whether ssh password exists. Set it to false to remove existing SSH password. */\n  hasSshPassword?: boolean;\n}\n\n/** The Encryption Scope resource. */\nexport interface EncryptionScope extends Resource {\n  /** The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault. */\n  source?: EncryptionScopeSource;\n  /** The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled. */\n  state?: EncryptionScopeState;\n  /**\n   * Gets the creation date and time of the encryption scope in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n  /**\n   * Gets the last modification date and time of the encryption scope in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'. */\n  keyVaultProperties?: EncryptionScopeKeyVaultProperties;\n  /** A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest. */\n  requireInfrastructureEncryption?: boolean;\n}\n\n/** The properties of a storage account’s Blob service. */\nexport interface BlobServiceProperties extends Resource {\n  /**\n   * Sku name and tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /** Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service. */\n  cors?: CorsRules;\n  /** DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions. */\n  defaultServiceVersion?: string;\n  /** The blob service properties for blob soft delete. */\n  deleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** Versioning is enabled if set to true. */\n  isVersioningEnabled?: boolean;\n  /** Deprecated in favor of isVersioningEnabled property. */\n  automaticSnapshotPolicyEnabled?: boolean;\n  /** The blob service properties for change feed events. */\n  changeFeed?: ChangeFeed;\n  /** The blob service properties for blob restore policy. */\n  restorePolicy?: RestorePolicyProperties;\n  /** The blob service properties for container soft delete. */\n  containerDeleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** The blob service property to configure last access time based tracking policy. */\n  lastAccessTimeTrackingPolicy?: LastAccessTimeTrackingPolicy;\n}\n\n/** The resource model definition for an Azure Resource Manager resource with an etag. */\nexport interface AzureEntityResource extends Resource {\n  /**\n   * Resource Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n}\n\n/** The properties of File services in storage account. */\nexport interface FileServiceProperties extends Resource {\n  /**\n   * Sku name and tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /** Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service. */\n  cors?: CorsRules;\n  /** The file service properties for share soft delete. */\n  shareDeleteRetentionPolicy?: DeleteRetentionPolicy;\n  /** Protocol settings for file service */\n  protocolSettings?: ProtocolSettings;\n}\n\n/** The properties of a storage account’s Queue service. */\nexport interface QueueServiceProperties extends Resource {\n  /** Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service. */\n  cors?: CorsRules;\n}\n\nexport interface StorageQueue extends Resource {\n  /** A name-value pair that represents queue metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly approximateMessageCount?: number;\n}\n\nexport interface ListQueue extends Resource {\n  /** A name-value pair that represents queue metadata. */\n  metadata?: { [propertyName: string]: string };\n}\n\n/** The properties of a storage account’s Table service. */\nexport interface TableServiceProperties extends Resource {\n  /** Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service. */\n  cors?: CorsRules;\n}\n\n/** Properties of the table, including Id, resource name, resource type. */\nexport interface Table extends Resource {\n  /**\n   * Table name under the specified account\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableName?: string;\n  /** List of stored access policies specified on the table. */\n  signedIdentifiers?: TableSignedIdentifier[];\n}\n\n/** The storage account. */\nexport interface StorageAccount extends TrackedResource {\n  /**\n   * Gets the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /**\n   * Gets the Kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: Kind;\n  /** The identity of the resource. */\n  identity?: Identity;\n  /** The extendedLocation of the resource. */\n  extendedLocation?: ExtendedLocation;\n  /**\n   * Gets the status of the storage account at the time the operation was called.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryEndpoints?: Endpoints;\n  /**\n   * Gets the location of the primary data center for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryLocation?: string;\n  /**\n   * Gets the status indicating whether the primary location of the storage account is available or unavailable.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusOfPrimary?: AccountStatus;\n  /**\n   * Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastGeoFailoverTime?: Date;\n  /**\n   * Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryLocation?: string;\n  /**\n   * Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statusOfSecondary?: AccountStatus;\n  /**\n   * Gets the creation date and time of the storage account in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n  /**\n   * Gets the custom domain the user assigned to this storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly customDomain?: CustomDomain;\n  /**\n   * SasPolicy assigned to the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sasPolicy?: SasPolicy;\n  /**\n   * KeyPolicy assigned to the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyPolicy?: KeyPolicy;\n  /**\n   * Storage account keys creation time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly keyCreationTime?: KeyCreationTime;\n  /**\n   * Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly secondaryEndpoints?: Endpoints;\n  /**\n   * Encryption settings to be used for server-side encryption for the storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly encryption?: Encryption;\n  /**\n   * Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTier?: AccessTier;\n  /** Provides the identity based authentication settings for Azure Files. */\n  azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;\n  /** Allows https traffic only to storage service if sets to true. */\n  enableHttpsTrafficOnly?: boolean;\n  /**\n   * Network rule set\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly networkRuleSet?: NetworkRuleSet;\n  /** Enables Secure File Transfer Protocol, if set to true */\n  isSftpEnabled?: boolean;\n  /** Enables local users feature, if set to true */\n  isLocalUserEnabled?: boolean;\n  /** Account HierarchicalNamespace enabled if sets to true. */\n  isHnsEnabled?: boolean;\n  /**\n   * Geo Replication Stats\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly geoReplicationStats?: GeoReplicationStats;\n  /**\n   * If the failover is in progress, the value will be true, otherwise, it will be null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverInProgress?: boolean;\n  /** Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled. */\n  largeFileSharesState?: LargeFileSharesState;\n  /**\n   * List of private endpoint connection associated with the specified storage account\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnection[];\n  /** Maintains information about the network routing choice opted by the user for data transfer */\n  routingPreference?: RoutingPreference;\n  /**\n   * Blob restore status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blobRestoreStatus?: BlobRestoreStatus;\n  /** Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property. */\n  allowBlobPublicAccess?: boolean;\n  /** Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property. */\n  minimumTlsVersion?: MinimumTlsVersion;\n  /** Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true. */\n  allowSharedKeyAccess?: boolean;\n  /** NFS 3.0 protocol support enabled if set to true. */\n  enableNfsV3?: boolean;\n  /** Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default. */\n  allowCrossTenantReplication?: boolean;\n  /** A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property. */\n  defaultToOAuthAuthentication?: boolean;\n  /** Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'. */\n  publicNetworkAccess?: PublicNetworkAccess;\n  /** The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default. */\n  immutableStorageWithVersioning?: ImmutableStorageAccount;\n  /** Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. */\n  allowedCopyScope?: AllowedCopyScope;\n  /** This property is readOnly and is set by server during asynchronous storage account sku conversion operations. */\n  storageAccountSkuConversionStatus?: StorageAccountSkuConversionStatus;\n  /** Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier. */\n  dnsEndpointType?: DnsEndpointType;\n  /**\n   * This property will be set to true or false on an event of ongoing migration. Default value is null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isSkuConversionBlocked?: boolean;\n  /**\n   * If customer initiated account migration is in progress, the value will be true else it will be null.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accountMigrationInProgress?: boolean;\n}\n\n/** Deleted storage account */\nexport interface DeletedAccount extends ProxyResource {\n  /**\n   * Full resource id of the original storage account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountResourceId?: string;\n  /**\n   * Location of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Can be used to attempt recovering this deleted account via PutStorageAccount API.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restoreReference?: string;\n  /**\n   * Creation time of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: string;\n  /**\n   * Deletion time of the deleted account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionTime?: string;\n}\n\n/** The blob container properties be listed out. */\nexport interface ListContainerItem extends AzureEntityResource {\n  /**\n   * The version of the deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the blob container was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * Blob container deletion time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for soft deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Default the container to use specified encryption scope for all writes. */\n  defaultEncryptionScope?: string;\n  /** Block override of encryption scope from the container default. */\n  denyEncryptionScopeOverride?: boolean;\n  /** Specifies whether data in the container may be accessed publicly and the level of access. */\n  publicAccess?: PublicAccess;\n  /**\n   * Returns the date and time the container was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The lease status of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** A name-value pair to associate with the container as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ImmutabilityPolicy property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPolicy?: ImmutabilityPolicyProperties;\n  /**\n   * The LegalHold property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly legalHold?: LegalHoldProperties;\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /**\n   * The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasImmutabilityPolicy?: boolean;\n  /** The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. */\n  immutableStorageWithVersioning?: ImmutableStorageWithVersioning;\n  /** Enable NFSv3 root squash on blob container. */\n  enableNfsV3RootSquash?: boolean;\n  /** Enable NFSv3 all squash on blob container. */\n  enableNfsV3AllSquash?: boolean;\n}\n\n/** Properties of the blob container, including Id, resource name, resource type, Etag. */\nexport interface BlobContainer extends AzureEntityResource {\n  /**\n   * The version of the deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the blob container was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * Blob container deletion time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for soft deleted blob container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Default the container to use specified encryption scope for all writes. */\n  defaultEncryptionScope?: string;\n  /** Block override of encryption scope from the container default. */\n  denyEncryptionScopeOverride?: boolean;\n  /** Specifies whether data in the container may be accessed publicly and the level of access. */\n  publicAccess?: PublicAccess;\n  /**\n   * Returns the date and time the container was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /**\n   * The lease status of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** A name-value pair to associate with the container as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ImmutabilityPolicy property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly immutabilityPolicy?: ImmutabilityPolicyProperties;\n  /**\n   * The LegalHold property of the container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly legalHold?: LegalHoldProperties;\n  /**\n   * The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasLegalHold?: boolean;\n  /**\n   * The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasImmutabilityPolicy?: boolean;\n  /** The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process. */\n  immutableStorageWithVersioning?: ImmutableStorageWithVersioning;\n  /** Enable NFSv3 root squash on blob container. */\n  enableNfsV3RootSquash?: boolean;\n  /** Enable NFSv3 all squash on blob container. */\n  enableNfsV3AllSquash?: boolean;\n}\n\n/** The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag. */\nexport interface ImmutabilityPolicy extends AzureEntityResource {\n  /** The immutability period for the blobs in the container since the policy creation, in days. */\n  immutabilityPeriodSinceCreationInDays?: number;\n  /**\n   * The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ImmutabilityPolicyState;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. */\n  allowProtectedAppendWrites?: boolean;\n  /** This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive. */\n  allowProtectedAppendWritesAll?: boolean;\n}\n\n/** The file share properties be listed out. */\nexport interface FileShareItem extends AzureEntityResource {\n  /**\n   * Returns the date and time the share was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** A name-value pair to associate with the share as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /** The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. */\n  shareQuota?: number;\n  /** The authentication protocol that is used for the file share. Can only be specified when creating a share. */\n  enabledProtocols?: EnabledProtocols;\n  /** The property is for NFS share only. The default is NoRootSquash. */\n  rootSquash?: RootSquashType;\n  /**\n   * The version of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * The deleted time if the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for share that was soft deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. */\n  accessTier?: ShareAccessTier;\n  /**\n   * Indicates the last modification time for share access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierChangeTime?: Date;\n  /**\n   * Indicates if there is a pending transition for access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierStatus?: string;\n  /**\n   * The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareUsageBytes?: number;\n  /**\n   * The lease status of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** List of stored access policies specified on the share. */\n  signedIdentifiers?: SignedIdentifier[];\n  /**\n   * Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly snapshotTime?: Date;\n}\n\n/** Properties of the file share, including Id, resource name, resource type, Etag. */\nexport interface FileShare extends AzureEntityResource {\n  /**\n   * Returns the date and time the share was last modified.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: Date;\n  /** A name-value pair to associate with the share as metadata. */\n  metadata?: { [propertyName: string]: string };\n  /** The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. */\n  shareQuota?: number;\n  /** The authentication protocol that is used for the file share. Can only be specified when creating a share. */\n  enabledProtocols?: EnabledProtocols;\n  /** The property is for NFS share only. The default is NoRootSquash. */\n  rootSquash?: RootSquashType;\n  /**\n   * The version of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * Indicates whether the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deleted?: boolean;\n  /**\n   * The deleted time if the share was deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedTime?: Date;\n  /**\n   * Remaining retention days for share that was soft deleted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly remainingRetentionDays?: number;\n  /** Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. */\n  accessTier?: ShareAccessTier;\n  /**\n   * Indicates the last modification time for share access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierChangeTime?: Date;\n  /**\n   * Indicates if there is a pending transition for access tier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly accessTierStatus?: string;\n  /**\n   * The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly shareUsageBytes?: number;\n  /**\n   * The lease status of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseStatus?: LeaseStatus;\n  /**\n   * Lease state of the share.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseState?: LeaseState;\n  /**\n   * Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaseDuration?: LeaseDuration;\n  /** List of stored access policies specified on the share. */\n  signedIdentifiers?: SignedIdentifier[];\n  /**\n   * Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly snapshotTime?: Date;\n}\n\n/** Defines headers for StorageAccounts_customerInitiatedMigration operation. */\nexport interface StorageAccountsCustomerInitiatedMigrationHeaders {\n  location?: string;\n}\n\n/** Defines headers for BlobContainers_createOrUpdateImmutabilityPolicy operation. */\nexport interface BlobContainersCreateOrUpdateImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_getImmutabilityPolicy operation. */\nexport interface BlobContainersGetImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_deleteImmutabilityPolicy operation. */\nexport interface BlobContainersDeleteImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_lockImmutabilityPolicy operation. */\nexport interface BlobContainersLockImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for BlobContainers_extendImmutabilityPolicy operation. */\nexport interface BlobContainersExtendImmutabilityPolicyHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Defines headers for FileShares_lease operation. */\nexport interface FileSharesLeaseHeaders {\n  /** The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers. */\n  eTag?: string;\n}\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  /** StandardLRS */\n  StandardLRS = \"Standard_LRS\",\n  /** StandardGRS */\n  StandardGRS = \"Standard_GRS\",\n  /** StandardRagrs */\n  StandardRagrs = \"Standard_RAGRS\",\n  /** StandardZRS */\n  StandardZRS = \"Standard_ZRS\",\n  /** PremiumLRS */\n  PremiumLRS = \"Premium_LRS\",\n  /** PremiumZRS */\n  PremiumZRS = \"Premium_ZRS\",\n  /** StandardGzrs */\n  StandardGzrs = \"Standard_GZRS\",\n  /** StandardRagzrs */\n  StandardRagzrs = \"Standard_RAGZRS\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Standard_GRS** \\\n * **Standard_RAGRS** \\\n * **Standard_ZRS** \\\n * **Premium_LRS** \\\n * **Premium_ZRS** \\\n * **Standard_GZRS** \\\n * **Standard_RAGZRS**\n */\nexport type SkuName = string;\n\n/** Known values of {@link Kind} that the service accepts. */\nexport enum KnownKind {\n  /** Storage */\n  Storage = \"Storage\",\n  /** StorageV2 */\n  StorageV2 = \"StorageV2\",\n  /** BlobStorage */\n  BlobStorage = \"BlobStorage\",\n  /** FileStorage */\n  FileStorage = \"FileStorage\",\n  /** BlockBlobStorage */\n  BlockBlobStorage = \"BlockBlobStorage\"\n}\n\n/**\n * Defines values for Kind. \\\n * {@link KnownKind} can be used interchangeably with Kind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Storage** \\\n * **StorageV2** \\\n * **BlobStorage** \\\n * **FileStorage** \\\n * **BlockBlobStorage**\n */\nexport type Kind = string;\n\n/** Known values of {@link ReasonCode} that the service accepts. */\nexport enum KnownReasonCode {\n  /** QuotaId */\n  QuotaId = \"QuotaId\",\n  /** NotAvailableForSubscription */\n  NotAvailableForSubscription = \"NotAvailableForSubscription\"\n}\n\n/**\n * Defines values for ReasonCode. \\\n * {@link KnownReasonCode} can be used interchangeably with ReasonCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **QuotaId** \\\n * **NotAvailableForSubscription**\n */\nexport type ReasonCode = string;\n\n/** Known values of {@link ExtendedLocationTypes} that the service accepts. */\nexport enum KnownExtendedLocationTypes {\n  /** EdgeZone */\n  EdgeZone = \"EdgeZone\"\n}\n\n/**\n * Defines values for ExtendedLocationTypes. \\\n * {@link KnownExtendedLocationTypes} can be used interchangeably with ExtendedLocationTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EdgeZone**\n */\nexport type ExtendedLocationTypes = string;\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\"\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link AllowedCopyScope} that the service accepts. */\nexport enum KnownAllowedCopyScope {\n  /** PrivateLink */\n  PrivateLink = \"PrivateLink\",\n  /** AAD */\n  AAD = \"AAD\"\n}\n\n/**\n * Defines values for AllowedCopyScope. \\\n * {@link KnownAllowedCopyScope} can be used interchangeably with AllowedCopyScope,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PrivateLink** \\\n * **AAD**\n */\nexport type AllowedCopyScope = string;\n\n/** Known values of {@link PublicNetworkAccess} that the service accepts. */\nexport enum KnownPublicNetworkAccess {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PublicNetworkAccess. \\\n * {@link KnownPublicNetworkAccess} can be used interchangeably with PublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type PublicNetworkAccess = string;\n\n/** Known values of {@link ExpirationAction} that the service accepts. */\nexport enum KnownExpirationAction {\n  /** Log */\n  Log = \"Log\"\n}\n\n/**\n * Defines values for ExpirationAction. \\\n * {@link KnownExpirationAction} can be used interchangeably with ExpirationAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Log**\n */\nexport type ExpirationAction = string;\n\n/** Known values of {@link KeyType} that the service accepts. */\nexport enum KnownKeyType {\n  /** Service */\n  Service = \"Service\",\n  /** Account */\n  Account = \"Account\"\n}\n\n/**\n * Defines values for KeyType. \\\n * {@link KnownKeyType} can be used interchangeably with KeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Service** \\\n * **Account**\n */\nexport type KeyType = string;\n\n/** Known values of {@link KeySource} that the service accepts. */\nexport enum KnownKeySource {\n  /** MicrosoftStorage */\n  MicrosoftStorage = \"Microsoft.Storage\",\n  /** MicrosoftKeyvault */\n  MicrosoftKeyvault = \"Microsoft.Keyvault\"\n}\n\n/**\n * Defines values for KeySource. \\\n * {@link KnownKeySource} can be used interchangeably with KeySource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Storage** \\\n * **Microsoft.Keyvault**\n */\nexport type KeySource = string;\n\n/** Known values of {@link Bypass} that the service accepts. */\nexport enum KnownBypass {\n  /** None */\n  None = \"None\",\n  /** Logging */\n  Logging = \"Logging\",\n  /** Metrics */\n  Metrics = \"Metrics\",\n  /** AzureServices */\n  AzureServices = \"AzureServices\"\n}\n\n/**\n * Defines values for Bypass. \\\n * {@link KnownBypass} can be used interchangeably with Bypass,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Logging** \\\n * **Metrics** \\\n * **AzureServices**\n */\nexport type Bypass = string;\n\n/** Known values of {@link State} that the service accepts. */\nexport enum KnownState {\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Deprovisioning */\n  Deprovisioning = \"Deprovisioning\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** NetworkSourceDeleted */\n  NetworkSourceDeleted = \"NetworkSourceDeleted\"\n}\n\n/**\n * Defines values for State. \\\n * {@link KnownState} can be used interchangeably with State,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Deprovisioning** \\\n * **Succeeded** \\\n * **Failed** \\\n * **NetworkSourceDeleted**\n */\nexport type State = string;\n\n/** Known values of {@link DirectoryServiceOptions} that the service accepts. */\nexport enum KnownDirectoryServiceOptions {\n  /** None */\n  None = \"None\",\n  /** Aadds */\n  Aadds = \"AADDS\",\n  /** AD */\n  AD = \"AD\",\n  /** Aadkerb */\n  Aadkerb = \"AADKERB\"\n}\n\n/**\n * Defines values for DirectoryServiceOptions. \\\n * {@link KnownDirectoryServiceOptions} can be used interchangeably with DirectoryServiceOptions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **AADDS** \\\n * **AD** \\\n * **AADKERB**\n */\nexport type DirectoryServiceOptions = string;\n\n/** Known values of {@link AccountType} that the service accepts. */\nexport enum KnownAccountType {\n  /** User */\n  User = \"User\",\n  /** Computer */\n  Computer = \"Computer\"\n}\n\n/**\n * Defines values for AccountType. \\\n * {@link KnownAccountType} can be used interchangeably with AccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Computer**\n */\nexport type AccountType = string;\n\n/** Known values of {@link DefaultSharePermission} that the service accepts. */\nexport enum KnownDefaultSharePermission {\n  /** None */\n  None = \"None\",\n  /** StorageFileDataSmbShareReader */\n  StorageFileDataSmbShareReader = \"StorageFileDataSmbShareReader\",\n  /** StorageFileDataSmbShareContributor */\n  StorageFileDataSmbShareContributor = \"StorageFileDataSmbShareContributor\",\n  /** StorageFileDataSmbShareElevatedContributor */\n  StorageFileDataSmbShareElevatedContributor = \"StorageFileDataSmbShareElevatedContributor\"\n}\n\n/**\n * Defines values for DefaultSharePermission. \\\n * {@link KnownDefaultSharePermission} can be used interchangeably with DefaultSharePermission,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **StorageFileDataSmbShareReader** \\\n * **StorageFileDataSmbShareContributor** \\\n * **StorageFileDataSmbShareElevatedContributor**\n */\nexport type DefaultSharePermission = string;\n\n/** Known values of {@link LargeFileSharesState} that the service accepts. */\nexport enum KnownLargeFileSharesState {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for LargeFileSharesState. \\\n * {@link KnownLargeFileSharesState} can be used interchangeably with LargeFileSharesState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type LargeFileSharesState = string;\n\n/** Known values of {@link RoutingChoice} that the service accepts. */\nexport enum KnownRoutingChoice {\n  /** MicrosoftRouting */\n  MicrosoftRouting = \"MicrosoftRouting\",\n  /** InternetRouting */\n  InternetRouting = \"InternetRouting\"\n}\n\n/**\n * Defines values for RoutingChoice. \\\n * {@link KnownRoutingChoice} can be used interchangeably with RoutingChoice,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MicrosoftRouting** \\\n * **InternetRouting**\n */\nexport type RoutingChoice = string;\n\n/** Known values of {@link MinimumTlsVersion} that the service accepts. */\nexport enum KnownMinimumTlsVersion {\n  /** TLS10 */\n  TLS10 = \"TLS1_0\",\n  /** TLS11 */\n  TLS11 = \"TLS1_1\",\n  /** TLS12 */\n  TLS12 = \"TLS1_2\"\n}\n\n/**\n * Defines values for MinimumTlsVersion. \\\n * {@link KnownMinimumTlsVersion} can be used interchangeably with MinimumTlsVersion,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TLS1_0** \\\n * **TLS1_1** \\\n * **TLS1_2**\n */\nexport type MinimumTlsVersion = string;\n\n/** Known values of {@link AccountImmutabilityPolicyState} that the service accepts. */\nexport enum KnownAccountImmutabilityPolicyState {\n  /** Unlocked */\n  Unlocked = \"Unlocked\",\n  /** Locked */\n  Locked = \"Locked\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for AccountImmutabilityPolicyState. \\\n * {@link KnownAccountImmutabilityPolicyState} can be used interchangeably with AccountImmutabilityPolicyState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Unlocked** \\\n * **Locked** \\\n * **Disabled**\n */\nexport type AccountImmutabilityPolicyState = string;\n\n/** Known values of {@link DnsEndpointType} that the service accepts. */\nexport enum KnownDnsEndpointType {\n  /** Standard */\n  Standard = \"Standard\",\n  /** AzureDnsZone */\n  AzureDnsZone = \"AzureDnsZone\"\n}\n\n/**\n * Defines values for DnsEndpointType. \\\n * {@link KnownDnsEndpointType} can be used interchangeably with DnsEndpointType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **AzureDnsZone**\n */\nexport type DnsEndpointType = string;\n\n/** Known values of {@link GeoReplicationStatus} that the service accepts. */\nexport enum KnownGeoReplicationStatus {\n  /** Live */\n  Live = \"Live\",\n  /** Bootstrap */\n  Bootstrap = \"Bootstrap\",\n  /** Unavailable */\n  Unavailable = \"Unavailable\"\n}\n\n/**\n * Defines values for GeoReplicationStatus. \\\n * {@link KnownGeoReplicationStatus} can be used interchangeably with GeoReplicationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Live** \\\n * **Bootstrap** \\\n * **Unavailable**\n */\nexport type GeoReplicationStatus = string;\n\n/** Known values of {@link PostFailoverRedundancy} that the service accepts. */\nexport enum KnownPostFailoverRedundancy {\n  /** StandardLRS */\n  StandardLRS = \"Standard_LRS\",\n  /** StandardZRS */\n  StandardZRS = \"Standard_ZRS\"\n}\n\n/**\n * Defines values for PostFailoverRedundancy. \\\n * {@link KnownPostFailoverRedundancy} can be used interchangeably with PostFailoverRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_LRS** \\\n * **Standard_ZRS**\n */\nexport type PostFailoverRedundancy = string;\n\n/** Known values of {@link PostPlannedFailoverRedundancy} that the service accepts. */\nexport enum KnownPostPlannedFailoverRedundancy {\n  /** StandardGRS */\n  StandardGRS = \"Standard_GRS\",\n  /** StandardGzrs */\n  StandardGzrs = \"Standard_GZRS\",\n  /** StandardRagrs */\n  StandardRagrs = \"Standard_RAGRS\",\n  /** StandardRagzrs */\n  StandardRagzrs = \"Standard_RAGZRS\"\n}\n\n/**\n * Defines values for PostPlannedFailoverRedundancy. \\\n * {@link KnownPostPlannedFailoverRedundancy} can be used interchangeably with PostPlannedFailoverRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard_GRS** \\\n * **Standard_GZRS** \\\n * **Standard_RAGRS** \\\n * **Standard_RAGZRS**\n */\nexport type PostPlannedFailoverRedundancy = string;\n\n/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */\nexport enum KnownPrivateEndpointServiceConnectionStatus {\n  /** Pending */\n  Pending = \"Pending\",\n  /** Approved */\n  Approved = \"Approved\",\n  /** Rejected */\n  Rejected = \"Rejected\"\n}\n\n/**\n * Defines values for PrivateEndpointServiceConnectionStatus. \\\n * {@link KnownPrivateEndpointServiceConnectionStatus} can be used interchangeably with PrivateEndpointServiceConnectionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **Approved** \\\n * **Rejected**\n */\nexport type PrivateEndpointServiceConnectionStatus = string;\n\n/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointConnectionProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PrivateEndpointConnectionProvisioningState. \\\n * {@link KnownPrivateEndpointConnectionProvisioningState} can be used interchangeably with PrivateEndpointConnectionProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Creating** \\\n * **Deleting** \\\n * **Failed**\n */\nexport type PrivateEndpointConnectionProvisioningState = string;\n\n/** Known values of {@link BlobRestoreProgressStatus} that the service accepts. */\nexport enum KnownBlobRestoreProgressStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Complete */\n  Complete = \"Complete\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for BlobRestoreProgressStatus. \\\n * {@link KnownBlobRestoreProgressStatus} can be used interchangeably with BlobRestoreProgressStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Complete** \\\n * **Failed**\n */\nexport type BlobRestoreProgressStatus = string;\n\n/** Known values of {@link SkuConversionStatus} that the service accepts. */\nexport enum KnownSkuConversionStatus {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for SkuConversionStatus. \\\n * {@link KnownSkuConversionStatus} can be used interchangeably with SkuConversionStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type SkuConversionStatus = string;\n\n/** Known values of {@link Services} that the service accepts. */\nexport enum KnownServices {\n  /** B */\n  B = \"b\",\n  /** Q */\n  Q = \"q\",\n  /** T */\n  T = \"t\",\n  /** F */\n  F = \"f\"\n}\n\n/**\n * Defines values for Services. \\\n * {@link KnownServices} can be used interchangeably with Services,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **b** \\\n * **q** \\\n * **t** \\\n * **f**\n */\nexport type Services = string;\n\n/** Known values of {@link SignedResourceTypes} that the service accepts. */\nexport enum KnownSignedResourceTypes {\n  /** S */\n  S = \"s\",\n  /** C */\n  C = \"c\",\n  /** O */\n  O = \"o\"\n}\n\n/**\n * Defines values for SignedResourceTypes. \\\n * {@link KnownSignedResourceTypes} can be used interchangeably with SignedResourceTypes,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **s** \\\n * **c** \\\n * **o**\n */\nexport type SignedResourceTypes = string;\n\n/** Known values of {@link Permissions} that the service accepts. */\nexport enum KnownPermissions {\n  /** R */\n  R = \"r\",\n  /** D */\n  D = \"d\",\n  /** W */\n  W = \"w\",\n  /** L */\n  L = \"l\",\n  /** A */\n  A = \"a\",\n  /** C */\n  C = \"c\",\n  /** U */\n  U = \"u\",\n  /** P */\n  P = \"p\"\n}\n\n/**\n * Defines values for Permissions. \\\n * {@link KnownPermissions} can be used interchangeably with Permissions,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **r** \\\n * **d** \\\n * **w** \\\n * **l** \\\n * **a** \\\n * **c** \\\n * **u** \\\n * **p**\n */\nexport type Permissions = string;\n\n/** Known values of {@link SignedResource} that the service accepts. */\nexport enum KnownSignedResource {\n  /** B */\n  B = \"b\",\n  /** C */\n  C = \"c\",\n  /** F */\n  F = \"f\",\n  /** S */\n  S = \"s\"\n}\n\n/**\n * Defines values for SignedResource. \\\n * {@link KnownSignedResource} can be used interchangeably with SignedResource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **b** \\\n * **c** \\\n * **f** \\\n * **s**\n */\nexport type SignedResource = string;\n\n/** Known values of {@link MigrationStatus} that the service accepts. */\nexport enum KnownMigrationStatus {\n  /** Invalid */\n  Invalid = \"Invalid\",\n  /** SubmittedForConversion */\n  SubmittedForConversion = \"SubmittedForConversion\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Complete */\n  Complete = \"Complete\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for MigrationStatus. \\\n * {@link KnownMigrationStatus} can be used interchangeably with MigrationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **SubmittedForConversion** \\\n * **InProgress** \\\n * **Complete** \\\n * **Failed**\n */\nexport type MigrationStatus = string;\n\n/** Known values of {@link MigrationName} that the service accepts. */\nexport enum KnownMigrationName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for MigrationName. \\\n * {@link KnownMigrationName} can be used interchangeably with MigrationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type MigrationName = string;\n\n/** Known values of {@link ManagementPolicyName} that the service accepts. */\nexport enum KnownManagementPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for ManagementPolicyName. \\\n * {@link KnownManagementPolicyName} can be used interchangeably with ManagementPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ManagementPolicyName = string;\n\n/** Known values of {@link RuleType} that the service accepts. */\nexport enum KnownRuleType {\n  /** Lifecycle */\n  Lifecycle = \"Lifecycle\"\n}\n\n/**\n * Defines values for RuleType. \\\n * {@link KnownRuleType} can be used interchangeably with RuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Lifecycle**\n */\nexport type RuleType = string;\n\n/** Known values of {@link BlobInventoryPolicyName} that the service accepts. */\nexport enum KnownBlobInventoryPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for BlobInventoryPolicyName. \\\n * {@link KnownBlobInventoryPolicyName} can be used interchangeably with BlobInventoryPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type BlobInventoryPolicyName = string;\n\n/** Known values of {@link InventoryRuleType} that the service accepts. */\nexport enum KnownInventoryRuleType {\n  /** Inventory */\n  Inventory = \"Inventory\"\n}\n\n/**\n * Defines values for InventoryRuleType. \\\n * {@link KnownInventoryRuleType} can be used interchangeably with InventoryRuleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inventory**\n */\nexport type InventoryRuleType = string;\n\n/** Known values of {@link Format} that the service accepts. */\nexport enum KnownFormat {\n  /** Csv */\n  Csv = \"Csv\",\n  /** Parquet */\n  Parquet = \"Parquet\"\n}\n\n/**\n * Defines values for Format. \\\n * {@link KnownFormat} can be used interchangeably with Format,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Csv** \\\n * **Parquet**\n */\nexport type Format = string;\n\n/** Known values of {@link Schedule} that the service accepts. */\nexport enum KnownSchedule {\n  /** Daily */\n  Daily = \"Daily\",\n  /** Weekly */\n  Weekly = \"Weekly\"\n}\n\n/**\n * Defines values for Schedule. \\\n * {@link KnownSchedule} can be used interchangeably with Schedule,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Daily** \\\n * **Weekly**\n */\nexport type Schedule = string;\n\n/** Known values of {@link ObjectType} that the service accepts. */\nexport enum KnownObjectType {\n  /** Blob */\n  Blob = \"Blob\",\n  /** Container */\n  Container = \"Container\"\n}\n\n/**\n * Defines values for ObjectType. \\\n * {@link KnownObjectType} can be used interchangeably with ObjectType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Blob** \\\n * **Container**\n */\nexport type ObjectType = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link EncryptionScopeSource} that the service accepts. */\nexport enum KnownEncryptionScopeSource {\n  /** MicrosoftStorage */\n  MicrosoftStorage = \"Microsoft.Storage\",\n  /** MicrosoftKeyVault */\n  MicrosoftKeyVault = \"Microsoft.KeyVault\"\n}\n\n/**\n * Defines values for EncryptionScopeSource. \\\n * {@link KnownEncryptionScopeSource} can be used interchangeably with EncryptionScopeSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Storage** \\\n * **Microsoft.KeyVault**\n */\nexport type EncryptionScopeSource = string;\n\n/** Known values of {@link EncryptionScopeState} that the service accepts. */\nexport enum KnownEncryptionScopeState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for EncryptionScopeState. \\\n * {@link KnownEncryptionScopeState} can be used interchangeably with EncryptionScopeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type EncryptionScopeState = string;\n\n/** Known values of {@link ListEncryptionScopesInclude} that the service accepts. */\nexport enum KnownListEncryptionScopesInclude {\n  /** All */\n  All = \"All\",\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ListEncryptionScopesInclude. \\\n * {@link KnownListEncryptionScopesInclude} can be used interchangeably with ListEncryptionScopesInclude,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All** \\\n * **Enabled** \\\n * **Disabled**\n */\nexport type ListEncryptionScopesInclude = string;\n\n/** Known values of {@link AllowedMethods} that the service accepts. */\nexport enum KnownAllowedMethods {\n  /** Delete */\n  Delete = \"DELETE\",\n  /** GET */\n  GET = \"GET\",\n  /** Head */\n  Head = \"HEAD\",\n  /** Merge */\n  Merge = \"MERGE\",\n  /** Post */\n  Post = \"POST\",\n  /** Options */\n  Options = \"OPTIONS\",\n  /** PUT */\n  PUT = \"PUT\",\n  /** Patch */\n  Patch = \"PATCH\",\n  /** Connect */\n  Connect = \"CONNECT\",\n  /** Trace */\n  Trace = \"TRACE\"\n}\n\n/**\n * Defines values for AllowedMethods. \\\n * {@link KnownAllowedMethods} can be used interchangeably with AllowedMethods,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DELETE** \\\n * **GET** \\\n * **HEAD** \\\n * **MERGE** \\\n * **POST** \\\n * **OPTIONS** \\\n * **PUT** \\\n * **PATCH** \\\n * **CONNECT** \\\n * **TRACE**\n */\nexport type AllowedMethods = string;\n\n/** Known values of {@link Name} that the service accepts. */\nexport enum KnownName {\n  /** AccessTimeTracking */\n  AccessTimeTracking = \"AccessTimeTracking\"\n}\n\n/**\n * Defines values for Name. \\\n * {@link KnownName} can be used interchangeably with Name,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AccessTimeTracking**\n */\nexport type Name = string;\n\n/** Known values of {@link ListContainersInclude} that the service accepts. */\nexport enum KnownListContainersInclude {\n  /** Deleted */\n  Deleted = \"deleted\"\n}\n\n/**\n * Defines values for ListContainersInclude. \\\n * {@link KnownListContainersInclude} can be used interchangeably with ListContainersInclude,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **deleted**\n */\nexport type ListContainersInclude = string;\n\n/** Known values of {@link LeaseStatus} that the service accepts. */\nexport enum KnownLeaseStatus {\n  /** Locked */\n  Locked = \"Locked\",\n  /** Unlocked */\n  Unlocked = \"Unlocked\"\n}\n\n/**\n * Defines values for LeaseStatus. \\\n * {@link KnownLeaseStatus} can be used interchangeably with LeaseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Locked** \\\n * **Unlocked**\n */\nexport type LeaseStatus = string;\n\n/** Known values of {@link LeaseState} that the service accepts. */\nexport enum KnownLeaseState {\n  /** Available */\n  Available = \"Available\",\n  /** Leased */\n  Leased = \"Leased\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Breaking */\n  Breaking = \"Breaking\",\n  /** Broken */\n  Broken = \"Broken\"\n}\n\n/**\n * Defines values for LeaseState. \\\n * {@link KnownLeaseState} can be used interchangeably with LeaseState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Available** \\\n * **Leased** \\\n * **Expired** \\\n * **Breaking** \\\n * **Broken**\n */\nexport type LeaseState = string;\n\n/** Known values of {@link LeaseDuration} that the service accepts. */\nexport enum KnownLeaseDuration {\n  /** Infinite */\n  Infinite = \"Infinite\",\n  /** Fixed */\n  Fixed = \"Fixed\"\n}\n\n/**\n * Defines values for LeaseDuration. \\\n * {@link KnownLeaseDuration} can be used interchangeably with LeaseDuration,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Infinite** \\\n * **Fixed**\n */\nexport type LeaseDuration = string;\n\n/** Known values of {@link ImmutabilityPolicyState} that the service accepts. */\nexport enum KnownImmutabilityPolicyState {\n  /** Locked */\n  Locked = \"Locked\",\n  /** Unlocked */\n  Unlocked = \"Unlocked\"\n}\n\n/**\n * Defines values for ImmutabilityPolicyState. \\\n * {@link KnownImmutabilityPolicyState} can be used interchangeably with ImmutabilityPolicyState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Locked** \\\n * **Unlocked**\n */\nexport type ImmutabilityPolicyState = string;\n\n/** Known values of {@link ImmutabilityPolicyUpdateType} that the service accepts. */\nexport enum KnownImmutabilityPolicyUpdateType {\n  /** Put */\n  Put = \"put\",\n  /** Lock */\n  Lock = \"lock\",\n  /** Extend */\n  Extend = \"extend\"\n}\n\n/**\n * Defines values for ImmutabilityPolicyUpdateType. \\\n * {@link KnownImmutabilityPolicyUpdateType} can be used interchangeably with ImmutabilityPolicyUpdateType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **put** \\\n * **lock** \\\n * **extend**\n */\nexport type ImmutabilityPolicyUpdateType = string;\n\n/** Known values of {@link MigrationState} that the service accepts. */\nexport enum KnownMigrationState {\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Completed */\n  Completed = \"Completed\"\n}\n\n/**\n * Defines values for MigrationState. \\\n * {@link KnownMigrationState} can be used interchangeably with MigrationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Completed**\n */\nexport type MigrationState = string;\n\n/** Known values of {@link LeaseContainerRequestAction} that the service accepts. */\nexport enum KnownLeaseContainerRequestAction {\n  /** Acquire */\n  Acquire = \"Acquire\",\n  /** Renew */\n  Renew = \"Renew\",\n  /** Change */\n  Change = \"Change\",\n  /** Release */\n  Release = \"Release\",\n  /** Break */\n  Break = \"Break\"\n}\n\n/**\n * Defines values for LeaseContainerRequestAction. \\\n * {@link KnownLeaseContainerRequestAction} can be used interchangeably with LeaseContainerRequestAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Acquire** \\\n * **Renew** \\\n * **Change** \\\n * **Release** \\\n * **Break**\n */\nexport type LeaseContainerRequestAction = string;\n\n/** Known values of {@link EnabledProtocols} that the service accepts. */\nexport enum KnownEnabledProtocols {\n  /** SMB */\n  SMB = \"SMB\",\n  /** NFS */\n  NFS = \"NFS\"\n}\n\n/**\n * Defines values for EnabledProtocols. \\\n * {@link KnownEnabledProtocols} can be used interchangeably with EnabledProtocols,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SMB** \\\n * **NFS**\n */\nexport type EnabledProtocols = string;\n\n/** Known values of {@link RootSquashType} that the service accepts. */\nexport enum KnownRootSquashType {\n  /** NoRootSquash */\n  NoRootSquash = \"NoRootSquash\",\n  /** RootSquash */\n  RootSquash = \"RootSquash\",\n  /** AllSquash */\n  AllSquash = \"AllSquash\"\n}\n\n/**\n * Defines values for RootSquashType. \\\n * {@link KnownRootSquashType} can be used interchangeably with RootSquashType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NoRootSquash** \\\n * **RootSquash** \\\n * **AllSquash**\n */\nexport type RootSquashType = string;\n\n/** Known values of {@link ShareAccessTier} that the service accepts. */\nexport enum KnownShareAccessTier {\n  /** TransactionOptimized */\n  TransactionOptimized = \"TransactionOptimized\",\n  /** Hot */\n  Hot = \"Hot\",\n  /** Cool */\n  Cool = \"Cool\",\n  /** Premium */\n  Premium = \"Premium\"\n}\n\n/**\n * Defines values for ShareAccessTier. \\\n * {@link KnownShareAccessTier} can be used interchangeably with ShareAccessTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TransactionOptimized** \\\n * **Hot** \\\n * **Cool** \\\n * **Premium**\n */\nexport type ShareAccessTier = string;\n\n/** Known values of {@link LeaseShareAction} that the service accepts. */\nexport enum KnownLeaseShareAction {\n  /** Acquire */\n  Acquire = \"Acquire\",\n  /** Renew */\n  Renew = \"Renew\",\n  /** Change */\n  Change = \"Change\",\n  /** Release */\n  Release = \"Release\",\n  /** Break */\n  Break = \"Break\"\n}\n\n/**\n * Defines values for LeaseShareAction. \\\n * {@link KnownLeaseShareAction} can be used interchangeably with LeaseShareAction,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Acquire** \\\n * **Renew** \\\n * **Change** \\\n * **Release** \\\n * **Break**\n */\nexport type LeaseShareAction = string;\n/** Defines values for SkuTier. */\nexport type SkuTier = \"Standard\" | \"Premium\";\n/** Defines values for Reason. */\nexport type Reason = \"AccountNameInvalid\" | \"AlreadyExists\";\n/** Defines values for DefaultAction. */\nexport type DefaultAction = \"Allow\" | \"Deny\";\n/** Defines values for AccessTier. */\nexport type AccessTier = \"Hot\" | \"Cool\" | \"Premium\";\n/** Defines values for ProvisioningState. */\nexport type ProvisioningState = \"Creating\" | \"ResolvingDNS\" | \"Succeeded\";\n/** Defines values for AccountStatus. */\nexport type AccountStatus = \"available\" | \"unavailable\";\n/** Defines values for StorageAccountExpand. */\nexport type StorageAccountExpand = \"geoReplicationStats\" | \"blobRestoreStatus\";\n/** Defines values for KeyPermission. */\nexport type KeyPermission = \"Read\" | \"Full\";\n/** Defines values for UsageUnit. */\nexport type UsageUnit =\n  | \"Count\"\n  | \"Bytes\"\n  | \"Seconds\"\n  | \"Percent\"\n  | \"CountsPerSecond\"\n  | \"BytesPerSecond\";\n/** Defines values for HttpProtocol. */\nexport type HttpProtocol = \"https,http\" | \"https\";\n/** Defines values for PublicAccess. */\nexport type PublicAccess = \"Container\" | \"Blob\" | \"None\";\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface SkusListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SkusListResponse = StorageSkuListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type StorageAccountsCheckNameAvailabilityResponse = CheckNameAvailabilityResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type StorageAccountsCreateResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StorageAccountsGetPropertiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus. */\n  expand?: StorageAccountExpand;\n}\n\n/** Contains response data for the getProperties operation. */\nexport type StorageAccountsGetPropertiesResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type StorageAccountsUpdateResponse = StorageAccount;\n\n/** Optional parameters. */\nexport interface StorageAccountsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type StorageAccountsListResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type StorageAccountsListByResourceGroupResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type StorageAccountsListKeysResponse = StorageAccountListKeysResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsRegenerateKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateKey operation. */\nexport type StorageAccountsRegenerateKeyResponse = StorageAccountListKeysResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListAccountSASOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listAccountSAS operation. */\nexport type StorageAccountsListAccountSASResponse = ListAccountSasResponse;\n\n/** Optional parameters. */\nexport interface StorageAccountsListServiceSASOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listServiceSAS operation. */\nexport type StorageAccountsListServiceSASResponse = ListServiceSasResponse;\n\n/** Optional parameters. */\nexport interface StorageAccountsFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsHierarchicalNamespaceMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsCustomerInitiatedMigrationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StorageAccountsGetCustomerInitiatedMigrationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getCustomerInitiatedMigration operation. */\nexport type StorageAccountsGetCustomerInitiatedMigrationResponse = StorageAccountMigration;\n\n/** Optional parameters. */\nexport interface StorageAccountsRestoreBlobRangesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the restoreBlobRanges operation. */\nexport type StorageAccountsRestoreBlobRangesResponse = BlobRestoreStatus;\n\n/** Optional parameters. */\nexport interface StorageAccountsRevokeUserDelegationKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface StorageAccountsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StorageAccountsListNextResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface StorageAccountsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type StorageAccountsListByResourceGroupNextResponse = StorageAccountListResult;\n\n/** Optional parameters. */\nexport interface DeletedAccountsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DeletedAccountsListResponse = DeletedAccountListResult;\n\n/** Optional parameters. */\nexport interface DeletedAccountsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeletedAccountsGetResponse = DeletedAccount;\n\n/** Optional parameters. */\nexport interface DeletedAccountsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeletedAccountsListNextResponse = DeletedAccountListResult;\n\n/** Optional parameters. */\nexport interface UsagesListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type UsagesListByLocationResponse = UsageListResult;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagementPoliciesGetResponse = ManagementPolicy;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagementPoliciesCreateOrUpdateResponse = ManagementPolicy;\n\n/** Optional parameters. */\nexport interface ManagementPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BlobInventoryPoliciesGetResponse = BlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BlobInventoryPoliciesCreateOrUpdateResponse = BlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobInventoryPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BlobInventoryPoliciesListResponse = ListBlobInventoryPolicy;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type PrivateEndpointConnectionsPutResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListByStorageAccountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStorageAccount operation. */\nexport type PrivateLinkResourcesListByStorageAccountResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ObjectReplicationPoliciesListResponse = ObjectReplicationPolicies;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ObjectReplicationPoliciesGetResponse = ObjectReplicationPolicy;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ObjectReplicationPoliciesCreateOrUpdateResponse = ObjectReplicationPolicy;\n\n/** Optional parameters. */\nexport interface ObjectReplicationPoliciesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LocalUsersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type LocalUsersListResponse = LocalUsers;\n\n/** Optional parameters. */\nexport interface LocalUsersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LocalUsersGetResponse = LocalUser;\n\n/** Optional parameters. */\nexport interface LocalUsersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LocalUsersCreateOrUpdateResponse = LocalUser;\n\n/** Optional parameters. */\nexport interface LocalUsersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface LocalUsersListKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listKeys operation. */\nexport type LocalUsersListKeysResponse = LocalUserKeys;\n\n/** Optional parameters. */\nexport interface LocalUsersRegeneratePasswordOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regeneratePassword operation. */\nexport type LocalUsersRegeneratePasswordResponse = LocalUserRegeneratePasswordResult;\n\n/** Optional parameters. */\nexport interface EncryptionScopesPutOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the put operation. */\nexport type EncryptionScopesPutResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesPatchOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the patch operation. */\nexport type EncryptionScopesPatchResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EncryptionScopesGetResponse = EncryptionScope;\n\n/** Optional parameters. */\nexport interface EncryptionScopesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, specifies the maximum number of encryption scopes that will be included in the list response. */\n  maxpagesize?: number;\n  /** Optional. When specified, only encryption scope names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional, when specified, will list encryption scopes with the specific state. Defaults to All */\n  include?: ListEncryptionScopesInclude;\n}\n\n/** Contains response data for the list operation. */\nexport type EncryptionScopesListResponse = EncryptionScopeListResult;\n\n/** Optional parameters. */\nexport interface EncryptionScopesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type EncryptionScopesListNextResponse = EncryptionScopeListResult;\n\n/** Optional parameters. */\nexport interface BlobServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BlobServicesListResponse = BlobServiceItems;\n\n/** Optional parameters. */\nexport interface BlobServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type BlobServicesSetServicePropertiesResponse = BlobServiceProperties;\n\n/** Optional parameters. */\nexport interface BlobServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type BlobServicesGetServicePropertiesResponse = BlobServiceProperties;\n\n/** Optional parameters. */\nexport interface BlobContainersListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, only container names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional. Specified maximum number of containers that can be included in the list. */\n  maxpagesize?: string;\n  /** Optional, used to include the properties for soft deleted blob containers. */\n  include?: ListContainersInclude;\n}\n\n/** Contains response data for the list operation. */\nexport type BlobContainersListResponse = ListContainerItems;\n\n/** Optional parameters. */\nexport interface BlobContainersCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type BlobContainersCreateResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type BlobContainersUpdateResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BlobContainersGetResponse = BlobContainer;\n\n/** Optional parameters. */\nexport interface BlobContainersDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface BlobContainersSetLegalHoldOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setLegalHold operation. */\nexport type BlobContainersSetLegalHoldResponse = LegalHold;\n\n/** Optional parameters. */\nexport interface BlobContainersClearLegalHoldOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the clearLegalHold operation. */\nexport type BlobContainersClearLegalHoldResponse = LegalHold;\n\n/** Optional parameters. */\nexport interface BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ImmutabilityPolicy Properties that will be created or updated to a blob container. */\n  parameters?: ImmutabilityPolicy;\n  /** The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the createOrUpdateImmutabilityPolicy operation. */\nexport type BlobContainersCreateOrUpdateImmutabilityPolicyResponse = BlobContainersCreateOrUpdateImmutabilityPolicyHeaders &\n  ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersGetImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied. */\n  ifMatch?: string;\n}\n\n/** Contains response data for the getImmutabilityPolicy operation. */\nexport type BlobContainersGetImmutabilityPolicyResponse = BlobContainersGetImmutabilityPolicyHeaders &\n  ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersDeleteImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteImmutabilityPolicy operation. */\nexport type BlobContainersDeleteImmutabilityPolicyResponse = BlobContainersDeleteImmutabilityPolicyHeaders &\n  ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersLockImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the lockImmutabilityPolicy operation. */\nexport type BlobContainersLockImmutabilityPolicyResponse = BlobContainersLockImmutabilityPolicyHeaders &\n  ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersExtendImmutabilityPolicyOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ImmutabilityPolicy Properties that will be extended for a blob container. */\n  parameters?: ImmutabilityPolicy;\n}\n\n/** Contains response data for the extendImmutabilityPolicy operation. */\nexport type BlobContainersExtendImmutabilityPolicyResponse = BlobContainersExtendImmutabilityPolicyHeaders &\n  ImmutabilityPolicy;\n\n/** Optional parameters. */\nexport interface BlobContainersLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Lease Container request body. */\n  parameters?: LeaseContainerRequest;\n}\n\n/** Contains response data for the lease operation. */\nexport type BlobContainersLeaseResponse = LeaseContainerResponse;\n\n/** Optional parameters. */\nexport interface BlobContainersObjectLevelWormOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BlobContainersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BlobContainersListNextResponse = ListContainerItems;\n\n/** Optional parameters. */\nexport interface FileServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type FileServicesListResponse = FileServiceItems;\n\n/** Optional parameters. */\nexport interface FileServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type FileServicesSetServicePropertiesResponse = FileServiceProperties;\n\n/** Optional parameters. */\nexport interface FileServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type FileServicesGetServicePropertiesResponse = FileServiceProperties;\n\n/** Optional parameters. */\nexport interface FileSharesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. When specified, only share names starting with the filter will be listed. */\n  filter?: string;\n  /** Optional. Specified maximum number of shares that can be included in the list. */\n  maxpagesize?: string;\n  /** Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ',' */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type FileSharesListResponse = FileShareItems;\n\n/** Optional parameters. */\nexport interface FileSharesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ',' */\n  expand?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type FileSharesCreateResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type FileSharesUpdateResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to expand the properties within share's properties. Valid values are: stats. Should be passed as a string with delimiter ','. */\n  expand?: string;\n  /** Optional, used to retrieve properties of a snapshot. */\n  xMsSnapshot?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type FileSharesGetResponse = FileShare;\n\n/** Optional parameters. */\nexport interface FileSharesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional, used to delete a snapshot. */\n  xMsSnapshot?: string;\n  /** Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails. */\n  include?: string;\n}\n\n/** Optional parameters. */\nexport interface FileSharesRestoreOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FileSharesLeaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional. Specify the snapshot time to lease a snapshot. */\n  xMsSnapshot?: string;\n  /** Lease Share request body. */\n  parameters?: LeaseShareRequest;\n}\n\n/** Contains response data for the lease operation. */\nexport type FileSharesLeaseResponse = FileSharesLeaseHeaders &\n  LeaseShareResponse;\n\n/** Optional parameters. */\nexport interface FileSharesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type FileSharesListNextResponse = FileShareItems;\n\n/** Optional parameters. */\nexport interface QueueServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type QueueServicesListResponse = ListQueueServices;\n\n/** Optional parameters. */\nexport interface QueueServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type QueueServicesSetServicePropertiesResponse = QueueServiceProperties;\n\n/** Optional parameters. */\nexport interface QueueServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type QueueServicesGetServicePropertiesResponse = QueueServiceProperties;\n\n/** Optional parameters. */\nexport interface QueueCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type QueueCreateResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type QueueUpdateResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type QueueGetResponse = StorageQueue;\n\n/** Optional parameters. */\nexport interface QueueDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface QueueListOptionalParams extends coreClient.OperationOptions {\n  /** Optional, When specified, only the queues with a name starting with the given filter will be listed. */\n  filter?: string;\n  /** Optional, a maximum number of queues that should be included in a list queue response */\n  maxpagesize?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type QueueListResponse = ListQueueResource;\n\n/** Optional parameters. */\nexport interface QueueListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type QueueListNextResponse = ListQueueResource;\n\n/** Optional parameters. */\nexport interface TableServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TableServicesListResponse = ListTableServices;\n\n/** Optional parameters. */\nexport interface TableServicesSetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the setServiceProperties operation. */\nexport type TableServicesSetServicePropertiesResponse = TableServiceProperties;\n\n/** Optional parameters. */\nexport interface TableServicesGetServicePropertiesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getServiceProperties operation. */\nexport type TableServicesGetServicePropertiesResponse = TableServiceProperties;\n\n/** Optional parameters. */\nexport interface TableCreateOptionalParams extends coreClient.OperationOptions {\n  /** The parameters to provide to create a table. */\n  parameters?: Table;\n}\n\n/** Contains response data for the create operation. */\nexport type TableCreateResponse = Table;\n\n/** Optional parameters. */\nexport interface TableUpdateOptionalParams extends coreClient.OperationOptions {\n  /** The parameters to provide to create a table. */\n  parameters?: Table;\n}\n\n/** Contains response data for the update operation. */\nexport type TableUpdateResponse = Table;\n\n/** Optional parameters. */\nexport interface TableGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TableGetResponse = Table;\n\n/** Optional parameters. */\nexport interface TableDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface TableListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type TableListResponse = ListTableResource;\n\n/** Optional parameters. */\nexport interface TableListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type TableListNextResponse = ListTableResource;\n\n/** Optional parameters. */\nexport interface StorageManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceSpecification: {\n        serializedName: \"properties.serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSpecification\",\n    modelProperties: {\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Dimension\"\n            }\n          }\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fillGapWithZero: {\n        serializedName: \"fillGapWithZero\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceIdDimensionNameOverride: {\n        serializedName: \"resourceIdDimensionNameOverride\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Dimension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Dimension\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageSkuListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageSkuListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuInformation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuInformation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Standard\", \"Premium\"]\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SKUCapability\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Restriction\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SKUCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SKUCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Restriction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Restriction\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountCheckNameAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountCheckNameAvailabilityParameters\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue: \"Microsoft.Storage/storageAccounts\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResult\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"AccountNameInvalid\", \"AlreadyExists\"]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountCreateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountCreateParameters\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      allowedCopyScope: {\n        serializedName: \"properties.allowedCopyScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sasPolicy: {\n        serializedName: \"properties.sasPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SasPolicy\"\n        }\n      },\n      keyPolicy: {\n        serializedName: \"properties.keyPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyPolicy\"\n        }\n      },\n      customDomain: {\n        serializedName: \"properties.customDomain\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomDomain\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      networkRuleSet: {\n        serializedName: \"properties.networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSet\"\n        }\n      },\n      accessTier: {\n        serializedName: \"properties.accessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Hot\", \"Cool\", \"Premium\"]\n        }\n      },\n      azureFilesIdentityBasedAuthentication: {\n        serializedName: \"properties.azureFilesIdentityBasedAuthentication\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureFilesIdentityBasedAuthentication\"\n        }\n      },\n      enableHttpsTrafficOnly: {\n        serializedName: \"properties.supportsHttpsTrafficOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSftpEnabled: {\n        serializedName: \"properties.isSftpEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isLocalUserEnabled: {\n        serializedName: \"properties.isLocalUserEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHnsEnabled: {\n        serializedName: \"properties.isHnsEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      largeFileSharesState: {\n        serializedName: \"properties.largeFileSharesState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      routingPreference: {\n        serializedName: \"properties.routingPreference\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingPreference\"\n        }\n      },\n      allowBlobPublicAccess: {\n        serializedName: \"properties.allowBlobPublicAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minimumTlsVersion: {\n        serializedName: \"properties.minimumTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowSharedKeyAccess: {\n        serializedName: \"properties.allowSharedKeyAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableNfsV3: {\n        serializedName: \"properties.isNfsV3Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowCrossTenantReplication: {\n        serializedName: \"properties.allowCrossTenantReplication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultToOAuthAuthentication: {\n        serializedName: \"properties.defaultToOAuthAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      immutableStorageWithVersioning: {\n        serializedName: \"properties.immutableStorageWithVersioning\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutableStorageAccount\"\n        }\n      },\n      dnsEndpointType: {\n        serializedName: \"properties.dnsEndpointType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Standard\", \"Premium\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedLocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedLocation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Identity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"UserAssignedIdentity\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SasPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SasPolicy\",\n    modelProperties: {\n      sasExpirationPeriod: {\n        serializedName: \"sasExpirationPeriod\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationAction: {\n        defaultValue: \"Log\",\n        serializedName: \"expirationAction\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyPolicy\",\n    modelProperties: {\n      keyExpirationPeriodInDays: {\n        serializedName: \"keyExpirationPeriodInDays\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomain: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomain\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      useSubDomainName: {\n        serializedName: \"useSubDomainName\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Encryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Encryption\",\n    modelProperties: {\n      services: {\n        serializedName: \"services\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionServices\"\n        }\n      },\n      keySource: {\n        defaultValue: \"Microsoft.Storage\",\n        serializedName: \"keySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requireInfrastructureEncryption: {\n        serializedName: \"requireInfrastructureEncryption\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"keyvaultproperties\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyVaultProperties\"\n        }\n      },\n      encryptionIdentity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionServices: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionServices\",\n    modelProperties: {\n      blob: {\n        serializedName: \"blob\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionService\"\n        }\n      },\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionService\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionService\"\n        }\n      },\n      queue: {\n        serializedName: \"queue\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionService\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionService\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastEnabledTime: {\n        serializedName: \"lastEnabledTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      keyType: {\n        serializedName: \"keyType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultProperties\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyname\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVersion: {\n        serializedName: \"keyversion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultUri: {\n        serializedName: \"keyvaulturi\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentVersionedKeyIdentifier: {\n        serializedName: \"currentVersionedKeyIdentifier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKeyRotationTimestamp: {\n        serializedName: \"lastKeyRotationTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      currentVersionedKeyExpirationTimestamp: {\n        serializedName: \"currentVersionedKeyExpirationTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionIdentity\",\n    modelProperties: {\n      encryptionUserAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionFederatedIdentityClientId: {\n        serializedName: \"federatedIdentityClientId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkRuleSet: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkRuleSet\",\n    modelProperties: {\n      bypass: {\n        defaultValue: \"AzureServices\",\n        serializedName: \"bypass\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceAccessRules: {\n        serializedName: \"resourceAccessRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceAccessRule\"\n            }\n          }\n        }\n      },\n      virtualNetworkRules: {\n        serializedName: \"virtualNetworkRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualNetworkRule\"\n            }\n          }\n        }\n      },\n      ipRules: {\n        serializedName: \"ipRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IPRule\"\n            }\n          }\n        }\n      },\n      defaultAction: {\n        defaultValue: \"Allow\",\n        serializedName: \"defaultAction\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Allow\", \"Deny\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceAccessRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceAccessRule\",\n    modelProperties: {\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualNetworkRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualNetworkRule\",\n    modelProperties: {\n      virtualNetworkResourceId: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        defaultValue: \"Allow\",\n        isConstant: true,\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IPRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IPRule\",\n    modelProperties: {\n      iPAddressOrRange: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        defaultValue: \"Allow\",\n        isConstant: true,\n        serializedName: \"action\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFilesIdentityBasedAuthentication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureFilesIdentityBasedAuthentication\",\n    modelProperties: {\n      directoryServiceOptions: {\n        serializedName: \"directoryServiceOptions\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      activeDirectoryProperties: {\n        serializedName: \"activeDirectoryProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"ActiveDirectoryProperties\"\n        }\n      },\n      defaultSharePermission: {\n        serializedName: \"defaultSharePermission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ActiveDirectoryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ActiveDirectoryProperties\",\n    modelProperties: {\n      domainName: {\n        serializedName: \"domainName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      netBiosDomainName: {\n        serializedName: \"netBiosDomainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      forestName: {\n        serializedName: \"forestName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      domainGuid: {\n        serializedName: \"domainGuid\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      domainSid: {\n        serializedName: \"domainSid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureStorageSid: {\n        serializedName: \"azureStorageSid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      samAccountName: {\n        serializedName: \"samAccountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountType: {\n        serializedName: \"accountType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RoutingPreference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RoutingPreference\",\n    modelProperties: {\n      routingChoice: {\n        serializedName: \"routingChoice\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publishMicrosoftEndpoints: {\n        serializedName: \"publishMicrosoftEndpoints\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publishInternetEndpoints: {\n        serializedName: \"publishInternetEndpoints\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImmutableStorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImmutableStorageAccount\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      immutabilityPolicy: {\n        serializedName: \"immutabilityPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccountImmutabilityPolicyProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccountImmutabilityPolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AccountImmutabilityPolicyProperties\",\n    modelProperties: {\n      immutabilityPeriodSinceCreationInDays: {\n        constraints: {\n          InclusiveMaximum: 146000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"immutabilityPeriodSinceCreationInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowProtectedAppendWrites: {\n        serializedName: \"allowProtectedAppendWrites\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Endpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Endpoints\",\n    modelProperties: {\n      blob: {\n        serializedName: \"blob\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queue: {\n        serializedName: \"queue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      file: {\n        serializedName: \"file\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      web: {\n        serializedName: \"web\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dfs: {\n        serializedName: \"dfs\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      microsoftEndpoints: {\n        serializedName: \"microsoftEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageAccountMicrosoftEndpoints\"\n        }\n      },\n      internetEndpoints: {\n        serializedName: \"internetEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageAccountInternetEndpoints\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountMicrosoftEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountMicrosoftEndpoints\",\n    modelProperties: {\n      blob: {\n        serializedName: \"blob\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queue: {\n        serializedName: \"queue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"table\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      file: {\n        serializedName: \"file\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      web: {\n        serializedName: \"web\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dfs: {\n        serializedName: \"dfs\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountInternetEndpoints: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountInternetEndpoints\",\n    modelProperties: {\n      blob: {\n        serializedName: \"blob\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      file: {\n        serializedName: \"file\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      web: {\n        serializedName: \"web\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dfs: {\n        serializedName: \"dfs\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyCreationTime: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyCreationTime\",\n    modelProperties: {\n      key1: {\n        serializedName: \"key1\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      key2: {\n        serializedName: \"key2\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoReplicationStats: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplicationStats\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSyncTime: {\n        serializedName: \"lastSyncTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      canFailover: {\n        serializedName: \"canFailover\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      canPlannedFailover: {\n        serializedName: \"canPlannedFailover\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      postFailoverRedundancy: {\n        serializedName: \"postFailoverRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      postPlannedFailoverRedundancy: {\n        serializedName: \"postPlannedFailoverRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionRequired: {\n        serializedName: \"actionRequired\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRestoreStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobRestoreStatus\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      failureReason: {\n        serializedName: \"failureReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreId: {\n        serializedName: \"restoreId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobRestoreParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRestoreParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobRestoreParameters\",\n    modelProperties: {\n      timeToRestore: {\n        serializedName: \"timeToRestore\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      blobRanges: {\n        serializedName: \"blobRanges\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobRestoreRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRestoreRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobRestoreRange\",\n    modelProperties: {\n      startRange: {\n        serializedName: \"startRange\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endRange: {\n        serializedName: \"endRange\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountSkuConversionStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountSkuConversionStatus\",\n    modelProperties: {\n      skuConversionStatus: {\n        serializedName: \"skuConversionStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetSkuName: {\n        serializedName: \"targetSkuName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountUpdateParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountUpdateParameters\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customDomain: {\n        serializedName: \"properties.customDomain\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomDomain\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      sasPolicy: {\n        serializedName: \"properties.sasPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SasPolicy\"\n        }\n      },\n      keyPolicy: {\n        serializedName: \"properties.keyPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyPolicy\"\n        }\n      },\n      accessTier: {\n        serializedName: \"properties.accessTier\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Hot\", \"Cool\", \"Premium\"]\n        }\n      },\n      azureFilesIdentityBasedAuthentication: {\n        serializedName: \"properties.azureFilesIdentityBasedAuthentication\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureFilesIdentityBasedAuthentication\"\n        }\n      },\n      enableHttpsTrafficOnly: {\n        serializedName: \"properties.supportsHttpsTrafficOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSftpEnabled: {\n        serializedName: \"properties.isSftpEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isLocalUserEnabled: {\n        serializedName: \"properties.isLocalUserEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkRuleSet: {\n        serializedName: \"properties.networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSet\"\n        }\n      },\n      largeFileSharesState: {\n        serializedName: \"properties.largeFileSharesState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      routingPreference: {\n        serializedName: \"properties.routingPreference\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingPreference\"\n        }\n      },\n      allowBlobPublicAccess: {\n        serializedName: \"properties.allowBlobPublicAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minimumTlsVersion: {\n        serializedName: \"properties.minimumTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowSharedKeyAccess: {\n        serializedName: \"properties.allowSharedKeyAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowCrossTenantReplication: {\n        serializedName: \"properties.allowCrossTenantReplication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultToOAuthAuthentication: {\n        serializedName: \"properties.defaultToOAuthAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      immutableStorageWithVersioning: {\n        serializedName: \"properties.immutableStorageWithVersioning\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutableStorageAccount\"\n        }\n      },\n      allowedCopyScope: {\n        serializedName: \"properties.allowedCopyScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsEndpointType: {\n        serializedName: \"properties.dnsEndpointType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedAccountListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedAccountListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeletedAccount\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorResponseBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccount\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountListKeysResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountListKeysResult\",\n    modelProperties: {\n      keys: {\n        serializedName: \"keys\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageAccountKey\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountKey\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Read\", \"Full\"]\n        }\n      },\n      creationTime: {\n        serializedName: \"creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountRegenerateKeyParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountRegenerateKeyParameters\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Count\",\n            \"Bytes\",\n            \"Seconds\",\n            \"Percent\",\n            \"CountsPerSecond\",\n            \"BytesPerSecond\"\n          ]\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"UsageName\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccountSasParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AccountSasParameters\",\n    modelProperties: {\n      services: {\n        serializedName: \"signedServices\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceTypes: {\n        serializedName: \"signedResourceTypes\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"signedPermission\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      iPAddressOrRange: {\n        serializedName: \"signedIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      protocols: {\n        serializedName: \"signedProtocol\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"https,http\", \"https\"]\n        }\n      },\n      sharedAccessStartTime: {\n        serializedName: \"signedStart\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sharedAccessExpiryTime: {\n        serializedName: \"signedExpiry\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      keyToSign: {\n        serializedName: \"keyToSign\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListAccountSasResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListAccountSasResponse\",\n    modelProperties: {\n      accountSasToken: {\n        serializedName: \"accountSasToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSasParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSasParameters\",\n    modelProperties: {\n      canonicalizedResource: {\n        serializedName: \"canonicalizedResource\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"signedResource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"signedPermission\",\n        type: {\n          name: \"String\"\n        }\n      },\n      iPAddressOrRange: {\n        serializedName: \"signedIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      protocols: {\n        serializedName: \"signedProtocol\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"https,http\", \"https\"]\n        }\n      },\n      sharedAccessStartTime: {\n        serializedName: \"signedStart\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sharedAccessExpiryTime: {\n        serializedName: \"signedExpiry\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      identifier: {\n        constraints: {\n          MaxLength: 64\n        },\n        serializedName: \"signedIdentifier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKeyStart: {\n        serializedName: \"startPk\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partitionKeyEnd: {\n        serializedName: \"endPk\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rowKeyStart: {\n        serializedName: \"startRk\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rowKeyEnd: {\n        serializedName: \"endRk\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyToSign: {\n        serializedName: \"keyToSign\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"rscc\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"rscd\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"rsce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"rscl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"rsct\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListServiceSasResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListServiceSasResponse\",\n    modelProperties: {\n      serviceSasToken: {\n        serializedName: \"serviceSasToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountMigration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountMigration\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetSkuName: {\n        serializedName: \"properties.targetSkuName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationStatus: {\n        serializedName: \"properties.migrationStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationFailedReason: {\n        serializedName: \"properties.migrationFailedReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      migrationFailedDetailedReason: {\n        serializedName: \"properties.migrationFailedDetailedReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponseAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponseAutoGenerated\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicySchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicySchema\",\n    modelProperties: {\n      rules: {\n        serializedName: \"rules\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagementPolicyRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyRule\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      definition: {\n        serializedName: \"definition\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicyDefinition\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyDefinition\",\n    modelProperties: {\n      actions: {\n        serializedName: \"actions\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicyAction\"\n        }\n      },\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicyFilter\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyAction\",\n    modelProperties: {\n      baseBlob: {\n        serializedName: \"baseBlob\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicyBaseBlob\"\n        }\n      },\n      snapshot: {\n        serializedName: \"snapshot\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicySnapShot\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicyVersion\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyBaseBlob: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyBaseBlob\",\n    modelProperties: {\n      tierToCool: {\n        serializedName: \"tierToCool\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterModification\"\n        }\n      },\n      tierToArchive: {\n        serializedName: \"tierToArchive\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterModification\"\n        }\n      },\n      tierToCold: {\n        serializedName: \"tierToCold\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterModification\"\n        }\n      },\n      tierToHot: {\n        serializedName: \"tierToHot\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterModification\"\n        }\n      },\n      delete: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterModification\"\n        }\n      },\n      enableAutoTierToHotFromCool: {\n        serializedName: \"enableAutoTierToHotFromCool\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DateAfterModification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DateAfterModification\",\n    modelProperties: {\n      daysAfterModificationGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterModificationGreaterThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      daysAfterLastAccessTimeGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterLastAccessTimeGreaterThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      daysAfterLastTierChangeGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterLastTierChangeGreaterThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      daysAfterCreationGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterCreationGreaterThan\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicySnapShot: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicySnapShot\",\n    modelProperties: {\n      tierToCool: {\n        serializedName: \"tierToCool\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToArchive: {\n        serializedName: \"tierToArchive\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToCold: {\n        serializedName: \"tierToCold\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToHot: {\n        serializedName: \"tierToHot\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      delete: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      }\n    }\n  }\n};\n\nexport const DateAfterCreation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DateAfterCreation\",\n    modelProperties: {\n      daysAfterCreationGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterCreationGreaterThan\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      daysAfterLastTierChangeGreaterThan: {\n        constraints: {\n          InclusiveMinimum: 0,\n          MultipleOf: 1\n        },\n        serializedName: \"daysAfterLastTierChangeGreaterThan\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyVersion\",\n    modelProperties: {\n      tierToCool: {\n        serializedName: \"tierToCool\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToArchive: {\n        serializedName: \"tierToArchive\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToCold: {\n        serializedName: \"tierToCold\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      tierToHot: {\n        serializedName: \"tierToHot\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      },\n      delete: {\n        serializedName: \"delete\",\n        type: {\n          name: \"Composite\",\n          className: \"DateAfterCreation\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagementPolicyFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicyFilter\",\n    modelProperties: {\n      prefixMatch: {\n        serializedName: \"prefixMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blobTypes: {\n        serializedName: \"blobTypes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blobIndexMatch: {\n        serializedName: \"blobIndexMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagFilter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TagFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagFilter\",\n    modelProperties: {\n      name: {\n        constraints: {\n          MaxLength: 128,\n          MinLength: 1\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        constraints: {\n          MaxLength: 256\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryPolicySchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryPolicySchema\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destination: {\n        serializedName: \"destination\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobInventoryPolicyRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryPolicyRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryPolicyRule\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      destination: {\n        serializedName: \"destination\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      definition: {\n        serializedName: \"definition\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobInventoryPolicyDefinition\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryPolicyDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryPolicyDefinition\",\n    modelProperties: {\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobInventoryPolicyFilter\"\n        }\n      },\n      format: {\n        serializedName: \"format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schedule: {\n        serializedName: \"schedule\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      objectType: {\n        serializedName: \"objectType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaFields: {\n        serializedName: \"schemaFields\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryPolicyFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryPolicyFilter\",\n    modelProperties: {\n      prefixMatch: {\n        serializedName: \"prefixMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      excludePrefix: {\n        serializedName: \"excludePrefix\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blobTypes: {\n        serializedName: \"blobTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      includeBlobVersions: {\n        serializedName: \"includeBlobVersions\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeSnapshots: {\n        serializedName: \"includeSnapshots\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeDeleted: {\n        serializedName: \"includeDeleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      creationTime: {\n        serializedName: \"creationTime\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobInventoryCreationTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryCreationTime: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryCreationTime\",\n    modelProperties: {\n      lastNDays: {\n        constraints: {\n          InclusiveMaximum: 36500,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"lastNDays\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudErrorBody\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobInventoryPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobInventoryPolicy\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobInventoryPolicy\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ObjectReplicationPolicies: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ObjectReplicationPolicies\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ObjectReplicationPolicy\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ObjectReplicationPolicyRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ObjectReplicationPolicyRule\",\n    modelProperties: {\n      ruleId: {\n        serializedName: \"ruleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceContainer: {\n        serializedName: \"sourceContainer\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      destinationContainer: {\n        serializedName: \"destinationContainer\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Composite\",\n          className: \"ObjectReplicationPolicyFilter\"\n        }\n      }\n    }\n  }\n};\n\nexport const ObjectReplicationPolicyFilter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ObjectReplicationPolicyFilter\",\n    modelProperties: {\n      prefixMatch: {\n        serializedName: \"prefixMatch\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      minCreationTime: {\n        serializedName: \"minCreationTime\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocalUsers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalUsers\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LocalUser\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PermissionScope: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PermissionScope\",\n    modelProperties: {\n      permissions: {\n        serializedName: \"permissions\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      service: {\n        serializedName: \"service\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SshPublicKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SshPublicKey\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocalUserKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalUserKeys\",\n    modelProperties: {\n      sshAuthorizedKeys: {\n        serializedName: \"sshAuthorizedKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SshPublicKey\"\n            }\n          }\n        }\n      },\n      sharedKey: {\n        serializedName: \"sharedKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocalUserRegeneratePasswordResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalUserRegeneratePasswordResult\",\n    modelProperties: {\n      sshPassword: {\n        serializedName: \"sshPassword\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionScopeKeyVaultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionScopeKeyVaultProperties\",\n    modelProperties: {\n      keyUri: {\n        serializedName: \"keyUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentVersionedKeyIdentifier: {\n        serializedName: \"currentVersionedKeyIdentifier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastKeyRotationTimestamp: {\n        serializedName: \"lastKeyRotationTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionScopeListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionScopeListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EncryptionScope\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobServiceItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceItems\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobServiceProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRules: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CorsRules\",\n    modelProperties: {\n      corsRules: {\n        serializedName: \"corsRules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"allowedOrigins\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowedMethods: {\n        serializedName: \"allowedMethods\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maxAgeInSeconds: {\n        serializedName: \"maxAgeInSeconds\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      exposedHeaders: {\n        serializedName: \"exposedHeaders\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowedHeaders: {\n        serializedName: \"allowedHeaders\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeleteRetentionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeleteRetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        constraints: {\n          InclusiveMaximum: 365,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"days\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      allowPermanentDelete: {\n        serializedName: \"allowPermanentDelete\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChangeFeed: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChangeFeed\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionInDays: {\n        constraints: {\n          InclusiveMaximum: 146000,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"retentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePolicyProperties\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        constraints: {\n          InclusiveMaximum: 365,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"days\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastEnabledTime: {\n        serializedName: \"lastEnabledTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      minRestoreTime: {\n        serializedName: \"minRestoreTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const LastAccessTimeTrackingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LastAccessTimeTrackingPolicy\",\n    modelProperties: {\n      enable: {\n        serializedName: \"enable\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      trackingGranularityInDays: {\n        serializedName: \"trackingGranularityInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"blobType\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainerItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListContainerItems\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ListContainerItem\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImmutabilityPolicyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImmutabilityPolicyProperties\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updateHistory: {\n        serializedName: \"updateHistory\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpdateHistoryProperty\"\n            }\n          }\n        }\n      },\n      immutabilityPeriodSinceCreationInDays: {\n        serializedName: \"properties.immutabilityPeriodSinceCreationInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      allowProtectedAppendWrites: {\n        serializedName: \"properties.allowProtectedAppendWrites\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowProtectedAppendWritesAll: {\n        serializedName: \"properties.allowProtectedAppendWritesAll\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateHistoryProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateHistoryProperty\",\n    modelProperties: {\n      update: {\n        serializedName: \"update\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      immutabilityPeriodSinceCreationInDays: {\n        serializedName: \"immutabilityPeriodSinceCreationInDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      objectIdentifier: {\n        serializedName: \"objectIdentifier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      upn: {\n        serializedName: \"upn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      allowProtectedAppendWrites: {\n        serializedName: \"allowProtectedAppendWrites\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowProtectedAppendWritesAll: {\n        serializedName: \"allowProtectedAppendWritesAll\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegalHoldProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LegalHoldProperties\",\n    modelProperties: {\n      hasLegalHold: {\n        serializedName: \"hasLegalHold\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TagProperty\"\n            }\n          }\n        }\n      },\n      protectedAppendWritesHistory: {\n        serializedName: \"protectedAppendWritesHistory\",\n        type: {\n          name: \"Composite\",\n          className: \"ProtectedAppendWritesHistory\"\n        }\n      }\n    }\n  }\n};\n\nexport const TagProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TagProperty\",\n    modelProperties: {\n      tag: {\n        serializedName: \"tag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      objectIdentifier: {\n        serializedName: \"objectIdentifier\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      upn: {\n        serializedName: \"upn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProtectedAppendWritesHistory: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProtectedAppendWritesHistory\",\n    modelProperties: {\n      allowProtectedAppendWritesAll: {\n        serializedName: \"allowProtectedAppendWritesAll\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImmutableStorageWithVersioning: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImmutableStorageWithVersioning\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      timeStamp: {\n        serializedName: \"timeStamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      migrationState: {\n        serializedName: \"migrationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LegalHold: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LegalHold\",\n    modelProperties: {\n      hasLegalHold: {\n        serializedName: \"hasLegalHold\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              MaxLength: 23,\n              MinLength: 3\n            },\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowProtectedAppendWritesAll: {\n        serializedName: \"allowProtectedAppendWritesAll\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseContainerRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LeaseContainerRequest\",\n    modelProperties: {\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      breakPeriod: {\n        serializedName: \"breakPeriod\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"leaseDuration\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      proposedLeaseId: {\n        serializedName: \"proposedLeaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseContainerResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LeaseContainerResponse\",\n    modelProperties: {\n      leaseId: {\n        serializedName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseTimeSeconds: {\n        serializedName: \"leaseTimeSeconds\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileServiceItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileServiceItems\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileServiceProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ProtocolSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProtocolSettings\",\n    modelProperties: {\n      smb: {\n        serializedName: \"smb\",\n        type: {\n          name: \"Composite\",\n          className: \"SmbSetting\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmbSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SmbSetting\",\n    modelProperties: {\n      multichannel: {\n        serializedName: \"multichannel\",\n        type: {\n          name: \"Composite\",\n          className: \"Multichannel\"\n        }\n      },\n      versions: {\n        serializedName: \"versions\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationMethods: {\n        serializedName: \"authenticationMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kerberosTicketEncryption: {\n        serializedName: \"kerberosTicketEncryption\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelEncryption: {\n        serializedName: \"channelEncryption\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Multichannel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Multichannel\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileShareItems: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileShareItems\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileShareItem\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        serializedName: \"accessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      permission: {\n        serializedName: \"permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedShare: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedShare\",\n    modelProperties: {\n      deletedShareName: {\n        serializedName: \"deletedShareName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedShareVersion: {\n        serializedName: \"deletedShareVersion\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseShareRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LeaseShareRequest\",\n    modelProperties: {\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      breakPeriod: {\n        serializedName: \"breakPeriod\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"leaseDuration\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      proposedLeaseId: {\n        serializedName: \"proposedLeaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseShareResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LeaseShareResponse\",\n    modelProperties: {\n      leaseId: {\n        serializedName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseTimeSeconds: {\n        serializedName: \"leaseTimeSeconds\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListQueueServices: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListQueueServices\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueueServiceProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListQueueResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListQueueResource\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ListQueue\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListTableServices: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListTableServices\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TableServiceProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TableSignedIdentifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableSignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        serializedName: \"accessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"TableAccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const TableAccessPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableAccessPolicy\",\n    modelProperties: {\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      permission: {\n        serializedName: \"permission\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListTableResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListTableResource\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Table\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const ManagementPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagementPolicy\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      policy: {\n        serializedName: \"properties.policy\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagementPolicySchema\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobInventoryPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobInventoryPolicy\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      policy: {\n        serializedName: \"properties.policy\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobInventoryPolicySchema\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      groupId: {\n        serializedName: \"properties.groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"properties.requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"properties.requiredZoneNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ObjectReplicationPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ObjectReplicationPolicy\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      policyId: {\n        serializedName: \"properties.policyId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledTime: {\n        serializedName: \"properties.enabledTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceAccount: {\n        serializedName: \"properties.sourceAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      destinationAccount: {\n        serializedName: \"properties.destinationAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rules: {\n        serializedName: \"properties.rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ObjectReplicationPolicyRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocalUser: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocalUser\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      permissionScopes: {\n        serializedName: \"properties.permissionScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PermissionScope\"\n            }\n          }\n        }\n      },\n      homeDirectory: {\n        serializedName: \"properties.homeDirectory\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sshAuthorizedKeys: {\n        serializedName: \"properties.sshAuthorizedKeys\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SshPublicKey\"\n            }\n          }\n        }\n      },\n      sid: {\n        serializedName: \"properties.sid\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hasSharedKey: {\n        serializedName: \"properties.hasSharedKey\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasSshKey: {\n        serializedName: \"properties.hasSshKey\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasSshPassword: {\n        serializedName: \"properties.hasSshPassword\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionScope: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionScope\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      source: {\n        serializedName: \"properties.source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      keyVaultProperties: {\n        serializedName: \"properties.keyVaultProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionScopeKeyVaultProperties\"\n        }\n      },\n      requireInfrastructureEncryption: {\n        serializedName: \"properties.requireInfrastructureEncryption\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      cors: {\n        serializedName: \"properties.cors\",\n        type: {\n          name: \"Composite\",\n          className: \"CorsRules\"\n        }\n      },\n      defaultServiceVersion: {\n        serializedName: \"properties.defaultServiceVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRetentionPolicy: {\n        serializedName: \"properties.deleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"DeleteRetentionPolicy\"\n        }\n      },\n      isVersioningEnabled: {\n        serializedName: \"properties.isVersioningEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      automaticSnapshotPolicyEnabled: {\n        serializedName: \"properties.automaticSnapshotPolicyEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      changeFeed: {\n        serializedName: \"properties.changeFeed\",\n        type: {\n          name: \"Composite\",\n          className: \"ChangeFeed\"\n        }\n      },\n      restorePolicy: {\n        serializedName: \"properties.restorePolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RestorePolicyProperties\"\n        }\n      },\n      containerDeleteRetentionPolicy: {\n        serializedName: \"properties.containerDeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"DeleteRetentionPolicy\"\n        }\n      },\n      lastAccessTimeTrackingPolicy: {\n        serializedName: \"properties.lastAccessTimeTrackingPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"LastAccessTimeTrackingPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureEntityResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureEntityResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileServiceProperties\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      cors: {\n        serializedName: \"properties.cors\",\n        type: {\n          name: \"Composite\",\n          className: \"CorsRules\"\n        }\n      },\n      shareDeleteRetentionPolicy: {\n        serializedName: \"properties.shareDeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"DeleteRetentionPolicy\"\n        }\n      },\n      protocolSettings: {\n        serializedName: \"properties.protocolSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ProtocolSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueueServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueueServiceProperties\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      cors: {\n        serializedName: \"properties.cors\",\n        type: {\n          name: \"Composite\",\n          className: \"CorsRules\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageQueue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageQueue\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      approximateMessageCount: {\n        serializedName: \"properties.approximateMessageCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListQueue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListQueue\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const TableServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableServiceProperties\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      cors: {\n        serializedName: \"properties.cors\",\n        type: {\n          name: \"Composite\",\n          className: \"CorsRules\"\n        }\n      }\n    }\n  }\n};\n\nexport const Table: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Table\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tableName: {\n        serializedName: \"properties.tableName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signedIdentifiers: {\n        serializedName: \"properties.signedIdentifiers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TableSignedIdentifier\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccount\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"Identity\"\n        }\n      },\n      extendedLocation: {\n        serializedName: \"extendedLocation\",\n        type: {\n          name: \"Composite\",\n          className: \"ExtendedLocation\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Creating\", \"ResolvingDNS\", \"Succeeded\"]\n        }\n      },\n      primaryEndpoints: {\n        serializedName: \"properties.primaryEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"Endpoints\"\n        }\n      },\n      primaryLocation: {\n        serializedName: \"properties.primaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusOfPrimary: {\n        serializedName: \"properties.statusOfPrimary\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"available\", \"unavailable\"]\n        }\n      },\n      lastGeoFailoverTime: {\n        serializedName: \"properties.lastGeoFailoverTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      secondaryLocation: {\n        serializedName: \"properties.secondaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statusOfSecondary: {\n        serializedName: \"properties.statusOfSecondary\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"available\", \"unavailable\"]\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      customDomain: {\n        serializedName: \"properties.customDomain\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomDomain\"\n        }\n      },\n      sasPolicy: {\n        serializedName: \"properties.sasPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"SasPolicy\"\n        }\n      },\n      keyPolicy: {\n        serializedName: \"properties.keyPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyPolicy\"\n        }\n      },\n      keyCreationTime: {\n        serializedName: \"properties.keyCreationTime\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyCreationTime\"\n        }\n      },\n      secondaryEndpoints: {\n        serializedName: \"properties.secondaryEndpoints\",\n        type: {\n          name: \"Composite\",\n          className: \"Endpoints\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"Encryption\"\n        }\n      },\n      accessTier: {\n        serializedName: \"properties.accessTier\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Hot\", \"Cool\", \"Premium\"]\n        }\n      },\n      azureFilesIdentityBasedAuthentication: {\n        serializedName: \"properties.azureFilesIdentityBasedAuthentication\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureFilesIdentityBasedAuthentication\"\n        }\n      },\n      enableHttpsTrafficOnly: {\n        serializedName: \"properties.supportsHttpsTrafficOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      networkRuleSet: {\n        serializedName: \"properties.networkAcls\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkRuleSet\"\n        }\n      },\n      isSftpEnabled: {\n        serializedName: \"properties.isSftpEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isLocalUserEnabled: {\n        serializedName: \"properties.isLocalUserEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isHnsEnabled: {\n        serializedName: \"properties.isHnsEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      geoReplicationStats: {\n        serializedName: \"properties.geoReplicationStats\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplicationStats\"\n        }\n      },\n      failoverInProgress: {\n        serializedName: \"properties.failoverInProgress\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      largeFileSharesState: {\n        serializedName: \"properties.largeFileSharesState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      routingPreference: {\n        serializedName: \"properties.routingPreference\",\n        type: {\n          name: \"Composite\",\n          className: \"RoutingPreference\"\n        }\n      },\n      blobRestoreStatus: {\n        serializedName: \"properties.blobRestoreStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobRestoreStatus\"\n        }\n      },\n      allowBlobPublicAccess: {\n        serializedName: \"properties.allowBlobPublicAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minimumTlsVersion: {\n        serializedName: \"properties.minimumTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowSharedKeyAccess: {\n        serializedName: \"properties.allowSharedKeyAccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableNfsV3: {\n        serializedName: \"properties.isNfsV3Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowCrossTenantReplication: {\n        serializedName: \"properties.allowCrossTenantReplication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultToOAuthAuthentication: {\n        serializedName: \"properties.defaultToOAuthAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      immutableStorageWithVersioning: {\n        serializedName: \"properties.immutableStorageWithVersioning\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutableStorageAccount\"\n        }\n      },\n      allowedCopyScope: {\n        serializedName: \"properties.allowedCopyScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSkuConversionStatus: {\n        serializedName: \"properties.storageAccountSkuConversionStatus\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageAccountSkuConversionStatus\"\n        }\n      },\n      dnsEndpointType: {\n        serializedName: \"properties.dnsEndpointType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isSkuConversionBlocked: {\n        serializedName: \"properties.isSkuConversionBlocked\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      accountMigrationInProgress: {\n        serializedName: \"properties.accountMigrationInProgress\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedAccount\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageAccountResourceId: {\n        serializedName: \"properties.storageAccountResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"properties.location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restoreReference: {\n        serializedName: \"properties.restoreReference\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletionTime: {\n        serializedName: \"properties.deletionTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainerItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListContainerItem\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"properties.deleted\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"properties.deletedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"properties.remainingRetentionDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultEncryptionScope: {\n        serializedName: \"properties.defaultEncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"properties.denyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicAccess: {\n        serializedName: \"properties.publicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Container\", \"Blob\", \"None\"]\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"properties.leaseStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"properties.leaseState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"properties.leaseDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      immutabilityPolicy: {\n        serializedName: \"properties.immutabilityPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutabilityPolicyProperties\"\n        }\n      },\n      legalHold: {\n        serializedName: \"properties.legalHold\",\n        type: {\n          name: \"Composite\",\n          className: \"LegalHoldProperties\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"properties.hasLegalHold\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"properties.hasImmutabilityPolicy\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      immutableStorageWithVersioning: {\n        serializedName: \"properties.immutableStorageWithVersioning\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutableStorageWithVersioning\"\n        }\n      },\n      enableNfsV3RootSquash: {\n        serializedName: \"properties.enableNfsV3RootSquash\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableNfsV3AllSquash: {\n        serializedName: \"properties.enableNfsV3AllSquash\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainer\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"properties.deleted\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"properties.deletedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"properties.remainingRetentionDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultEncryptionScope: {\n        serializedName: \"properties.defaultEncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"properties.denyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicAccess: {\n        serializedName: \"properties.publicAccess\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Container\", \"Blob\", \"None\"]\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"properties.leaseStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"properties.leaseState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"properties.leaseDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      immutabilityPolicy: {\n        serializedName: \"properties.immutabilityPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutabilityPolicyProperties\"\n        }\n      },\n      legalHold: {\n        serializedName: \"properties.legalHold\",\n        type: {\n          name: \"Composite\",\n          className: \"LegalHoldProperties\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"properties.hasLegalHold\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"properties.hasImmutabilityPolicy\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      immutableStorageWithVersioning: {\n        serializedName: \"properties.immutableStorageWithVersioning\",\n        type: {\n          name: \"Composite\",\n          className: \"ImmutableStorageWithVersioning\"\n        }\n      },\n      enableNfsV3RootSquash: {\n        serializedName: \"properties.enableNfsV3RootSquash\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableNfsV3AllSquash: {\n        serializedName: \"properties.enableNfsV3AllSquash\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImmutabilityPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImmutabilityPolicy\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      immutabilityPeriodSinceCreationInDays: {\n        serializedName: \"properties.immutabilityPeriodSinceCreationInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      allowProtectedAppendWrites: {\n        serializedName: \"properties.allowProtectedAppendWrites\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowProtectedAppendWritesAll: {\n        serializedName: \"properties.allowProtectedAppendWritesAll\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileShareItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileShareItem\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      shareQuota: {\n        constraints: {\n          InclusiveMaximum: 102400,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.shareQuota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"properties.enabledProtocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"properties.rootSquash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"properties.deleted\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"properties.deletedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"properties.remainingRetentionDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        serializedName: \"properties.accessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"properties.accessTierChangeTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      accessTierStatus: {\n        serializedName: \"properties.accessTierStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareUsageBytes: {\n        serializedName: \"properties.shareUsageBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"properties.leaseStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"properties.leaseState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"properties.leaseDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signedIdentifiers: {\n        serializedName: \"properties.signedIdentifiers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      snapshotTime: {\n        serializedName: \"properties.snapshotTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileShare: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileShare\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties,\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      metadata: {\n        serializedName: \"properties.metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      shareQuota: {\n        constraints: {\n          InclusiveMaximum: 102400,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"properties.shareQuota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"properties.enabledProtocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"properties.rootSquash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"properties.deleted\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"properties.deletedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"properties.remainingRetentionDays\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        serializedName: \"properties.accessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"properties.accessTierChangeTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      accessTierStatus: {\n        serializedName: \"properties.accessTierStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareUsageBytes: {\n        serializedName: \"properties.shareUsageBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"properties.leaseStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"properties.leaseState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"properties.leaseDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signedIdentifiers: {\n        serializedName: \"properties.signedIdentifiers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      snapshotTime: {\n        serializedName: \"properties.snapshotTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccountsCustomerInitiatedMigrationHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccountsCustomerInitiatedMigrationHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainersCreateOrUpdateImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainersCreateOrUpdateImmutabilityPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainersGetImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainersGetImmutabilityPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainersDeleteImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainersDeleteImmutabilityPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainersLockImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainersLockImmutabilityPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobContainersExtendImmutabilityPolicyHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BlobContainersExtendImmutabilityPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSharesLeaseHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FileSharesLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  StorageAccountCheckNameAvailabilityParameters as StorageAccountCheckNameAvailabilityParametersMapper,\n  StorageAccountCreateParameters as StorageAccountCreateParametersMapper,\n  StorageAccountUpdateParameters as StorageAccountUpdateParametersMapper,\n  StorageAccountRegenerateKeyParameters as StorageAccountRegenerateKeyParametersMapper,\n  AccountSasParameters as AccountSasParametersMapper,\n  ServiceSasParameters as ServiceSasParametersMapper,\n  StorageAccountMigration as StorageAccountMigrationMapper,\n  BlobRestoreParameters as BlobRestoreParametersMapper,\n  ManagementPolicy as ManagementPolicyMapper,\n  BlobInventoryPolicy as BlobInventoryPolicyMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  ObjectReplicationPolicy as ObjectReplicationPolicyMapper,\n  LocalUser as LocalUserMapper,\n  EncryptionScope as EncryptionScopeMapper,\n  BlobServiceProperties as BlobServicePropertiesMapper,\n  BlobContainer as BlobContainerMapper,\n  LegalHold as LegalHoldMapper,\n  ImmutabilityPolicy as ImmutabilityPolicyMapper,\n  LeaseContainerRequest as LeaseContainerRequestMapper,\n  FileServiceProperties as FileServicePropertiesMapper,\n  FileShare as FileShareMapper,\n  DeletedShare as DeletedShareMapper,\n  LeaseShareRequest as LeaseShareRequestMapper,\n  QueueServiceProperties as QueueServicePropertiesMapper,\n  StorageQueue as StorageQueueMapper,\n  TableServiceProperties as TableServicePropertiesMapper,\n  Table as TableMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2023-01-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accountName: OperationParameter = {\n  parameterPath: \"accountName\",\n  mapper: StorageAccountCheckNameAvailabilityParametersMapper\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountCreateParametersMapper\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accountName1: OperationURLParameter = {\n  parameterPath: \"accountName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z0-9]+$\"),\n      MaxLength: 24,\n      MinLength: 3\n    },\n    serializedName: \"accountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"geoReplicationStats\", \"blobRestoreStatus\"]\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountUpdateParametersMapper\n};\n\nexport const expand1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    defaultValue: \"kerb\",\n    isConstant: true,\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const regenerateKey: OperationParameter = {\n  parameterPath: \"regenerateKey\",\n  mapper: StorageAccountRegenerateKeyParametersMapper\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AccountSasParametersMapper\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServiceSasParametersMapper\n};\n\nexport const failoverType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"failoverType\"],\n  mapper: {\n    defaultValue: \"Planned\",\n    isConstant: true,\n    serializedName: \"failoverType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestType: OperationQueryParameter = {\n  parameterPath: \"requestType\",\n  mapper: {\n    serializedName: \"requestType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: StorageAccountMigrationMapper\n};\n\nexport const migrationName: OperationURLParameter = {\n  parameterPath: \"migrationName\",\n  mapper: {\n    serializedName: \"migrationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BlobRestoreParametersMapper\n};\n\nexport const accountName2: OperationURLParameter = {\n  parameterPath: \"accountName\",\n  mapper: {\n    constraints: {\n      MaxLength: 24,\n      MinLength: 3\n    },\n    serializedName: \"accountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const deletedAccountName: OperationURLParameter = {\n  parameterPath: \"deletedAccountName\",\n  mapper: {\n    constraints: {\n      MaxLength: 24,\n      MinLength: 3\n    },\n    serializedName: \"deletedAccountName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const managementPolicyName: OperationURLParameter = {\n  parameterPath: \"managementPolicyName\",\n  mapper: {\n    serializedName: \"managementPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: ManagementPolicyMapper\n};\n\nexport const blobInventoryPolicyName: OperationURLParameter = {\n  parameterPath: \"blobInventoryPolicyName\",\n  mapper: {\n    serializedName: \"blobInventoryPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties1: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: BlobInventoryPolicyMapper\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties2: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const objectReplicationPolicyId: OperationURLParameter = {\n  parameterPath: \"objectReplicationPolicyId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"objectReplicationPolicyId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties3: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: ObjectReplicationPolicyMapper\n};\n\nexport const username: OperationURLParameter = {\n  parameterPath: \"username\",\n  mapper: {\n    constraints: {\n      MaxLength: 64,\n      MinLength: 3\n    },\n    serializedName: \"username\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties4: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: LocalUserMapper\n};\n\nexport const encryptionScope: OperationParameter = {\n  parameterPath: \"encryptionScope\",\n  mapper: EncryptionScopeMapper\n};\n\nexport const encryptionScopeName: OperationURLParameter = {\n  parameterPath: \"encryptionScopeName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3\n    },\n    serializedName: \"encryptionScopeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxpagesize: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxpagesize\"],\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 5000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"$maxpagesize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BlobServicePropertiesMapper\n};\n\nexport const blobServicesName: OperationURLParameter = {\n  parameterPath: \"blobServicesName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"BlobServicesName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxpagesize1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxpagesize\"],\n  mapper: {\n    serializedName: \"$maxpagesize\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobContainer: OperationParameter = {\n  parameterPath: \"blobContainer\",\n  mapper: BlobContainerMapper\n};\n\nexport const containerName: OperationURLParameter = {\n  parameterPath: \"containerName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3\n    },\n    serializedName: \"containerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const legalHold: OperationParameter = {\n  parameterPath: \"legalHold\",\n  mapper: LegalHoldMapper\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: ImmutabilityPolicyMapper\n};\n\nexport const immutabilityPolicyName: OperationURLParameter = {\n  parameterPath: \"immutabilityPolicyName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"immutabilityPolicyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifMatch1: OperationParameter = {\n  parameterPath: \"ifMatch\",\n  mapper: {\n    serializedName: \"If-Match\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: LeaseContainerRequestMapper\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FileServicePropertiesMapper\n};\n\nexport const fileServicesName: OperationURLParameter = {\n  parameterPath: \"fileServicesName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"FileServicesName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const expand2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileShare: OperationParameter = {\n  parameterPath: \"fileShare\",\n  mapper: FileShareMapper\n};\n\nexport const shareName: OperationURLParameter = {\n  parameterPath: \"shareName\",\n  mapper: {\n    constraints: {\n      MaxLength: 63,\n      MinLength: 3\n    },\n    serializedName: \"shareName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const xMsSnapshot: OperationParameter = {\n  parameterPath: [\"options\", \"xMsSnapshot\"],\n  mapper: {\n    serializedName: \"x-ms-snapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"$include\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedShare: OperationParameter = {\n  parameterPath: \"deletedShare\",\n  mapper: DeletedShareMapper\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: LeaseShareRequestMapper\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: QueueServicePropertiesMapper\n};\n\nexport const queueServiceName: OperationURLParameter = {\n  parameterPath: \"queueServiceName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"queueServiceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const queue: OperationParameter = {\n  parameterPath: \"queue\",\n  mapper: StorageQueueMapper\n};\n\nexport const queueName: OperationURLParameter = {\n  parameterPath: \"queueName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$\"),\n      MaxLength: 63,\n      MinLength: 3\n    },\n    serializedName: \"queueName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TableServicePropertiesMapper\n};\n\nexport const tableServiceName: OperationURLParameter = {\n  parameterPath: \"tableServiceName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"tableServiceName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: [\"options\", \"parameters\"],\n  mapper: TableMapper\n};\n\nexport const tableName: OperationURLParameter = {\n  parameterPath: \"tableName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[A-Za-z][A-Za-z0-9]{2,62}$\"),\n      MaxLength: 63,\n      MinLength: 3\n    },\n    serializedName: \"tableName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  Operation,\n  OperationsListOptionalParams,\n  OperationsListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available Storage Rest API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available Storage Rest API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Storage/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Skus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  SkuInformation,\n  SkusListOptionalParams,\n  SkusListResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Skus operations. */\nexport class SkusImpl implements Skus {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class Skus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the available SKUs supported by Microsoft.Storage for given subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: SkusListOptionalParams\n  ): PagedAsyncIterableIterator<SkuInformation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: SkusListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<SkuInformation[]> {\n    let result: SkusListResponse;\n    result = await this._list(options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    options?: SkusListOptionalParams\n  ): AsyncIterableIterator<SkuInformation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the available SKUs supported by Microsoft.Storage for given subscription.\n   * @param options The options parameters.\n   */\n  private _list(options?: SkusListOptionalParams): Promise<SkusListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageSkuListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { StorageAccounts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  StorageAccount,\n  StorageAccountsListNextOptionalParams,\n  StorageAccountsListOptionalParams,\n  StorageAccountsListResponse,\n  StorageAccountsListByResourceGroupNextOptionalParams,\n  StorageAccountsListByResourceGroupOptionalParams,\n  StorageAccountsListByResourceGroupResponse,\n  StorageAccountCheckNameAvailabilityParameters,\n  StorageAccountsCheckNameAvailabilityOptionalParams,\n  StorageAccountsCheckNameAvailabilityResponse,\n  StorageAccountCreateParameters,\n  StorageAccountsCreateOptionalParams,\n  StorageAccountsCreateResponse,\n  StorageAccountsDeleteOptionalParams,\n  StorageAccountsGetPropertiesOptionalParams,\n  StorageAccountsGetPropertiesResponse,\n  StorageAccountUpdateParameters,\n  StorageAccountsUpdateOptionalParams,\n  StorageAccountsUpdateResponse,\n  StorageAccountsListKeysOptionalParams,\n  StorageAccountsListKeysResponse,\n  StorageAccountRegenerateKeyParameters,\n  StorageAccountsRegenerateKeyOptionalParams,\n  StorageAccountsRegenerateKeyResponse,\n  AccountSasParameters,\n  StorageAccountsListAccountSASOptionalParams,\n  StorageAccountsListAccountSASResponse,\n  ServiceSasParameters,\n  StorageAccountsListServiceSASOptionalParams,\n  StorageAccountsListServiceSASResponse,\n  StorageAccountsFailoverOptionalParams,\n  StorageAccountsHierarchicalNamespaceMigrationOptionalParams,\n  StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams,\n  StorageAccountMigration,\n  StorageAccountsCustomerInitiatedMigrationOptionalParams,\n  MigrationName,\n  StorageAccountsGetCustomerInitiatedMigrationOptionalParams,\n  StorageAccountsGetCustomerInitiatedMigrationResponse,\n  BlobRestoreParameters,\n  StorageAccountsRestoreBlobRangesOptionalParams,\n  StorageAccountsRestoreBlobRangesResponse,\n  StorageAccountsRevokeUserDelegationKeysOptionalParams,\n  StorageAccountsListNextResponse,\n  StorageAccountsListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing StorageAccounts operations. */\nexport class StorageAccountsImpl implements StorageAccounts {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class StorageAccounts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the storage accounts available under the subscription. Note that storage keys are not\n   * returned; use the ListKeys operation for this.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: StorageAccountsListOptionalParams\n  ): PagedAsyncIterableIterator<StorageAccount> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: StorageAccountsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageAccount[]> {\n    let result: StorageAccountsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: StorageAccountsListOptionalParams\n  ): AsyncIterableIterator<StorageAccount> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all the storage accounts available under the given resource group. Note that storage keys are\n   * not returned; use the ListKeys operation for this.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: StorageAccountsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<StorageAccount> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: StorageAccountsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageAccount[]> {\n    let result: StorageAccountsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: StorageAccountsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<StorageAccount> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks that the storage account name is valid and is not already in use.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    accountName: StorageAccountCheckNameAvailabilityParameters,\n    options?: StorageAccountsCheckNameAvailabilityOptionalParams\n  ): Promise<StorageAccountsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { accountName, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Asynchronously creates a new storage account with the specified parameters. If an account is already\n   * created and a subsequent create request is issued with different properties, the account properties\n   * will be updated. If an account is already created and a subsequent create or update request is\n   * issued with the exact same set of properties, the request will succeed.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide for the created account.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: StorageAccountCreateParameters,\n    options?: StorageAccountsCreateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StorageAccountsCreateResponse>,\n      StorageAccountsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StorageAccountsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, parameters, options },\n      spec: createOperationSpec\n    });\n    const poller = await createHttpPoller<\n      StorageAccountsCreateResponse,\n      OperationState<StorageAccountsCreateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Asynchronously creates a new storage account with the specified parameters. If an account is already\n   * created and a subsequent create request is issued with different properties, the account properties\n   * will be updated. If an account is already created and a subsequent create or update request is\n   * issued with the exact same set of properties, the request will succeed.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide for the created account.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: StorageAccountCreateParameters,\n    options?: StorageAccountsCreateOptionalParams\n  ): Promise<StorageAccountsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      accountName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a storage account in Microsoft Azure.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Returns the properties for the specified storage account including but not limited to name, SKU\n   * name, location, and account status. The ListKeys operation should be used to retrieve storage keys.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsGetPropertiesOptionalParams\n  ): Promise<StorageAccountsGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getPropertiesOperationSpec\n    );\n  }\n\n  /**\n   * The update operation can be used to update the SKU, encryption, access tier, or tags for a storage\n   * account. It can also be used to map the account to a custom domain. Only one custom domain is\n   * supported per storage account; the replacement/change of custom domain is not supported. In order to\n   * replace an old custom domain, the old value must be cleared/unregistered before a new value can be\n   * set. The update of multiple properties is supported. This call does not change the storage keys for\n   * the account. If you want to change the storage account keys, use the regenerate keys operation. The\n   * location and name of the storage account cannot be changed after creation.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide for the updated account.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: StorageAccountUpdateParameters,\n    options?: StorageAccountsUpdateOptionalParams\n  ): Promise<StorageAccountsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the storage accounts available under the subscription. Note that storage keys are not\n   * returned; use the ListKeys operation for this.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: StorageAccountsListOptionalParams\n  ): Promise<StorageAccountsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Lists all the storage accounts available under the given resource group. Note that storage keys are\n   * not returned; use the ListKeys operation for this.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: StorageAccountsListByResourceGroupOptionalParams\n  ): Promise<StorageAccountsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage\n   * account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsListKeysOptionalParams\n  ): Promise<StorageAccountsListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerates one of the access keys or Kerberos keys for the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param regenerateKey Specifies name of the key which should be regenerated -- key1, key2, kerb1,\n   *                      kerb2.\n   * @param options The options parameters.\n   */\n  regenerateKey(\n    resourceGroupName: string,\n    accountName: string,\n    regenerateKey: StorageAccountRegenerateKeyParameters,\n    options?: StorageAccountsRegenerateKeyOptionalParams\n  ): Promise<StorageAccountsRegenerateKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, regenerateKey, options },\n      regenerateKeyOperationSpec\n    );\n  }\n\n  /**\n   * List SAS credentials of a storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide to list SAS credentials for the storage account.\n   * @param options The options parameters.\n   */\n  listAccountSAS(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: AccountSasParameters,\n    options?: StorageAccountsListAccountSASOptionalParams\n  ): Promise<StorageAccountsListAccountSASResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      listAccountSASOperationSpec\n    );\n  }\n\n  /**\n   * List service SAS credentials of a specific resource.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide to list service SAS credentials.\n   * @param options The options parameters.\n   */\n  listServiceSAS(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: ServiceSasParameters,\n    options?: StorageAccountsListServiceSASOptionalParams\n  ): Promise<StorageAccountsListServiceSASResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      listServiceSASOperationSpec\n    );\n  }\n\n  /**\n   * A failover request can be triggered for a storage account in the event a primary endpoint becomes\n   * unavailable for any reason. The failover occurs from the storage account's primary cluster to the\n   * secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and\n   * the account is converted to LRS. In the case of a Planned Failover, the primary and secondary\n   * clusters are swapped after failover and the account remains geo-replicated. Failover should continue\n   * to be used in the event of availability issues as Planned failover is only available while the\n   * primary and secondary endpoints are available. The primary use case of a Planned Failover is\n   * disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter\n   * to 'Planned'. Learn more about the failover options here-\n   * https://learn.microsoft.com/azure/storage/common/storage-disaster-recovery-guidance\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsFailoverOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, options },\n      spec: failoverOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * A failover request can be triggered for a storage account in the event a primary endpoint becomes\n   * unavailable for any reason. The failover occurs from the storage account's primary cluster to the\n   * secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover and\n   * the account is converted to LRS. In the case of a Planned Failover, the primary and secondary\n   * clusters are swapped after failover and the account remains geo-replicated. Failover should continue\n   * to be used in the event of availability issues as Planned failover is only available while the\n   * primary and secondary endpoints are available. The primary use case of a Planned Failover is\n   * disaster recovery testing drills. This type of failover is invoked by setting FailoverType parameter\n   * to 'Planned'. Learn more about the failover options here-\n   * https://learn.microsoft.com/azure/storage/common/storage-disaster-recovery-guidance\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      accountName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Live Migration of storage account to enable Hns\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param requestType Required. Hierarchical namespace migration type can either be a hierarchical\n   *                    namespace validation request 'HnsOnValidationRequest' or a hydration request\n   *                    'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration\n   *                    request will migrate the account.\n   * @param options The options parameters.\n   */\n  async beginHierarchicalNamespaceMigration(\n    resourceGroupName: string,\n    accountName: string,\n    requestType: string,\n    options?: StorageAccountsHierarchicalNamespaceMigrationOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, requestType, options },\n      spec: hierarchicalNamespaceMigrationOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Live Migration of storage account to enable Hns\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param requestType Required. Hierarchical namespace migration type can either be a hierarchical\n   *                    namespace validation request 'HnsOnValidationRequest' or a hydration request\n   *                    'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration\n   *                    request will migrate the account.\n   * @param options The options parameters.\n   */\n  async beginHierarchicalNamespaceMigrationAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    requestType: string,\n    options?: StorageAccountsHierarchicalNamespaceMigrationOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginHierarchicalNamespaceMigration(\n      resourceGroupName,\n      accountName,\n      requestType,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Abort live Migration of storage account to enable Hns\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  async beginAbortHierarchicalNamespaceMigration(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, options },\n      spec: abortHierarchicalNamespaceMigrationOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Abort live Migration of storage account to enable Hns\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  async beginAbortHierarchicalNamespaceMigrationAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsAbortHierarchicalNamespaceMigrationOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginAbortHierarchicalNamespaceMigration(\n      resourceGroupName,\n      accountName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Account Migration request can be triggered for a storage account to change its redundancy level. The\n   * migration updates the non-zonal redundant storage account to a zonal redundant account or vice-versa\n   * in order to have better reliability and availability. Zone-redundant storage (ZRS) replicates your\n   * storage account synchronously across three Azure availability zones in the primary region.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The request parameters required to perform storage account migration.\n   * @param options The options parameters.\n   */\n  async beginCustomerInitiatedMigration(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: StorageAccountMigration,\n    options?: StorageAccountsCustomerInitiatedMigrationOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, parameters, options },\n      spec: customerInitiatedMigrationOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Account Migration request can be triggered for a storage account to change its redundancy level. The\n   * migration updates the non-zonal redundant storage account to a zonal redundant account or vice-versa\n   * in order to have better reliability and availability. Zone-redundant storage (ZRS) replicates your\n   * storage account synchronously across three Azure availability zones in the primary region.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The request parameters required to perform storage account migration.\n   * @param options The options parameters.\n   */\n  async beginCustomerInitiatedMigrationAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: StorageAccountMigration,\n    options?: StorageAccountsCustomerInitiatedMigrationOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCustomerInitiatedMigration(\n      resourceGroupName,\n      accountName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the status of the ongoing migration for the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param migrationName The name of the Storage Account Migration. It should always be 'default'\n   * @param options The options parameters.\n   */\n  getCustomerInitiatedMigration(\n    resourceGroupName: string,\n    accountName: string,\n    migrationName: MigrationName,\n    options?: StorageAccountsGetCustomerInitiatedMigrationOptionalParams\n  ): Promise<StorageAccountsGetCustomerInitiatedMigrationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, migrationName, options },\n      getCustomerInitiatedMigrationOperationSpec\n    );\n  }\n\n  /**\n   * Restore blobs in the specified blob ranges\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide for restore blob ranges.\n   * @param options The options parameters.\n   */\n  async beginRestoreBlobRanges(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: BlobRestoreParameters,\n    options?: StorageAccountsRestoreBlobRangesOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StorageAccountsRestoreBlobRangesResponse>,\n      StorageAccountsRestoreBlobRangesResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StorageAccountsRestoreBlobRangesResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, parameters, options },\n      spec: restoreBlobRangesOperationSpec\n    });\n    const poller = await createHttpPoller<\n      StorageAccountsRestoreBlobRangesResponse,\n      OperationState<StorageAccountsRestoreBlobRangesResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Restore blobs in the specified blob ranges\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The parameters to provide for restore blob ranges.\n   * @param options The options parameters.\n   */\n  async beginRestoreBlobRangesAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: BlobRestoreParameters,\n    options?: StorageAccountsRestoreBlobRangesOptionalParams\n  ): Promise<StorageAccountsRestoreBlobRangesResponse> {\n    const poller = await this.beginRestoreBlobRanges(\n      resourceGroupName,\n      accountName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Revoke user delegation keys.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  revokeUserDelegationKeys(\n    resourceGroupName: string,\n    accountName: string,\n    options?: StorageAccountsRevokeUserDelegationKeysOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      revokeUserDelegationKeysOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: StorageAccountsListNextOptionalParams\n  ): Promise<StorageAccountsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: StorageAccountsListByResourceGroupNextOptionalParams\n  ): Promise<StorageAccountsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResult\n    }\n  },\n  requestBody: Parameters.accountName,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    201: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    202: {\n      bodyMapper: Mappers.StorageAccount\n    },\n    204: {\n      bodyMapper: Mappers.StorageAccount\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  serializer\n};\nconst getPropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccount\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccount\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListKeysResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListKeysResult\n    }\n  },\n  requestBody: Parameters.regenerateKey,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listAccountSASOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListAccountSasResponse\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listServiceSASOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListServiceSasResponse\n    }\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion, Parameters.failoverType],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  serializer\n};\nconst hierarchicalNamespaceMigrationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.requestType],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst abortHierarchicalNamespaceMigrationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst customerInitiatedMigrationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/startAccountMigration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getCustomerInitiatedMigrationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/accountMigrations/{migrationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountMigration\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponseAutoGenerated\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.migrationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restoreBlobRangesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobRestoreStatus\n    },\n    201: {\n      bodyMapper: Mappers.BlobRestoreStatus\n    },\n    202: {\n      bodyMapper: Mappers.BlobRestoreStatus\n    },\n    204: {\n      bodyMapper: Mappers.BlobRestoreStatus\n    }\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst revokeUserDelegationKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys\",\n  httpMethod: \"POST\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName2\n  ],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListResult\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageAccountListResult\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DeletedAccounts } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  DeletedAccount,\n  DeletedAccountsListNextOptionalParams,\n  DeletedAccountsListOptionalParams,\n  DeletedAccountsListResponse,\n  DeletedAccountsGetOptionalParams,\n  DeletedAccountsGetResponse,\n  DeletedAccountsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeletedAccounts operations. */\nexport class DeletedAccountsImpl implements DeletedAccounts {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeletedAccounts class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists deleted accounts under the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DeletedAccountsListOptionalParams\n  ): PagedAsyncIterableIterator<DeletedAccount> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DeletedAccountsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeletedAccount[]> {\n    let result: DeletedAccountsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DeletedAccountsListOptionalParams\n  ): AsyncIterableIterator<DeletedAccount> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists deleted accounts under the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DeletedAccountsListOptionalParams\n  ): Promise<DeletedAccountsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Get properties of specified deleted account resource.\n   * @param deletedAccountName Name of the deleted storage account.\n   * @param location The location of the deleted storage account.\n   * @param options The options parameters.\n   */\n  get(\n    deletedAccountName: string,\n    location: string,\n    options?: DeletedAccountsGetOptionalParams\n  ): Promise<DeletedAccountsGetResponse> {\n    return this.client.sendOperationRequest(\n      { deletedAccountName, location, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DeletedAccountsListNextOptionalParams\n  ): Promise<DeletedAccountsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedAccountListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedAccount\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.deletedAccountName,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedAccountListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  Usage,\n  UsagesListByLocationOptionalParams,\n  UsagesListByLocationResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the current usage count and the limit for the resources of the location under the subscription.\n   * @param location The location of the Azure Storage resource.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    location: string,\n    options?: UsagesListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listByLocationPagingAll(location, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(location, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    location: string,\n    options?: UsagesListByLocationOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: UsagesListByLocationResponse;\n    result = await this._listByLocation(location, options);\n    yield result.value || [];\n  }\n\n  private async *listByLocationPagingAll(\n    location: string,\n    options?: UsagesListByLocationOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listByLocationPagingPage(location, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the current usage count and the limit for the resources of the location under the subscription.\n   * @param location The location of the Azure Storage resource.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    location: string,\n    options?: UsagesListByLocationOptionalParams\n  ): Promise<UsagesListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { location, options },\n      listByLocationOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagementPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  ManagementPolicyName,\n  ManagementPoliciesGetOptionalParams,\n  ManagementPoliciesGetResponse,\n  ManagementPolicy,\n  ManagementPoliciesCreateOrUpdateOptionalParams,\n  ManagementPoliciesCreateOrUpdateResponse,\n  ManagementPoliciesDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing ManagementPolicies operations. */\nexport class ManagementPoliciesImpl implements ManagementPolicies {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagementPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the managementpolicy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    options?: ManagementPoliciesGetOptionalParams\n  ): Promise<ManagementPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, managementPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets the managementpolicy to the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param properties The ManagementPolicy set to a storage account.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    properties: ManagementPolicy,\n    options?: ManagementPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ManagementPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        managementPolicyName,\n        properties,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the managementpolicy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param managementPolicyName The name of the Storage Account Management Policy. It should always be\n   *                             'default'\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    managementPolicyName: ManagementPolicyName,\n    options?: ManagementPoliciesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, managementPolicyName, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementPolicy\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.managementPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagementPolicy\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.managementPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.managementPolicyName\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { BlobInventoryPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  BlobInventoryPolicy,\n  BlobInventoryPoliciesListOptionalParams,\n  BlobInventoryPoliciesListResponse,\n  BlobInventoryPolicyName,\n  BlobInventoryPoliciesGetOptionalParams,\n  BlobInventoryPoliciesGetResponse,\n  BlobInventoryPoliciesCreateOrUpdateOptionalParams,\n  BlobInventoryPoliciesCreateOrUpdateResponse,\n  BlobInventoryPoliciesDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BlobInventoryPolicies operations. */\nexport class BlobInventoryPoliciesImpl implements BlobInventoryPolicies {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class BlobInventoryPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the blob inventory policy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobInventoryPoliciesListOptionalParams\n  ): PagedAsyncIterableIterator<BlobInventoryPolicy> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobInventoryPoliciesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<BlobInventoryPolicy[]> {\n    let result: BlobInventoryPoliciesListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobInventoryPoliciesListOptionalParams\n  ): AsyncIterableIterator<BlobInventoryPolicy> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the blob inventory policy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should\n   *                                always be 'default'\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    blobInventoryPolicyName: BlobInventoryPolicyName,\n    options?: BlobInventoryPoliciesGetOptionalParams\n  ): Promise<BlobInventoryPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, blobInventoryPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets the blob inventory policy to the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should\n   *                                always be 'default'\n   * @param properties The blob inventory policy set to a storage account.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    blobInventoryPolicyName: BlobInventoryPolicyName,\n    properties: BlobInventoryPolicy,\n    options?: BlobInventoryPoliciesCreateOrUpdateOptionalParams\n  ): Promise<BlobInventoryPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        blobInventoryPolicyName,\n        properties,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the blob inventory policy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param blobInventoryPolicyName The name of the storage account blob inventory policy. It should\n   *                                always be 'default'\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    blobInventoryPolicyName: BlobInventoryPolicyName,\n    options?: BlobInventoryPoliciesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, blobInventoryPolicyName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the blob inventory policy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobInventoryPoliciesListOptionalParams\n  ): Promise<BlobInventoryPoliciesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobInventoryPolicy\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.blobInventoryPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobInventoryPolicy\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.properties1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.blobInventoryPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.blobInventoryPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobInventoryPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListOptionalParams,\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsPutOptionalParams,\n  PrivateEndpointConnectionsPutResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all the private endpoint connections associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result: PrivateEndpointConnectionsListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List all the private endpoint connections associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified private endpoint connection associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      Azure resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the state of specified private endpoint connection associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      Azure resource\n   * @param properties The private endpoint connection properties.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    accountName: string,\n    privateEndpointConnectionName: string,\n    properties: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsPutOptionalParams\n  ): Promise<PrivateEndpointConnectionsPutResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        privateEndpointConnectionName,\n        properties,\n        options\n      },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the specified private endpoint connection associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param privateEndpointConnectionName The name of the private endpoint connection associated with the\n   *                                      Azure resource\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.properties2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  PrivateLinkResourcesListByStorageAccountOptionalParams,\n  PrivateLinkResourcesListByStorageAccountResponse\n} from \"../models\";\n\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources that need to be created for a storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  listByStorageAccount(\n    resourceGroupName: string,\n    accountName: string,\n    options?: PrivateLinkResourcesListByStorageAccountOptionalParams\n  ): Promise<PrivateLinkResourcesListByStorageAccountResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listByStorageAccountOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByStorageAccountOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ObjectReplicationPoliciesOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  ObjectReplicationPolicy,\n  ObjectReplicationPoliciesListOptionalParams,\n  ObjectReplicationPoliciesListResponse,\n  ObjectReplicationPoliciesGetOptionalParams,\n  ObjectReplicationPoliciesGetResponse,\n  ObjectReplicationPoliciesCreateOrUpdateOptionalParams,\n  ObjectReplicationPoliciesCreateOrUpdateResponse,\n  ObjectReplicationPoliciesDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ObjectReplicationPoliciesOperations operations. */\nexport class ObjectReplicationPoliciesOperationsImpl\n  implements ObjectReplicationPoliciesOperations {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class ObjectReplicationPoliciesOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the object replication policies associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: ObjectReplicationPoliciesListOptionalParams\n  ): PagedAsyncIterableIterator<ObjectReplicationPolicy> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: ObjectReplicationPoliciesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ObjectReplicationPolicy[]> {\n    let result: ObjectReplicationPoliciesListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: ObjectReplicationPoliciesListOptionalParams\n  ): AsyncIterableIterator<ObjectReplicationPolicy> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the object replication policies associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: ObjectReplicationPoliciesListOptionalParams\n  ): Promise<ObjectReplicationPoliciesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the object replication policy of the storage account by policy ID.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param objectReplicationPolicyId For the destination account, provide the value 'default'. Configure\n   *                                  the policy on the destination account first. For the source account, provide the value of the policy\n   *                                  ID that is returned when you download the policy that was defined on the destination account. The\n   *                                  policy is downloaded as a JSON file.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    objectReplicationPolicyId: string,\n    options?: ObjectReplicationPoliciesGetOptionalParams\n  ): Promise<ObjectReplicationPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, objectReplicationPolicyId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the object replication policy of the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param objectReplicationPolicyId For the destination account, provide the value 'default'. Configure\n   *                                  the policy on the destination account first. For the source account, provide the value of the policy\n   *                                  ID that is returned when you download the policy that was defined on the destination account. The\n   *                                  policy is downloaded as a JSON file.\n   * @param properties The object replication policy set to a storage account. A unique policy ID will be\n   *                   created if absent.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    objectReplicationPolicyId: string,\n    properties: ObjectReplicationPolicy,\n    options?: ObjectReplicationPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ObjectReplicationPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        objectReplicationPolicyId,\n        properties,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the object replication policy associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param objectReplicationPolicyId For the destination account, provide the value 'default'. Configure\n   *                                  the policy on the destination account first. For the source account, provide the value of the policy\n   *                                  ID that is returned when you download the policy that was defined on the destination account. The\n   *                                  policy is downloaded as a JSON file.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    objectReplicationPolicyId: string,\n    options?: ObjectReplicationPoliciesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, objectReplicationPolicyId, options },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ObjectReplicationPolicies\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ObjectReplicationPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.objectReplicationPolicyId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ObjectReplicationPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.properties3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.objectReplicationPolicyId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.objectReplicationPolicyId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { LocalUsersOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  LocalUser,\n  LocalUsersListOptionalParams,\n  LocalUsersListResponse,\n  LocalUsersGetOptionalParams,\n  LocalUsersGetResponse,\n  LocalUsersCreateOrUpdateOptionalParams,\n  LocalUsersCreateOrUpdateResponse,\n  LocalUsersDeleteOptionalParams,\n  LocalUsersListKeysOptionalParams,\n  LocalUsersListKeysResponse,\n  LocalUsersRegeneratePasswordOptionalParams,\n  LocalUsersRegeneratePasswordResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LocalUsersOperations operations. */\nexport class LocalUsersOperationsImpl implements LocalUsersOperations {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class LocalUsersOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the local users associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: LocalUsersListOptionalParams\n  ): PagedAsyncIterableIterator<LocalUser> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: LocalUsersListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<LocalUser[]> {\n    let result: LocalUsersListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: LocalUsersListOptionalParams\n  ): AsyncIterableIterator<LocalUser> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List the local users associated with the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: LocalUsersListOptionalParams\n  ): Promise<LocalUsersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the local user of the storage account by username.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersGetOptionalParams\n  ): Promise<LocalUsersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, username, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the properties of a local user associated with the storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param properties The local user associated with a storage account.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    properties: LocalUser,\n    options?: LocalUsersCreateOrUpdateOptionalParams\n  ): Promise<LocalUsersCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, username, properties, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the local user associated with the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, username, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * List SSH authorized keys and shared key of the local user.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  listKeys(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersListKeysOptionalParams\n  ): Promise<LocalUsersListKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, username, options },\n      listKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerate the local user SSH password.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param username The name of local user. The username must contain lowercase letters and numbers\n   *                 only. It must be unique only within the storage account.\n   * @param options The options parameters.\n   */\n  regeneratePassword(\n    resourceGroupName: string,\n    accountName: string,\n    username: string,\n    options?: LocalUsersRegeneratePasswordOptionalParams\n  ): Promise<LocalUsersRegeneratePasswordResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, username, options },\n      regeneratePasswordOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocalUsers\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocalUser\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.username\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocalUser\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.properties4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.username\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.username\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocalUserKeys\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.username\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regeneratePasswordOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocalUserRegeneratePasswordResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.username\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EncryptionScopes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  EncryptionScope,\n  EncryptionScopesListNextOptionalParams,\n  EncryptionScopesListOptionalParams,\n  EncryptionScopesListResponse,\n  EncryptionScopesPutOptionalParams,\n  EncryptionScopesPutResponse,\n  EncryptionScopesPatchOptionalParams,\n  EncryptionScopesPatchResponse,\n  EncryptionScopesGetOptionalParams,\n  EncryptionScopesGetResponse,\n  EncryptionScopesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EncryptionScopes operations. */\nexport class EncryptionScopesImpl implements EncryptionScopes {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class EncryptionScopes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the encryption scopes available under the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: EncryptionScopesListOptionalParams\n  ): PagedAsyncIterableIterator<EncryptionScope> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: EncryptionScopesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EncryptionScope[]> {\n    let result: EncryptionScopesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: EncryptionScopesListOptionalParams\n  ): AsyncIterableIterator<EncryptionScope> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Synchronously creates or updates an encryption scope under the specified storage account. If an\n   * encryption scope is already created and a subsequent request is issued with different properties,\n   * the encryption scope properties will be updated per the specified request.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param encryptionScope Encryption scope properties to be used for the create or update.\n   * @param options The options parameters.\n   */\n  put(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    encryptionScope: EncryptionScope,\n    options?: EncryptionScopesPutOptionalParams\n  ): Promise<EncryptionScopesPutResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        encryptionScopeName,\n        encryptionScope,\n        options\n      },\n      putOperationSpec\n    );\n  }\n\n  /**\n   * Update encryption scope properties as specified in the request body. Update fails if the specified\n   * encryption scope does not already exist.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param encryptionScope Encryption scope properties to be used for the update.\n   * @param options The options parameters.\n   */\n  patch(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    encryptionScope: EncryptionScope,\n    options?: EncryptionScopesPatchOptionalParams\n  ): Promise<EncryptionScopesPatchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        accountName,\n        encryptionScopeName,\n        encryptionScope,\n        options\n      },\n      patchOperationSpec\n    );\n  }\n\n  /**\n   * Returns the properties for the specified encryption scope.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param encryptionScopeName The name of the encryption scope within the specified storage account.\n   *                            Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case\n   *                            letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a\n   *                            letter or number.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    encryptionScopeName: string,\n    options?: EncryptionScopesGetOptionalParams\n  ): Promise<EncryptionScopesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, encryptionScopeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Lists all the encryption scopes available under the specified storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: EncryptionScopesListOptionalParams\n  ): Promise<EncryptionScopesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: EncryptionScopesListNextOptionalParams\n  ): Promise<EncryptionScopesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst putOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionScope\n    },\n    201: {\n      bodyMapper: Mappers.EncryptionScope\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.encryptionScope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.encryptionScopeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst patchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionScope\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.encryptionScope,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.encryptionScopeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionScope\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.encryptionScopeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionScopeListResult\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.maxpagesize,\n    Parameters.filter,\n    Parameters.include\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionScopeListResult\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { BlobServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  BlobServiceProperties,\n  BlobServicesListOptionalParams,\n  BlobServicesListResponse,\n  BlobServicesSetServicePropertiesOptionalParams,\n  BlobServicesSetServicePropertiesResponse,\n  BlobServicesGetServicePropertiesOptionalParams,\n  BlobServicesGetServicePropertiesResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BlobServices operations. */\nexport class BlobServicesImpl implements BlobServices {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class BlobServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List blob services of storage account. It returns a collection of one object named default.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams\n  ): PagedAsyncIterableIterator<BlobServiceProperties> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<BlobServiceProperties[]> {\n    let result: BlobServicesListResponse;\n    result = await this._list(resourceGroupName, accountName, options);\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams\n  ): AsyncIterableIterator<BlobServiceProperties> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List blob services of storage account. It returns a collection of one object named default.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesListOptionalParams\n  ): Promise<BlobServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Sets the properties of a storage account’s Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of a storage account’s Blob service, including properties for\n   *                   Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: BlobServiceProperties,\n    options?: BlobServicesSetServicePropertiesOptionalParams\n  ): Promise<BlobServicesSetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      setServicePropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobServicesGetServicePropertiesOptionalParams\n  ): Promise<BlobServicesGetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getServicePropertiesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceItems\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst setServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties\n    }\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.blobServicesName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.blobServicesName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BlobContainers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ListContainerItem,\n  BlobContainersListNextOptionalParams,\n  BlobContainersListOptionalParams,\n  BlobContainersListResponse,\n  BlobContainer,\n  BlobContainersCreateOptionalParams,\n  BlobContainersCreateResponse,\n  BlobContainersUpdateOptionalParams,\n  BlobContainersUpdateResponse,\n  BlobContainersGetOptionalParams,\n  BlobContainersGetResponse,\n  BlobContainersDeleteOptionalParams,\n  LegalHold,\n  BlobContainersSetLegalHoldOptionalParams,\n  BlobContainersSetLegalHoldResponse,\n  BlobContainersClearLegalHoldOptionalParams,\n  BlobContainersClearLegalHoldResponse,\n  BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams,\n  BlobContainersCreateOrUpdateImmutabilityPolicyResponse,\n  BlobContainersGetImmutabilityPolicyOptionalParams,\n  BlobContainersGetImmutabilityPolicyResponse,\n  BlobContainersDeleteImmutabilityPolicyOptionalParams,\n  BlobContainersDeleteImmutabilityPolicyResponse,\n  BlobContainersLockImmutabilityPolicyOptionalParams,\n  BlobContainersLockImmutabilityPolicyResponse,\n  BlobContainersExtendImmutabilityPolicyOptionalParams,\n  BlobContainersExtendImmutabilityPolicyResponse,\n  BlobContainersLeaseOptionalParams,\n  BlobContainersLeaseResponse,\n  BlobContainersObjectLevelWormOptionalParams,\n  BlobContainersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BlobContainers operations. */\nexport class BlobContainersImpl implements BlobContainers {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class BlobContainers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all containers and does not support a prefix like data plane. Also SRP today does not return\n   * continuation token.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobContainersListOptionalParams\n  ): PagedAsyncIterableIterator<ListContainerItem> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobContainersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ListContainerItem[]> {\n    let result: BlobContainersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobContainersListOptionalParams\n  ): AsyncIterableIterator<ListContainerItem> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all containers and does not support a prefix like data plane. Also SRP today does not return\n   * continuation token.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: BlobContainersListOptionalParams\n  ): Promise<BlobContainersListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new container under the specified account as described by request body. The container\n   * resource includes metadata and properties for that container. It does not include a list of the\n   * blobs contained by the container.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param blobContainer Properties of the blob container to create.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    blobContainer: BlobContainer,\n    options?: BlobContainersCreateOptionalParams\n  ): Promise<BlobContainersCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, blobContainer, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Updates container properties as specified in request body. Properties not mentioned in the request\n   * will be unchanged. Update fails if the specified container doesn't already exist.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param blobContainer Properties to update for the blob container.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    blobContainer: BlobContainer,\n    options?: BlobContainersUpdateOptionalParams\n  ): Promise<BlobContainersUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, blobContainer, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets properties of a specified container.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersGetOptionalParams\n  ): Promise<BlobContainersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes specified container under its account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows\n   * an append pattern and does not clear out the existing tags that are not specified in the request.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param legalHold The LegalHold property that will be set to a blob container.\n   * @param options The options parameters.\n   */\n  setLegalHold(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    legalHold: LegalHold,\n    options?: BlobContainersSetLegalHoldOptionalParams\n  ): Promise<BlobContainersSetLegalHoldResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, legalHold, options },\n      setLegalHoldOperationSpec\n    );\n  }\n\n  /**\n   * Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation.\n   * ClearLegalHold clears out only the specified tags in the request.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param legalHold The LegalHold property that will be clear from a blob container.\n   * @param options The options parameters.\n   */\n  clearLegalHold(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    legalHold: LegalHold,\n    options?: BlobContainersClearLegalHoldOptionalParams\n  ): Promise<BlobContainersClearLegalHoldResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, legalHold, options },\n      clearLegalHoldOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not\n   * required for this operation.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  createOrUpdateImmutabilityPolicy(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams\n  ): Promise<BlobContainersCreateOrUpdateImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, options },\n      createOrUpdateImmutabilityPolicyOperationSpec\n    );\n  }\n\n  /**\n   * Gets the existing immutability policy along with the corresponding ETag in response headers and\n   * body.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  getImmutabilityPolicy(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersGetImmutabilityPolicyOptionalParams\n  ): Promise<BlobContainersGetImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, options },\n      getImmutabilityPolicyOperationSpec\n    );\n  }\n\n  /**\n   * Aborts an unlocked immutability policy. The response of delete has\n   * immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation.\n   * Deleting a locked immutability policy is not allowed, the only way is to delete the container after\n   * deleting all expired blobs inside the policy locked container.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param ifMatch The entity state (ETag) version of the immutability policy to update. A value of \"*\"\n   *                can be used to apply the operation only if the immutability policy already exists. If omitted, this\n   *                operation will always be applied.\n   * @param options The options parameters.\n   */\n  deleteImmutabilityPolicy(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    ifMatch: string,\n    options?: BlobContainersDeleteImmutabilityPolicyOptionalParams\n  ): Promise<BlobContainersDeleteImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, ifMatch, options },\n      deleteImmutabilityPolicyOperationSpec\n    );\n  }\n\n  /**\n   * Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is\n   * ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param ifMatch The entity state (ETag) version of the immutability policy to update. A value of \"*\"\n   *                can be used to apply the operation only if the immutability policy already exists. If omitted, this\n   *                operation will always be applied.\n   * @param options The options parameters.\n   */\n  lockImmutabilityPolicy(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    ifMatch: string,\n    options?: BlobContainersLockImmutabilityPolicyOptionalParams\n  ): Promise<BlobContainersLockImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, ifMatch, options },\n      lockImmutabilityPolicyOperationSpec\n    );\n  }\n\n  /**\n   * Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action\n   * allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param ifMatch The entity state (ETag) version of the immutability policy to update. A value of \"*\"\n   *                can be used to apply the operation only if the immutability policy already exists. If omitted, this\n   *                operation will always be applied.\n   * @param options The options parameters.\n   */\n  extendImmutabilityPolicy(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    ifMatch: string,\n    options?: BlobContainersExtendImmutabilityPolicyOptionalParams\n  ): Promise<BlobContainersExtendImmutabilityPolicyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, ifMatch, options },\n      extendImmutabilityPolicyOperationSpec\n    );\n  }\n\n  /**\n   * The Lease Container operation establishes and manages a lock on a container for delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  lease(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersLeaseOptionalParams\n  ): Promise<BlobContainersLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, containerName, options },\n      leaseOperationSpec\n    );\n  }\n\n  /**\n   * This operation migrates a blob container from container level WORM to object level immutability\n   * enabled container. Prerequisites require a container level immutability policy either in locked or\n   * unlocked state, Account level versioning must be enabled and there should be no Legal hold on the\n   * container.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  async beginObjectLevelWorm(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersObjectLevelWormOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, accountName, containerName, options },\n      spec: objectLevelWormOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * This operation migrates a blob container from container level WORM to object level immutability\n   * enabled container. Prerequisites require a container level immutability policy either in locked or\n   * unlocked state, Account level versioning must be enabled and there should be no Legal hold on the\n   * container.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param containerName The name of the blob container within the specified storage account. Blob\n   *                      container names must be between 3 and 63 characters in length and use numbers, lower-case letters\n   *                      and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or\n   *                      number.\n   * @param options The options parameters.\n   */\n  async beginObjectLevelWormAndWait(\n    resourceGroupName: string,\n    accountName: string,\n    containerName: string,\n    options?: BlobContainersObjectLevelWormOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginObjectLevelWorm(\n      resourceGroupName,\n      accountName,\n      containerName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: BlobContainersListNextOptionalParams\n  ): Promise<BlobContainersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainerItems\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.maxpagesize1,\n    Parameters.include1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobContainer\n    },\n    201: {\n      bodyMapper: Mappers.BlobContainer\n    }\n  },\n  requestBody: Parameters.blobContainer,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobContainer\n    }\n  },\n  requestBody: Parameters.blobContainer,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobContainer\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  serializer\n};\nconst setLegalHoldOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LegalHold\n    }\n  },\n  requestBody: Parameters.legalHold,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst clearLegalHoldOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LegalHold\n    }\n  },\n  requestBody: Parameters.legalHold,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImmutabilityPolicy,\n      headersMapper:\n        Mappers.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName,\n    Parameters.immutabilityPolicyName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst getImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImmutabilityPolicy,\n      headersMapper: Mappers.BlobContainersGetImmutabilityPolicyHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName,\n    Parameters.immutabilityPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch],\n  serializer\n};\nconst deleteImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImmutabilityPolicy,\n      headersMapper: Mappers.BlobContainersDeleteImmutabilityPolicyHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName,\n    Parameters.immutabilityPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst lockImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImmutabilityPolicy,\n      headersMapper: Mappers.BlobContainersLockImmutabilityPolicyHeaders\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifMatch1],\n  serializer\n};\nconst extendImmutabilityPolicyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImmutabilityPolicy,\n      headersMapper: Mappers.BlobContainersExtendImmutabilityPolicyHeaders\n    }\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch1\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst leaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LeaseContainerResponse\n    }\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst objectLevelWormOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.containerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainerItems\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { FileServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  FileServicesListOptionalParams,\n  FileServicesListResponse,\n  FileServiceProperties,\n  FileServicesSetServicePropertiesOptionalParams,\n  FileServicesSetServicePropertiesResponse,\n  FileServicesGetServicePropertiesOptionalParams,\n  FileServicesGetServicePropertiesResponse\n} from \"../models\";\n\n/** Class containing FileServices operations. */\nexport class FileServicesImpl implements FileServices {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class FileServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all file services in storage accounts\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesListOptionalParams\n  ): Promise<FileServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource\n   * Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of file services in storage accounts, including CORS (Cross-Origin\n   *                   Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: FileServiceProperties,\n    options?: FileServicesSetServicePropertiesOptionalParams\n  ): Promise<FileServicesSetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      setServicePropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource\n   * Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileServicesGetServicePropertiesOptionalParams\n  ): Promise<FileServicesGetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getServicePropertiesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceItems\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst setServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.fileServicesName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.fileServicesName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { FileShares } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  FileShareItem,\n  FileSharesListNextOptionalParams,\n  FileSharesListOptionalParams,\n  FileSharesListResponse,\n  FileShare,\n  FileSharesCreateOptionalParams,\n  FileSharesCreateResponse,\n  FileSharesUpdateOptionalParams,\n  FileSharesUpdateResponse,\n  FileSharesGetOptionalParams,\n  FileSharesGetResponse,\n  FileSharesDeleteOptionalParams,\n  DeletedShare,\n  FileSharesRestoreOptionalParams,\n  FileSharesLeaseOptionalParams,\n  FileSharesLeaseResponse,\n  FileSharesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing FileShares operations. */\nexport class FileSharesImpl implements FileShares {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class FileShares class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all shares.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileSharesListOptionalParams\n  ): PagedAsyncIterableIterator<FileShareItem> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileSharesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<FileShareItem[]> {\n    let result: FileSharesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileSharesListOptionalParams\n  ): AsyncIterableIterator<FileShareItem> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all shares.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: FileSharesListOptionalParams\n  ): Promise<FileSharesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new share under the specified account as described by request body. The share resource\n   * includes metadata and properties for that share. It does not include a list of the files contained\n   * by the share.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param fileShare Properties of the file share to create.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    fileShare: FileShare,\n    options?: FileSharesCreateOptionalParams\n  ): Promise<FileSharesCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, fileShare, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Updates share properties as specified in request body. Properties not mentioned in the request will\n   * not be changed. Update fails if the specified share does not already exist.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param fileShare Properties to update for the file share.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    fileShare: FileShare,\n    options?: FileSharesUpdateOptionalParams\n  ): Promise<FileSharesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, fileShare, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets properties of a specified share.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    options?: FileSharesGetOptionalParams\n  ): Promise<FileSharesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes specified share under its account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    options?: FileSharesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Restore a file share within a valid retention days if share soft delete is enabled\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param deletedShare The deleted share to be restored.\n   * @param options The options parameters.\n   */\n  restore(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    deletedShare: DeletedShare,\n    options?: FileSharesRestoreOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, deletedShare, options },\n      restoreOperationSpec\n    );\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share for delete operations. The lock\n   * duration can be 15 to 60 seconds, or can be infinite.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param shareName The name of the file share within the specified storage account. File share names\n   *                  must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only.\n   *                  Every dash (-) character must be immediately preceded and followed by a letter or number.\n   * @param options The options parameters.\n   */\n  lease(\n    resourceGroupName: string,\n    accountName: string,\n    shareName: string,\n    options?: FileSharesLeaseOptionalParams\n  ): Promise<FileSharesLeaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, shareName, options },\n      leaseOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: FileSharesListNextOptionalParams\n  ): Promise<FileSharesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileShareItems\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.maxpagesize1,\n    Parameters.expand2\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileShare\n    },\n    201: {\n      bodyMapper: Mappers.FileShare\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.fileShare,\n  queryParameters: [Parameters.apiVersion, Parameters.expand2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileShare\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.fileShare,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileShare\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.expand2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [Parameters.accept, Parameters.xMsSnapshot],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.include2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [Parameters.accept, Parameters.xMsSnapshot],\n  serializer\n};\nconst restoreOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.deletedShare,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst leaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LeaseShareResponse,\n      headersMapper: Mappers.FileSharesLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.shareName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.xMsSnapshot\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileShareItems\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { QueueServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  QueueServicesListOptionalParams,\n  QueueServicesListResponse,\n  QueueServiceProperties,\n  QueueServicesSetServicePropertiesOptionalParams,\n  QueueServicesSetServicePropertiesResponse,\n  QueueServicesGetServicePropertiesOptionalParams,\n  QueueServicesGetServicePropertiesResponse\n} from \"../models\";\n\n/** Class containing QueueServices operations. */\nexport class QueueServicesImpl implements QueueServices {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class QueueServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all queue services for the storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueServicesListOptionalParams\n  ): Promise<QueueServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Sets the properties of a storage account’s Queue service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of a storage account’s Queue service, only properties for Storage\n   *                   Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: QueueServiceProperties,\n    options?: QueueServicesSetServicePropertiesOptionalParams\n  ): Promise<QueueServicesSetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      setServicePropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Queue service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueServicesGetServicePropertiesOptionalParams\n  ): Promise<QueueServicesGetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getServicePropertiesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListQueueServices\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst setServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueueServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.QueueServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Queue } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  ListQueue,\n  QueueListNextOptionalParams,\n  QueueListOptionalParams,\n  QueueListResponse,\n  StorageQueue,\n  QueueCreateOptionalParams,\n  QueueCreateResponse,\n  QueueUpdateOptionalParams,\n  QueueUpdateResponse,\n  QueueGetOptionalParams,\n  QueueGetResponse,\n  QueueDeleteOptionalParams,\n  QueueListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Queue operations. */\nexport class QueueImpl implements Queue {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class Queue class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all the queues under the specified storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueListOptionalParams\n  ): PagedAsyncIterableIterator<ListQueue> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ListQueue[]> {\n    let result: QueueListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueListOptionalParams\n  ): AsyncIterableIterator<ListQueue> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a new queue with the specified queue name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param queue Queue properties and metadata to be created with\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    queue: StorageQueue,\n    options?: QueueCreateOptionalParams\n  ): Promise<QueueCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, queueName, queue, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new queue with the specified queue name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param queue Queue properties and metadata to be created with\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    queue: StorageQueue,\n    options?: QueueUpdateOptionalParams\n  ): Promise<QueueUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, queueName, queue, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the queue with the specified queue name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    options?: QueueGetOptionalParams\n  ): Promise<QueueGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, queueName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the queue with the specified queue name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param queueName A queue name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should\n   *                  begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    queueName: string,\n    options?: QueueDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, queueName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all the queues under the specified storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: QueueListOptionalParams\n  ): Promise<QueueListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: QueueListNextOptionalParams\n  ): Promise<QueueListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageQueue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.queue,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageQueue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.queue,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageQueue\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.queueName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListQueueResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.maxpagesize1\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListQueueResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { TableServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  TableServicesListOptionalParams,\n  TableServicesListResponse,\n  TableServiceProperties,\n  TableServicesSetServicePropertiesOptionalParams,\n  TableServicesSetServicePropertiesResponse,\n  TableServicesGetServicePropertiesOptionalParams,\n  TableServicesGetServicePropertiesResponse\n} from \"../models\";\n\n/** Class containing TableServices operations. */\nexport class TableServicesImpl implements TableServices {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class TableServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all table services for the storage account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableServicesListOptionalParams\n  ): Promise<TableServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Sets the properties of a storage account’s Table service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param parameters The properties of a storage account’s Table service, only properties for Storage\n   *                   Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.\n   * @param options The options parameters.\n   */\n  setServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    parameters: TableServiceProperties,\n    options?: TableServicesSetServicePropertiesOptionalParams\n  ): Promise<TableServicesSetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, parameters, options },\n      setServicePropertiesOperationSpec\n    );\n  }\n\n  /**\n   * Gets the properties of a storage account’s Table service, including properties for Storage Analytics\n   * and CORS (Cross-Origin Resource Sharing) rules.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  getServiceProperties(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableServicesGetServicePropertiesOptionalParams\n  ): Promise<TableServicesGetServicePropertiesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      getServicePropertiesOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListTableServices\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst setServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TableServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getServicePropertiesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TableServiceProperties\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { TableOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageManagementClient } from \"../storageManagementClient\";\nimport {\n  Table,\n  TableListNextOptionalParams,\n  TableListOptionalParams,\n  TableListResponse,\n  TableCreateOptionalParams,\n  TableCreateResponse,\n  TableUpdateOptionalParams,\n  TableUpdateResponse,\n  TableGetOptionalParams,\n  TableGetResponse,\n  TableDeleteOptionalParams,\n  TableListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing TableOperations operations. */\nexport class TableOperationsImpl implements TableOperations {\n  private readonly client: StorageManagementClient;\n\n  /**\n   * Initialize a new instance of the class TableOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all the tables under the specified storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableListOptionalParams\n  ): PagedAsyncIterableIterator<Table> {\n    const iter = this.listPagingAll(resourceGroupName, accountName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          accountName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Table[]> {\n    let result: TableListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, accountName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        accountName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableListOptionalParams\n  ): AsyncIterableIterator<Table> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      accountName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates a new table with the specified table name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param tableName A table name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric\n   *                  character.\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    accountName: string,\n    tableName: string,\n    options?: TableCreateOptionalParams\n  ): Promise<TableCreateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, tableName, options },\n      createOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new table with the specified table name, under the specified account.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param tableName A table name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric\n   *                  character.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    accountName: string,\n    tableName: string,\n    options?: TableUpdateOptionalParams\n  ): Promise<TableUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, tableName, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the table with the specified table name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param tableName A table name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric\n   *                  character.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    accountName: string,\n    tableName: string,\n    options?: TableGetOptionalParams\n  ): Promise<TableGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, tableName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the table with the specified table name, under the specified account if it exists.\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param tableName A table name must be unique within a storage account and must be between 3 and 63\n   *                  characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric\n   *                  character.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    accountName: string,\n    tableName: string,\n    options?: TableDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, tableName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all the tables under the specified storage account\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    accountName: string,\n    options?: TableListOptionalParams\n  ): Promise<TableListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group within the user's subscription. The name is\n   *                          case insensitive.\n   * @param accountName The name of the storage account within the specified resource group. Storage\n   *                    account names must be between 3 and 24 characters in length and use numbers and lower-case letters\n   *                    only.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    accountName: string,\n    nextLink: string,\n    options?: TableListNextOptionalParams\n  ): Promise<TableListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, accountName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Table\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListTableResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListTableResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.accountName1,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  OperationsImpl,\n  SkusImpl,\n  StorageAccountsImpl,\n  DeletedAccountsImpl,\n  UsagesImpl,\n  ManagementPoliciesImpl,\n  BlobInventoryPoliciesImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  ObjectReplicationPoliciesOperationsImpl,\n  LocalUsersOperationsImpl,\n  EncryptionScopesImpl,\n  BlobServicesImpl,\n  BlobContainersImpl,\n  FileServicesImpl,\n  FileSharesImpl,\n  QueueServicesImpl,\n  QueueImpl,\n  TableServicesImpl,\n  TableOperationsImpl\n} from \"./operations\";\nimport {\n  Operations,\n  Skus,\n  StorageAccounts,\n  DeletedAccounts,\n  Usages,\n  ManagementPolicies,\n  BlobInventoryPolicies,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  ObjectReplicationPoliciesOperations,\n  LocalUsersOperations,\n  EncryptionScopes,\n  BlobServices,\n  BlobContainers,\n  FileServices,\n  FileShares,\n  QueueServices,\n  Queue,\n  TableServices,\n  TableOperations\n} from \"./operationsInterfaces\";\nimport { StorageManagementClientOptionalParams } from \"./models\";\n\nexport class StorageManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the StorageManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: StorageManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: StorageManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-storage/18.2.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2023-01-01\";\n    this.operations = new OperationsImpl(this);\n    this.skus = new SkusImpl(this);\n    this.storageAccounts = new StorageAccountsImpl(this);\n    this.deletedAccounts = new DeletedAccountsImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.managementPolicies = new ManagementPoliciesImpl(this);\n    this.blobInventoryPolicies = new BlobInventoryPoliciesImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.objectReplicationPoliciesOperations = new ObjectReplicationPoliciesOperationsImpl(\n      this\n    );\n    this.localUsersOperations = new LocalUsersOperationsImpl(this);\n    this.encryptionScopes = new EncryptionScopesImpl(this);\n    this.blobServices = new BlobServicesImpl(this);\n    this.blobContainers = new BlobContainersImpl(this);\n    this.fileServices = new FileServicesImpl(this);\n    this.fileShares = new FileSharesImpl(this);\n    this.queueServices = new QueueServicesImpl(this);\n    this.queue = new QueueImpl(this);\n    this.tableServices = new TableServicesImpl(this);\n    this.tableOperations = new TableOperationsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  operations: Operations;\n  skus: Skus;\n  storageAccounts: StorageAccounts;\n  deletedAccounts: DeletedAccounts;\n  usages: Usages;\n  managementPolicies: ManagementPolicies;\n  blobInventoryPolicies: BlobInventoryPolicies;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  objectReplicationPoliciesOperations: ObjectReplicationPoliciesOperations;\n  localUsersOperations: LocalUsersOperations;\n  encryptionScopes: EncryptionScopes;\n  blobServices: BlobServices;\n  blobContainers: BlobContainers;\n  fileServices: FileServices;\n  fileShares: FileShares;\n  queueServices: QueueServices;\n  queue: Queue;\n  tableServices: TableServices;\n  tableOperations: TableOperations;\n}\n"],"names":["KnownSkuName","KnownKind","KnownReasonCode","KnownExtendedLocationTypes","KnownIdentityType","KnownAllowedCopyScope","KnownPublicNetworkAccess","KnownExpirationAction","KnownKeyType","KnownKeySource","KnownBypass","KnownState","KnownDirectoryServiceOptions","KnownAccountType","KnownDefaultSharePermission","KnownLargeFileSharesState","KnownRoutingChoice","KnownMinimumTlsVersion","KnownAccountImmutabilityPolicyState","KnownDnsEndpointType","KnownGeoReplicationStatus","KnownPostFailoverRedundancy","KnownPostPlannedFailoverRedundancy","KnownPrivateEndpointServiceConnectionStatus","KnownPrivateEndpointConnectionProvisioningState","KnownBlobRestoreProgressStatus","KnownSkuConversionStatus","KnownServices","KnownSignedResourceTypes","KnownPermissions","KnownSignedResource","KnownMigrationStatus","KnownMigrationName","KnownManagementPolicyName","KnownRuleType","KnownBlobInventoryPolicyName","KnownInventoryRuleType","KnownFormat","KnownSchedule","KnownObjectType","KnownCreatedByType","KnownEncryptionScopeSource","KnownEncryptionScopeState","KnownListEncryptionScopesInclude","KnownAllowedMethods","KnownName","KnownListContainersInclude","KnownLeaseStatus","KnownLeaseState","KnownLeaseDuration","KnownImmutabilityPolicyState","KnownImmutabilityPolicyUpdateType","KnownMigrationState","KnownLeaseContainerRequestAction","KnownEnabledProtocols","KnownRootSquashType","KnownShareAccessTier","KnownLeaseShareAction","StorageAccountCheckNameAvailabilityParametersMapper","StorageAccountCreateParametersMapper","StorageAccountUpdateParametersMapper","StorageAccountRegenerateKeyParametersMapper","AccountSasParametersMapper","ServiceSasParametersMapper","StorageAccountMigrationMapper","BlobRestoreParametersMapper","ManagementPolicyMapper","BlobInventoryPolicyMapper","PrivateEndpointConnectionMapper","ObjectReplicationPolicyMapper","LocalUserMapper","EncryptionScopeMapper","BlobServicePropertiesMapper","BlobContainerMapper","LegalHoldMapper","ImmutabilityPolicyMapper","LeaseContainerRequestMapper","FileServicePropertiesMapper","FileShareMapper","DeletedShareMapper","LeaseShareRequestMapper","QueueServicePropertiesMapper","StorageQueueMapper","TableServicePropertiesMapper","TableMapper","__await","__asyncValues","__asyncDelegator","listOperationSpec","serializer","coreClient","Mappers.OperationListResult","Parameters.apiVersion","Parameters.$host","Parameters.accept","Mappers.StorageSkuListResult","Parameters.subscriptionId","__rest","__awaiter","createOperationSpec","createHttpPoller","deleteOperationSpec","updateOperationSpec","listKeysOperationSpec","listNextOperationSpec","Mappers.CheckNameAvailabilityResult","Parameters.accountName","Parameters.contentType","Mappers.StorageAccount","Parameters.parameters","Parameters.resourceGroupName","Parameters.accountName1","Parameters.expand","Parameters.parameters1","Mappers.StorageAccountListResult","Mappers.StorageAccountListKeysResult","Parameters.expand1","Parameters.regenerateKey","Mappers.ListAccountSasResponse","Parameters.parameters2","Mappers.ListServiceSasResponse","Parameters.parameters3","Parameters.failoverType","Mappers.ErrorResponse","Parameters.requestType","Mappers.ErrorResponseAutoGenerated","Parameters.parameters4","Mappers.StorageAccountMigration","Parameters.migrationName","Mappers.BlobRestoreStatus","Parameters.parameters5","Parameters.accountName2","Parameters.nextLink","getOperationSpec","Mappers.DeletedAccountListResult","Mappers.DeletedAccount","Parameters.deletedAccountName","Parameters.location","Mappers.UsageListResult","createOrUpdateOperationSpec","Mappers.ManagementPolicy","Parameters.managementPolicyName","Parameters.properties","Mappers.BlobInventoryPolicy","Mappers.CloudError","Parameters.blobInventoryPolicyName","Parameters.properties1","Mappers.ListBlobInventoryPolicy","putOperationSpec","Mappers.PrivateEndpointConnectionListResult","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.properties2","Mappers.PrivateLinkResourceListResult","Mappers.ObjectReplicationPolicies","Mappers.ObjectReplicationPolicy","Parameters.objectReplicationPolicyId","Parameters.properties3","Mappers.LocalUsers","Mappers.LocalUser","Parameters.username","Parameters.properties4","Mappers.LocalUserKeys","Mappers.LocalUserRegeneratePasswordResult","Mappers.EncryptionScope","Parameters.encryptionScope","Parameters.encryptionScopeName","Mappers.EncryptionScopeListResult","Parameters.maxpagesize","Parameters.filter","Parameters.include","setServicePropertiesOperationSpec","getServicePropertiesOperationSpec","Mappers.BlobServiceItems","Mappers.BlobServiceProperties","Parameters.parameters6","Parameters.blobServicesName","leaseOperationSpec","Mappers.ListContainerItems","Parameters.maxpagesize1","Parameters.include1","Mappers.BlobContainer","Parameters.blobContainer","Parameters.containerName","Mappers.LegalHold","Parameters.legalHold","Mappers.ImmutabilityPolicy","Mappers.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders","Parameters.parameters7","Parameters.immutabilityPolicyName","Parameters.ifMatch","Mappers.BlobContainersGetImmutabilityPolicyHeaders","Mappers.BlobContainersDeleteImmutabilityPolicyHeaders","Parameters.ifMatch1","Mappers.BlobContainersLockImmutabilityPolicyHeaders","Mappers.BlobContainersExtendImmutabilityPolicyHeaders","Mappers.LeaseContainerResponse","Parameters.parameters8","Mappers.FileServiceItems","Mappers.FileServiceProperties","Parameters.parameters9","Parameters.fileServicesName","Mappers.FileShareItems","Parameters.expand2","Mappers.FileShare","Parameters.fileShare","Parameters.shareName","Parameters.xMsSnapshot","Parameters.include2","Parameters.deletedShare","Mappers.LeaseShareResponse","Mappers.FileSharesLeaseHeaders","Parameters.parameters10","Mappers.ListQueueServices","Mappers.QueueServiceProperties","Parameters.parameters11","Parameters.queueServiceName","Mappers.StorageQueue","Parameters.queue","Parameters.queueName","Mappers.ListQueueResource","Mappers.ListTableServices","Mappers.TableServiceProperties","Parameters.parameters12","Parameters.tableServiceName","Mappers.Table","Parameters.parameters13","Parameters.tableName","Mappers.ListTableResource","coreRestPipeline"],"mappings":"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"}