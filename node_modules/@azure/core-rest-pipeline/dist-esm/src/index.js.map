{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAsBlC,OAAO,EAKL,mBAAmB,GACpB,MAAM,YAAY,CAAC;AACpB,OAAO,EACL,yBAAyB,GAG1B,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,uBAAuB,EAAE,MAAM,qBAAqB,CAAC;AAC9D,OAAO,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,qBAAqB,EAA0B,MAAM,mBAAmB,CAAC;AAClF,OAAO,EAAE,SAAS,EAAoB,WAAW,EAAE,MAAM,aAAa,CAAC;AACvE,OAAO,EACL,wBAAwB,EACxB,4BAA4B,GAC7B,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EACL,sBAAsB,EAEtB,0BAA0B,GAC3B,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EACL,wBAAwB,EACxB,4BAA4B,GAC7B,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,SAAS,EAAE,aAAa,EAAoB,MAAM,sBAAsB,CAAC;AAClF,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,uBAAuB,EAAE,MAAM,wBAAwB,CAAC;AAC/F,OAAO,EACL,cAAc,EACd,kBAAkB,GAEnB,MAAM,2BAA2B,CAAC;AACnC,OAAO,EACL,sBAAsB,EAEtB,0BAA0B,GAC3B,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EACL,qBAAqB,EACrB,yBAAyB,GAE1B,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,WAAW,EAAsB,MAAM,wBAAwB,CAAC;AAEzE,OAAO,EAAE,aAAa,EAAE,iBAAiB,EAAwB,MAAM,0BAA0B,CAAC;AAClG,OAAO,EAAE,kBAAkB,EAA6B,MAAM,+BAA+B,CAAC;AAC9F,OAAO,EACL,eAAe,EACf,mBAAmB,GAEpB,MAAM,4BAA4B,CAAC;AACpC,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAChE,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAC;AAC/E,OAAO,EACL,+BAA+B,EAE/B,mCAAmC,GAIpC,MAAM,4CAA4C,CAAC;AACpD,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport {\n  Agent,\n  FormDataMap,\n  FormDataValue,\n  HttpClient,\n  HttpHeaders,\n  HttpMethods,\n  KeyObject,\n  PipelineRequest,\n  PipelineResponse,\n  PipelineRetryOptions,\n  ProxySettings,\n  PxfObject,\n  RawHttpHeaders,\n  RawHttpHeadersInput,\n  RequestBodyType,\n  SendRequest,\n  TlsSettings,\n  TransferProgressEvent,\n} from \"./interfaces\";\nexport {\n  AddPolicyOptions as AddPipelineOptions,\n  PipelinePhase,\n  PipelinePolicy,\n  Pipeline,\n  createEmptyPipeline,\n} from \"./pipeline\";\nexport {\n  createPipelineFromOptions,\n  InternalPipelineOptions,\n  PipelineOptions,\n} from \"./createPipelineFromOptions\";\nexport { createDefaultHttpClient } from \"./defaultHttpClient\";\nexport { createHttpHeaders } from \"./httpHeaders\";\nexport { createPipelineRequest, PipelineRequestOptions } from \"./pipelineRequest\";\nexport { RestError, RestErrorOptions, isRestError } from \"./restError\";\nexport {\n  decompressResponsePolicy,\n  decompressResponsePolicyName,\n} from \"./policies/decompressResponsePolicy\";\nexport {\n  exponentialRetryPolicy,\n  ExponentialRetryPolicyOptions,\n  exponentialRetryPolicyName,\n} from \"./policies/exponentialRetryPolicy\";\nexport {\n  setClientRequestIdPolicy,\n  setClientRequestIdPolicyName,\n} from \"./policies/setClientRequestIdPolicy\";\nexport { logPolicy, logPolicyName, LogPolicyOptions } from \"./policies/logPolicy\";\nexport { proxyPolicy, proxyPolicyName, getDefaultProxySettings } from \"./policies/proxyPolicy\";\nexport {\n  redirectPolicy,\n  redirectPolicyName,\n  RedirectPolicyOptions,\n} from \"./policies/redirectPolicy\";\nexport {\n  systemErrorRetryPolicy,\n  SystemErrorRetryPolicyOptions,\n  systemErrorRetryPolicyName,\n} from \"./policies/systemErrorRetryPolicy\";\nexport {\n  throttlingRetryPolicy,\n  throttlingRetryPolicyName,\n  ThrottlingRetryPolicyOptions,\n} from \"./policies/throttlingRetryPolicy\";\nexport { retryPolicy, RetryPolicyOptions } from \"./policies/retryPolicy\";\nexport { RetryStrategy, RetryInformation, RetryModifiers } from \"./retryStrategies/retryStrategy\";\nexport { tracingPolicy, tracingPolicyName, TracingPolicyOptions } from \"./policies/tracingPolicy\";\nexport { defaultRetryPolicy, DefaultRetryPolicyOptions } from \"./policies/defaultRetryPolicy\";\nexport {\n  userAgentPolicy,\n  userAgentPolicyName,\n  UserAgentPolicyOptions,\n} from \"./policies/userAgentPolicy\";\nexport { tlsPolicy, tlsPolicyName } from \"./policies/tlsPolicy\";\nexport { formDataPolicy, formDataPolicyName } from \"./policies/formDataPolicy\";\nexport {\n  bearerTokenAuthenticationPolicy,\n  BearerTokenAuthenticationPolicyOptions,\n  bearerTokenAuthenticationPolicyName,\n  ChallengeCallbacks,\n  AuthorizeRequestOptions,\n  AuthorizeRequestOnChallengeOptions,\n} from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { ndJsonPolicy, ndJsonPolicyName } from \"./policies/ndJsonPolicy\";\n"]}