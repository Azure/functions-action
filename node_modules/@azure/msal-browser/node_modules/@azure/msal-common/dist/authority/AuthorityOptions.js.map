{"version":3,"file":"AuthorityOptions.js","sources":["../../src/authority/AuthorityOptions.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n};\n\nexport enum AzureCloudInstance {\n    // AzureCloudInstance is not specified.\n    None,\n\n    // Microsoft Azure public cloud\n    AzurePublic = \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe = \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national cloud\n    AzureChina = \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national cloud (\"Black Forest\")\n    AzureGermany = \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment = \"https://login.microsoftonline.us\",\n}\n"],"names":[],"mappings":";;AAAA;;;AAGG;IAcS,mBAkBX;AAlBD,CAAA,UAAY,kBAAkB,EAAA;;AAE1B,IAAA,kBAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAI,CAAA;;AAGJ,IAAA,kBAAA,CAAA,aAAA,CAAA,GAAA,mCAAiD,CAAA;;AAGjD,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,+BAA0C,CAAA;;AAG1C,IAAA,kBAAA,CAAA,YAAA,CAAA,GAAA,gCAA6C,CAAA;;AAG7C,IAAA,kBAAA,CAAA,cAAA,CAAA,GAAA,kCAAiD,CAAA;;AAGjD,IAAA,kBAAA,CAAA,mBAAA,CAAA,GAAA,kCAAsD,CAAA;AAC1D,CAAC,EAlBW,kBAAkB,KAAlB,kBAAkB,GAkB7B,EAAA,CAAA,CAAA;;;;"}