{"version":3,"file":"PerformanceEvent.js","sources":["../../../src/telemetry/performance/PerformanceEvent.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEvents {\n\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode = \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken = \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent = \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync = \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup = \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint = \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt = \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken = \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken = \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken = \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent = \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority = \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker = \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken = \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders = \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake = \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker = \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker = \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest = \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken = \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken = \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken = \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody = \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache = \"acquireTokenFromCache\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe = \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest = \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest = \"initializeSilentRequest\",\n\n    InitializeClientApplication = \"initializeClientApplication\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper = \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest = \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash = \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame = \"silentHandlerLoadFrame\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient = \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration = \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest = \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest = \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl = \"getAuthCodeUrl\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer = \"handleCodeResponseFromServer\",\n    HandleCodeResponseFromHash = \"handleCodeResponseFromHash\",\n    UpdateTokenEndpointAuthority = \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken = \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest = \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody = \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString = \"authClientCreateQueryString\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf = \"popTokenGenerateCnf\",\n    PopTokenGenerateKid = \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse = \"handleServerTokenResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance = \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync = \"authorityResolveEndpointsAsync\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork = \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata = \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork = \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata = \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation = \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion = \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS = \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion = \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync = \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork = \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement = \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement= \"handleRedirectPromiseMeasurement\",\n\n    UpdateCloudDiscoveryMetadataMeasurement = \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken = \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake = \"nativeMessageHandlerHandshake\",\n}\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport enum PerformanceEventStatus {\n    NotStarted,\n    InProgress,\n    Completed\n}\n\n/**\n * Fields whose value will not change throughout a request\n */\nexport type StaticFields = {\n    /**\n     * The Silent Token Cache Lookup Policy\n     *\n     * @type {?(number | undefined)}\n     */\n    cacheLookupPolicy?: number | undefined,\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number,\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number,\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined,\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string,\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string,\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string,\n    extensionVersion?: string\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number\n    matsHttpEventCount?: number;\n    httpVerToken?: string;\n    httpVerAuthority?: string;\n\n    /**\n     * Native broker fields\n     */\n    allowNativeBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n};\n\n/**\n * Fields whose value may change throughout a request\n */\nexport type Counters = {\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n};\n\nexport type SubMeasurement = {\n    name: PerformanceEvents,\n    startTimeMs: number\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = StaticFields & Counters & {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string,\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus,\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string,\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string,\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null,\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null,\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {PerformanceEvents}\n     */\n    name: PerformanceEvents,\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null,\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number,\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null,\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string,\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string,\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string,\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string,\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean,\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined,\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number,\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n]);\n"],"names":[],"mappings":"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"}