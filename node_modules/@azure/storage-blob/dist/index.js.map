{"version":3,"file":"index.js","sources":["../src/generated/src/models/index.ts","../src/Aborter.ts","../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/IIPRange.ts","../src/utils/utils.common.ts","../src/SASQueryParameters.ts","../src/utils/constants.ts","../src/IAccountSASSignatureValues.ts","../src/utils/RetriableReadableStream.ts","../src/BlobDownloadResponse.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/serviceMappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/service.ts","../src/generated/src/models/containerMappers.ts","../src/generated/src/operations/container.ts","../src/generated/src/models/blobMappers.ts","../src/generated/src/operations/blob.ts","../src/generated/src/models/pageBlobMappers.ts","../src/generated/src/operations/pageBlob.ts","../src/generated/src/models/appendBlobMappers.ts","../src/generated/src/operations/appendBlob.ts","../src/generated/src/models/blockBlobMappers.ts","../src/generated/src/operations/blockBlob.ts","../src/IRange.ts","../src/policies/BrowserPolicy.ts","../src/BrowserPolicyFactory.ts","../src/generated/src/storageClientContext.ts","../src/policies/KeepAlivePolicy.ts","../src/KeepAlivePolicyFactory.ts","../src/policies/LoggingPolicy.ts","../src/LoggingPolicyFactory.ts","../src/Pipeline.ts","../src/policies/RetryPolicy.ts","../src/RetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/policies/UniqueRequestIDPolicy.ts","../src/UniqueRequestIDPolicyFactory.ts","../src/StorageURL.ts","../src/BlobURL.ts","../src/AppendBlobURL.ts","../src/BlobSASPermissions.ts","../src/ContainerSASPermissions.ts","../src/policies/CredentialPolicy.ts","../src/policies/SharedKeyCredentialPolicy.ts","../src/credentials/Credential.ts","../src/credentials/SharedKeyCredential.ts","../src/credentials/UserDelegationKeyCredential.ts","../src/IBlobSASSignatureValues.ts","../src/BlockBlobURL.ts","../src/ContainerURL.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/AnonymousCredential.ts","../src/policies/TokenCredentialPolicy.ts","../src/credentials/TokenCredential.ts","../src/utils/Batch.ts","../src/highlevel.browser.ts","../src/utils/BufferScheduler.ts","../src/utils/utils.node.ts","../src/highlevel.node.ts","../src/PageBlobURL.ts","../src/ServiceURL.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Key information\n */\nexport interface KeyInfo {\n  /**\n   * The date-time the key is active in ISO 8601 UTC time\n   */\n  start: string;\n  /**\n   * The date-time the key expires in ISO 8601 UTC time\n   */\n  expiry: string;\n}\n\n/**\n * A user delegation key\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   */\n  signedOid: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format\n   */\n  signedTid: string;\n  /**\n   * The date-time the key is active\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  signedStart: string;\n  /**\n   * The date-time the key expires\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  signedExpiry: string;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key\n   */\n  signedService: string;\n  /**\n   * The service version that created the key\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string\n   */\n  value: string;\n}\n\n/**\n * An interface representing StorageError.\n */\nexport interface StorageError {\n  code?: string;\n  message?: string;\n}\n\n/**\n * An Access policy\n */\nexport interface AccessPolicy {\n  /**\n   * the date-time the policy is active\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  start: string;\n  /**\n   * the date-time the policy expires\n   * **NOTE: This entity will be treated as a string instead of a Date because the API can\n   * potentially deal with a higher precision value than what is supported by JavaScript.**\n   */\n  expiry: string;\n  /**\n   * the permissions for the acl policy\n   */\n  permission: string;\n}\n\n/**\n * Properties of a blob\n */\nexport interface BlobProperties {\n  creationTime?: Date;\n  lastModified: Date;\n  etag: string;\n  /**\n   * Size in bytes\n   */\n  contentLength?: number;\n  contentType?: string;\n  contentEncoding?: string;\n  contentLanguage?: string;\n  contentMD5?: Uint8Array;\n  contentDisposition?: string;\n  cacheControl?: string;\n  blobSequenceNumber?: number;\n  /**\n   * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * Possible values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  copyId?: string;\n  /**\n   * Possible values include: 'pending', 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  copySource?: string;\n  copyProgress?: string;\n  copyCompletionTime?: Date;\n  copyStatusDescription?: string;\n  serverEncrypted?: boolean;\n  incrementalCopy?: boolean;\n  destinationSnapshot?: string;\n  deletedTime?: Date;\n  remainingRetentionDays?: number;\n  /**\n   * Possible values include: 'P4', 'P6', 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool',\n   * 'Archive'\n   */\n  accessTier?: AccessTier;\n  accessTierInferred?: boolean;\n  /**\n   * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'\n   */\n  archiveStatus?: ArchiveStatus;\n  accessTierChangeTime?: Date;\n}\n\n/**\n * An Azure Storage blob\n */\nexport interface BlobItem {\n  name: string;\n  deleted: boolean;\n  snapshot: string;\n  properties: BlobProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An interface representing BlobFlatListSegment.\n */\nexport interface BlobFlatListSegment {\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsFlatSegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxResults?: number;\n  delimiter?: string;\n  segment: BlobFlatListSegment;\n  nextMarker?: string;\n}\n\n/**\n * An interface representing BlobPrefix.\n */\nexport interface BlobPrefix {\n  name: string;\n}\n\n/**\n * An interface representing BlobHierarchyListSegment.\n */\nexport interface BlobHierarchyListSegment {\n  blobPrefixes?: BlobPrefix[];\n  blobItems: BlobItem[];\n}\n\n/**\n * An enumeration of blobs\n */\nexport interface ListBlobsHierarchySegmentResponse {\n  serviceEndpoint: string;\n  containerName: string;\n  prefix?: string;\n  marker?: string;\n  maxResults?: number;\n  delimiter?: string;\n  segment: BlobHierarchyListSegment;\n  nextMarker?: string;\n}\n\n/**\n * Represents a single block in a block blob.  It describes the block's ID and size.\n */\nexport interface Block {\n  /**\n   * The base64 encoded block ID.\n   */\n  name: string;\n  /**\n   * The block size in bytes.\n   */\n  size: number;\n}\n\n/**\n * An interface representing BlockList.\n */\nexport interface BlockList {\n  committedBlocks?: Block[];\n  uncommittedBlocks?: Block[];\n}\n\n/**\n * An interface representing BlockLookupList.\n */\nexport interface BlockLookupList {\n  committed?: string[];\n  uncommitted?: string[];\n  latest?: string[];\n}\n\n/**\n * Properties of a container\n */\nexport interface ContainerProperties {\n  lastModified: Date;\n  etag: string;\n  /**\n   * Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * Possible values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Possible values include: 'container', 'blob'\n   */\n  publicAccess?: PublicAccessType;\n  hasImmutabilityPolicy?: boolean;\n  hasLegalHold?: boolean;\n}\n\n/**\n * An Azure Storage container\n */\nexport interface ContainerItem {\n  name: string;\n  properties: ContainerProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An enumeration of containers\n */\nexport interface ListContainersSegmentResponse {\n  serviceEndpoint: string;\n  prefix?: string;\n  marker?: string;\n  maxResults?: number;\n  containerItems: ContainerItem[];\n  nextMarker?: string;\n}\n\n/**\n * CORS is an HTTP feature that enables a web application running under one domain to access\n * resources in another domain. Web browsers implement a security restriction known as same-origin\n * policy that prevents a web page from calling APIs in a different domain; CORS provides a secure\n * way to allow one domain (the origin domain) to call APIs in another domain\n */\nexport interface CorsRule {\n  /**\n   * The origin domains that are permitted to make a request against the storage service via CORS.\n   * The origin domain is the domain from which the request originates. Note that the origin must\n   * be an exact case-sensitive match with the origin that the user age sends to the service. You\n   * can also use the wildcard character '*' to allow all origin domains to make requests via CORS.\n   */\n  allowedOrigins: string;\n  /**\n   * The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma\n   * separated)\n   */\n  allowedMethods: string;\n  /**\n   * the request headers that the origin domain may specify on the CORS request.\n   */\n  allowedHeaders: string;\n  /**\n   * The response headers that may be sent in the response to the CORS request and exposed by the\n   * browser to the request issuer\n   */\n  exposedHeaders: string;\n  /**\n   * The maximum amount time that a browser should cache the preflight OPTIONS request.\n   */\n  maxAgeInSeconds: number;\n}\n\n/**\n * Geo-Replication information for the Secondary Storage Service\n */\nexport interface GeoReplication {\n  /**\n   * The status of the secondary location. Possible values include: 'live', 'bootstrap',\n   * 'unavailable'\n   */\n  status: GeoReplicationStatusType;\n  /**\n   * A GMT date/time value, to the second. All primary writes preceding this value are guaranteed\n   * to be available for read operations at the secondary. Primary writes after this point in time\n   * may or may not be available for reads.\n   */\n  lastSyncTime: Date;\n}\n\n/**\n * the retention policy which determines how long the associated data should persist\n */\nexport interface RetentionPolicy {\n  /**\n   * Indicates whether a retention policy is enabled for the storage service\n   */\n  enabled: boolean;\n  /**\n   * Indicates the number of days that metrics or logging or soft-deleted data should be retained.\n   * All data older than this value will be deleted\n   */\n  days?: number;\n}\n\n/**\n * Azure Analytics Logging settings.\n */\nexport interface Logging {\n  /**\n   * The version of Storage Analytics to configure.\n   */\n  version: string;\n  /**\n   * Indicates whether all delete requests should be logged.\n   */\n  deleteProperty: boolean;\n  /**\n   * Indicates whether all read requests should be logged.\n   */\n  read: boolean;\n  /**\n   * Indicates whether all write requests should be logged.\n   */\n  write: boolean;\n  retentionPolicy: RetentionPolicy;\n}\n\n/**\n * a summary of request statistics grouped by API in hour or minute aggregates for blobs\n */\nexport interface Metrics {\n  /**\n   * The version of Storage Analytics to configure.\n   */\n  version?: string;\n  /**\n   * Indicates whether metrics are enabled for the Blob service.\n   */\n  enabled: boolean;\n  /**\n   * Indicates whether metrics should generate summary statistics for called API operations.\n   */\n  includeAPIs?: boolean;\n  retentionPolicy?: RetentionPolicy;\n}\n\n/**\n * An interface representing PageRange.\n */\nexport interface PageRange {\n  start: number;\n  end: number;\n}\n\n/**\n * An interface representing ClearRange.\n */\nexport interface ClearRange {\n  start: number;\n  end: number;\n}\n\n/**\n * the list of pages\n */\nexport interface PageList {\n  pageRange?: PageRange[];\n  clearRange?: ClearRange[];\n}\n\n/**\n * signed identifier\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  accessPolicy: AccessPolicy;\n}\n\n/**\n * The properties that enable an account to host a static website\n */\nexport interface StaticWebsite {\n  /**\n   * Indicates whether this account is hosting a static website\n   */\n  enabled: boolean;\n  /**\n   * The default name of the index page under each directory\n   */\n  indexDocument?: string;\n  /**\n   * The absolute path of the custom 404 page\n   */\n  errorDocument404Path?: string;\n}\n\n/**\n * Storage Service Properties.\n */\nexport interface StorageServiceProperties {\n  logging?: Logging;\n  hourMetrics?: Metrics;\n  minuteMetrics?: Metrics;\n  /**\n   * The set of CORS rules.\n   */\n  cors?: CorsRule[];\n  /**\n   * The default version to use for requests to the Blob service if an incoming request's version\n   * is not specified. Possible values include version 2008-10-27 and all more recent versions\n   */\n  defaultServiceVersion?: string;\n  deleteRetentionPolicy?: RetentionPolicy;\n  staticWebsite?: StaticWebsite;\n}\n\n/**\n * Stats for the storage service.\n */\nexport interface StorageServiceStats {\n  geoReplication?: GeoReplication;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface LeaseAccessConditions {\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this\n   * ID.\n   */\n  leaseId?: string;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface ModifiedAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface BlobHTTPHeaders {\n  /**\n   * Optional. Sets the blob's cache control. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobCacheControl?: string;\n  /**\n   * Optional. Sets the blob's content type. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobContentType?: string;\n  /**\n   * Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes\n   * for the individual blocks were validated when each was uploaded.\n   */\n  blobContentMD5?: Uint8Array;\n  /**\n   * Optional. Sets the blob's content encoding. If specified, this property is stored with the\n   * blob and returned with a read request.\n   */\n  blobContentEncoding?: string;\n  /**\n   * Optional. Set the blob's content language. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  blobContentLanguage?: string;\n  /**\n   * Optional. Sets the blob's Content-Disposition header.\n   */\n  blobContentDisposition?: string;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface SourceModifiedAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  sourceIfModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  sourceIfUnmodifiedSince?: Date;\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  sourceIfMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  sourceIfNoneMatch?: string;\n}\n\n/**\n * Additional parameters for a set of operations, such as: PageBlob_uploadPages,\n * PageBlob_clearPages, PageBlob_uploadPagesFromURL.\n */\nexport interface SequenceNumberAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has a sequence number less than or\n   * equal to the specified.\n   */\n  ifSequenceNumberLessThanOrEqualTo?: number;\n  /**\n   * Specify this header value to operate only on a blob if it has a sequence number less than the\n   * specified.\n   */\n  ifSequenceNumberLessThan?: number;\n  /**\n   * Specify this header value to operate only on a blob if it has the specified sequence number.\n   */\n  ifSequenceNumberEqualTo?: number;\n}\n\n/**\n * Additional parameters for a set of operations, such as: AppendBlob_appendBlock,\n * AppendBlob_appendBlockFromUrl.\n */\nexport interface AppendPositionAccessConditions {\n  /**\n   * Optional conditional header. The max length in bytes permitted for the append blob. If the\n   * Append Block operation would cause the blob to exceed that limit or if the blob size is\n   * already greater than the value specified in this header, the request will fail with\n   * MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).\n   */\n  maxSize?: number;\n  /**\n   * Optional conditional header, used only for the Append Block operation. A number indicating the\n   * byte offset to compare. Append Block will succeed only if the append position is equal to this\n   * number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP\n   * status code 412 - Precondition Failed).\n   */\n  appendPosition?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceSetPropertiesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceGetPropertiesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceGetStatisticsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceListContainersSegmentOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify that the container's metadata be returned as part of the\n   * response body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceGetUserDelegationKeyOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerCreateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  access?: PublicAccessType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerGetPropertiesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerSetMetadataOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerGetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerSetAccessPolicyOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * the acls for the container\n   */\n  containerAcl?: SignedIdentifier[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  access?: PublicAccessType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerAcquireLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never\n   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be\n   * changed using renew or change.\n   */\n  duration?: number;\n  /**\n   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if\n   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list\n   * of valid GUID string formats.\n   */\n  proposedLeaseId?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerReleaseLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerRenewLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerBreakLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * For a break operation, proposed duration the lease should continue before it is broken, in\n   * seconds, between 0 and 60. This break period is only used if it is shorter than the time\n   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will\n   * not be available before the break period has expired, but the lease may be held for longer\n   * than the break period. If this header does not appear with a break operation, a fixed-duration\n   * lease breaks after the remaining lease period elapses, and an infinite lease breaks\n   * immediately.\n   */\n  breakPeriod?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerChangeLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobFlatSegmentOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ContainerListBlobHierarchySegmentOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Filters the results to return only containers whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * A string value that identifies the portion of the list of containers to be returned with the\n   * next listing operation. The operation returns the NextMarker value within the response body if\n   * the listing operation did not return all containers remaining to be listed with the current\n   * page. The NextMarker value can be used as the value for the marker parameter in a subsequent\n   * call to request the next page of list items. The marker value is opaque to the client.\n   */\n  marker?: string;\n  /**\n   * Specifies the maximum number of containers to return. If the request does not specify\n   * maxresults, or specifies a value greater than 5000, the server will return up to 5000 items.\n   * Note that if the listing operation crosses a partition boundary, then the service will return\n   * a continuation token for retrieving the remainder of the results. For this reason, it is\n   * possible that the service will return fewer results than specified by maxresults, or than the\n   * default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * Include this parameter to specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobDownloadOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * When set to true and specified together with the Range, the service returns the MD5 hash for\n   * the range, as long as the range is less than or equal to 4 MB in size.\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobGetPropertiesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobDeleteMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Required if the blob has associated snapshots. Specify one of the following two options:\n   * include: Delete the base blob and all of its snapshots. only: Delete only the blob's snapshots\n   * and not the blob itself. Possible values include: 'include', 'only'\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobUndeleteOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetHTTPHeadersOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetMetadataOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobAcquireLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never\n   * expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be\n   * changed using renew or change.\n   */\n  duration?: number;\n  /**\n   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if\n   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list\n   * of valid GUID string formats.\n   */\n  proposedLeaseId?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobReleaseLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobRenewLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobChangeLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobBreakLeaseOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * For a break operation, proposed duration the lease should continue before it is broken, in\n   * seconds, between 0 and 60. This break period is only used if it is shorter than the time\n   * remaining on the lease. If longer, the time remaining on the lease is used. A new lease will\n   * not be available before the break period has expired, but the lease may be held for longer\n   * than the break period. If this header does not appear with a break operation, a fixed-duration\n   * lease breaks after the remaining lease period elapses, and an infinite lease breaks\n   * immediately.\n   */\n  breakPeriod?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobCreateSnapshotOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobStartCopyFromURLOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobCopyFromURLOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobAbortCopyFromURLOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlobSetTierOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobCreateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Set for page blobs only. The sequence number is a user-controlled value that you can use to\n   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default\n   * value: 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobUploadPagesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobClearPagesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobUploadPagesFromURLOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sequenceNumberAccessConditions?: SequenceNumberAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobGetPageRangesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobGetPageRangesDiffOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that\n   * specifies that the response will contain only pages that were changed between target blob and\n   * previous snapshot. Changed pages include both updated and cleared pages. The target blob may\n   * be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note\n   * that incremental snapshots are currently supported only for blobs created on or after January\n   * 1, 2016.\n   */\n  prevsnapshot?: string;\n  /**\n   * Return only the bytes of the blob in the specified range.\n   */\n  range?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobResizeOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobUpdateSequenceNumberOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Set for page blobs only. The sequence number is a user-controlled value that you can use to\n   * track requests. The value of the sequence number must be between 0 and 2^63 - 1. Default\n   * value: 0.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PageBlobCopyIncrementalOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface AppendBlobCreateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface AppendBlobAppendBlockOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface AppendBlobAppendBlockFromUrlOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Bytes of source data in the specified range.\n   */\n  sourceRange?: string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  appendPositionAccessConditions?: AppendPositionAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobUploadOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobStageBlockOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobStageBlockFromURLOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Bytes of source data in the specified range.\n   */\n  sourceRange?: string;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobCommitBlockListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value\n   * pairs are specified, the operation will copy the metadata from the source blob or file to the\n   * destination blob. If one or more name-value pairs are specified, the destination blob is\n   * created with the specified metadata, and metadata is not copied from the source blob or file.\n   * Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules\n   * for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more\n   * information.\n   */\n  metadata?: { [propertyName: string]: string };\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BlockBlobGetBlockListOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The snapshot parameter is an opaque DateTime value that, when present, specifies the blob\n   * snapshot to retrieve. For more information on working with blob snapshots, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating\n   * a Snapshot of a Blob.</a>\n   */\n  snapshot?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Defines headers for SetProperties operation.\n */\nexport interface ServiceSetPropertiesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface ServiceGetPropertiesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetStatistics operation.\n */\nexport interface ServiceGetStatisticsHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListContainersSegment operation.\n */\nexport interface ServiceListContainersSegmentHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetUserDelegationKey operation.\n */\nexport interface ServiceGetUserDelegationKeyHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface ServiceGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface ContainerCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface ContainerGetPropertiesHeaders {\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Indicated whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  blobPublicAccess?: PublicAccessType;\n  /**\n   * Indicates whether the container has an immutability policy set on it.\n   */\n  hasImmutabilityPolicy?: boolean;\n  /**\n   * Indicates whether the container has a legal hold.\n   */\n  hasLegalHold?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface ContainerDeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetMetadata operation.\n */\nexport interface ContainerSetMetadataHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccessPolicy operation.\n */\nexport interface ContainerGetAccessPolicyHeaders {\n  /**\n   * Indicated whether data in the container may be accessed publicly and the level of access.\n   * Possible values include: 'container', 'blob'\n   */\n  blobPublicAccess?: PublicAccessType;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetAccessPolicy operation.\n */\nexport interface ContainerSetAccessPolicyHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AcquireLease operation.\n */\nexport interface ContainerAcquireLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ReleaseLease operation.\n */\nexport interface ContainerReleaseLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for RenewLease operation.\n */\nexport interface ContainerRenewLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for BreakLease operation.\n */\nexport interface ContainerBreakLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ChangeLease operation.\n */\nexport interface ContainerChangeLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListBlobFlatSegment operation.\n */\nexport interface ContainerListBlobFlatSegmentHeaders {\n  /**\n   * The media type of the body of the response. For List Blobs this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListBlobHierarchySegment operation.\n */\nexport interface ContainerListBlobHierarchySegmentHeaders {\n  /**\n   * The media type of the body of the response. For List Blobs this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface ContainerGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Download operation.\n */\nexport interface BlobDownloadHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The number of bytes present in the response body.\n   */\n  contentLength?: number;\n  /**\n   * The media type of the body of the response. For Download Blob this is\n   * 'application/octet-stream'\n   */\n  contentType?: string;\n  /**\n   * Indicates the range of bytes returned in the event that the client requested a subset of the\n   * blob by setting the 'Range' request header.\n   */\n  contentRange?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header returns the value that was specified for the Content-Encoding request header\n   */\n  contentEncoding?: string;\n  /**\n   * This header is returned if it was previously specified for the blob.\n   */\n  cacheControl?: string;\n  /**\n   * This header returns the value that was specified for the 'x-ms-blob-content-disposition'\n   * header. The Content-Disposition response header field conveys additional information about how\n   * to process the response payload, and also can be used to attach additional metadata. For\n   * example, if set to attachment, it indicates that the user-agent should not display the\n   * response, but instead show a Save As dialog with a filename other than the blob name\n   * specified.\n   */\n  contentDisposition?: string;\n  /**\n   * This header returns the value that was specified for the Content-Language request header.\n   */\n  contentLanguage?: string;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination\n   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This\n   * header does not appear if a copy is pending, if this blob has never been the destination in a\n   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation\n   * using Set Blob Properties, Put Blob, or Put Block List.\n   */\n  copyCompletionTime?: Date;\n  /**\n   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal\n   * or non-fatal copy operation failure. This header does not appear if this blob has never been\n   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded\n   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyStatusDescription?: string;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * Contains the number of bytes copied and the total bytes in the source in the last attempted\n   * Copy Blob operation where this blob was the destination blob. Can show between 0 and\n   * Content-Length bytes copied. This header does not appear if this blob has never been the\n   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy\n   * Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyProgress?: string;\n  /**\n   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted\n   * Copy Blob operation where this blob was the destination blob. This header does not appear if\n   * this blob has never been the destination in a Copy Blob operation, or if this blob has been\n   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put\n   * Block List.\n   */\n  copySource?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * Indicates that the service supports requests for partial blob content.\n   */\n  acceptRanges?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  /**\n   * The value of this header is set to true if the blob data and application metadata are\n   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when\n   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).\n   */\n  isServerEncrypted?: boolean;\n  /**\n   * If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this\n   * response header is returned with the value of the whole blob's MD5 value. This value may or\n   * may not be equal to the value returned in Content-MD5 header, with the latter calculated from\n   * the requested range\n   */\n  blobContentMD5?: Uint8Array;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface BlobGetPropertiesHeaders {\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Returns the date and time the blob was created.\n   */\n  creationTime?: Date;\n  metadata?: { [propertyName: string]: string };\n  /**\n   * The blob's type. Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n   */\n  blobType?: BlobType;\n  /**\n   * Conclusion time of the last attempted Copy Blob operation where this blob was the destination\n   * blob. This value can specify the time of a completed, aborted, or failed copy attempt. This\n   * header does not appear if a copy is pending, if this blob has never been the destination in a\n   * Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation\n   * using Set Blob Properties, Put Blob, or Put Block List.\n   */\n  copyCompletionTime?: Date;\n  /**\n   * Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal\n   * or non-fatal copy operation failure. This header does not appear if this blob has never been\n   * the destination in a Copy Blob operation, or if this blob has been modified after a concluded\n   * Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyStatusDescription?: string;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * Contains the number of bytes copied and the total bytes in the source in the last attempted\n   * Copy Blob operation where this blob was the destination blob. Can show between 0 and\n   * Content-Length bytes copied. This header does not appear if this blob has never been the\n   * destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy\n   * Blob operation using Set Blob Properties, Put Blob, or Put Block List\n   */\n  copyProgress?: string;\n  /**\n   * URL up to 2 KB in length that specifies the source blob or file used in the last attempted\n   * Copy Blob operation where this blob was the destination blob. This header does not appear if\n   * this blob has never been the destination in a Copy Blob operation, or if this blob has been\n   * modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put\n   * Block List.\n   */\n  copySource?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  /**\n   * Included if the blob is incremental copy blob.\n   */\n  isIncrementalCopy?: boolean;\n  /**\n   * Included if the blob is incremental copy blob or incremental copy snapshot, if\n   * x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot\n   * for this blob.\n   */\n  destinationSnapshot?: string;\n  /**\n   * When a blob is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  leaseDuration?: LeaseDurationType;\n  /**\n   * Lease state of the blob. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  leaseState?: LeaseStateType;\n  /**\n   * The current lease status of the blob. Possible values include: 'locked', 'unlocked'\n   */\n  leaseStatus?: LeaseStatusType;\n  /**\n   * The number of bytes present in the response body.\n   */\n  contentLength?: number;\n  /**\n   * The content type specified for the blob. The default content type is\n   * 'application/octet-stream'\n   */\n  contentType?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header returns the value that was specified for the Content-Encoding request header\n   */\n  contentEncoding?: string;\n  /**\n   * This header returns the value that was specified for the 'x-ms-blob-content-disposition'\n   * header. The Content-Disposition response header field conveys additional information about how\n   * to process the response payload, and also can be used to attach additional metadata. For\n   * example, if set to attachment, it indicates that the user-agent should not display the\n   * response, but instead show a Save As dialog with a filename other than the blob name\n   * specified.\n   */\n  contentDisposition?: string;\n  /**\n   * This header returns the value that was specified for the Content-Language request header.\n   */\n  contentLanguage?: string;\n  /**\n   * This header is returned if it was previously specified for the blob.\n   */\n  cacheControl?: string;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Indicates that the service supports requests for partial blob content.\n   */\n  acceptRanges?: string;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  /**\n   * The value of this header is set to true if the blob data and application metadata are\n   * completely encrypted using the specified algorithm. Otherwise, the value is set to false (when\n   * the blob is unencrypted, or if only parts of the blob/application metadata are encrypted).\n   */\n  isServerEncrypted?: boolean;\n  /**\n   * The tier of page blob on a premium storage account or tier of block blob on blob storage LRS\n   * accounts. For a list of allowed premium page blob tiers, see\n   * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For\n   * blob storage LRS accounts, valid values are Hot/Cool/Archive.\n   */\n  accessTier?: string;\n  /**\n   * For page blobs on a premium storage account only. If the access tier is not explicitly set on\n   * the blob, the tier is inferred based on its content length and this header will be returned\n   * with true value.\n   */\n  accessTierInferred?: boolean;\n  /**\n   * For blob storage LRS accounts, valid values are\n   * rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not\n   * complete then this header is returned indicating that rehydrate is pending and also tells the\n   * destination tier.\n   */\n  archiveStatus?: string;\n  /**\n   * The time the tier was changed on the object. This is only returned if the tier on the block\n   * blob was ever set.\n   */\n  accessTierChangeTime?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface BlobDeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface PageBlobCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface AppendBlobCreateHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Upload operation.\n */\nexport interface BlockBlobUploadHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Undelete operation.\n */\nexport interface BlobUndeleteHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated.\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetHTTPHeaders operation.\n */\nexport interface BlobSetHTTPHeadersHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetMetadata operation.\n */\nexport interface BlobSetMetadataHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AcquireLease operation.\n */\nexport interface BlobAcquireLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ReleaseLease operation.\n */\nexport interface BlobReleaseLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for RenewLease operation.\n */\nexport interface BlobRenewLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ChangeLease operation.\n */\nexport interface BlobChangeLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Uniquely identifies a blobs's lease\n   */\n  leaseId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for BreakLease operation.\n */\nexport interface BlobBreakLeaseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the blob was last modified. Any operation that modifies the blob,\n   * including an update of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CreateSnapshot operation.\n */\nexport interface BlobCreateSnapshotHeaders {\n  /**\n   * Uniquely identifies the snapshot and indicates the snapshot version. It may be used in\n   * subsequent requests to access the snapshot\n   */\n  snapshot?: string;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StartCopyFromURL operation.\n */\nexport interface BlobStartCopyFromURLHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CopyFromURL operation.\n */\nexport interface BlobCopyFromURLHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * String identifier for this copy operation.\n   */\n  copyId?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'success'\n   */\n  copyStatus?: SyncCopyStatusType;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AbortCopyFromURL operation.\n */\nexport interface BlobAbortCopyFromURLHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetTier operation.\n */\nexport interface BlobSetTierHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and newer.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetAccountInfo operation.\n */\nexport interface BlobGetAccountInfoHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * Identifies the sku name of the account. Possible values include: 'Standard_LRS',\n   * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'\n   */\n  skuName?: SkuName;\n  /**\n   * Identifies the account kind. Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n   */\n  accountKind?: AccountKind;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StageBlock operation.\n */\nexport interface BlockBlobStageBlockHeaders {\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for StageBlockFromURL operation.\n */\nexport interface BlockBlobStageBlockFromURLHeaders {\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CommitBlockList operation.\n */\nexport interface BlockBlobCommitBlockListHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetBlockList operation.\n */\nexport interface BlockBlobGetBlockListHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The media type of the body of the response. For Get Block List this is 'application/xml'\n   */\n  contentType?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for UploadPages operation.\n */\nexport interface PageBlobUploadPagesHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * The current sequence number for the page blob.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ClearPages operation.\n */\nexport interface PageBlobClearPagesHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * The current sequence number for the page blob.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for UploadPagesFromURL operation.\n */\nexport interface PageBlobUploadPagesFromURLHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * The current sequence number for the page blob.\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetPageRanges operation.\n */\nexport interface PageBlobGetPageRangesHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetPageRangesDiff operation.\n */\nexport interface PageBlobGetPageRangesDiffHeaders {\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * The size of the blob in bytes.\n   */\n  blobContentLength?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Resize operation.\n */\nexport interface PageBlobResizeHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for UpdateSequenceNumber operation.\n */\nexport interface PageBlobUpdateSequenceNumberHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * The current sequence number for a page blob. This header is not returned for block blobs or\n   * append blobs\n   */\n  blobSequenceNumber?: number;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for CopyIncremental operation.\n */\nexport interface PageBlobCopyIncrementalHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * String identifier for this copy operation. Use with Get Blob Properties to check the status of\n   * this copy operation, or pass to Abort Copy Blob to abort a pending copy.\n   */\n  copyId?: string;\n  /**\n   * State of the copy operation identified by x-ms-copy-id. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   */\n  copyStatus?: CopyStatusType;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AppendBlock operation.\n */\nexport interface AppendBlobAppendBlockHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * This response header is returned only for append operations. It returns the offset at which\n   * the block was committed, in bytes.\n   */\n  blobAppendOffset?: string;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  /**\n   * The value of this header is set to true if the contents of the request are successfully\n   * encrypted using the specified algorithm, and false otherwise.\n   */\n  isServerEncrypted?: boolean;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for AppendBlockFromUrl operation.\n */\nexport interface AppendBlobAppendBlockFromUrlHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  eTag?: string;\n  /**\n   * Returns the date and time the container was last modified. Any operation that modifies the\n   * blob, including an update of the blob's metadata or properties, changes the last-modified time\n   * of the blob.\n   */\n  lastModified?: Date;\n  /**\n   * If the blob has an MD5 hash and this operation is to read the full blob, this response header\n   * is returned so that the client can check for message content integrity.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  /**\n   * This response header is returned only for append operations. It returns the offset at which\n   * the block was committed, in bytes.\n   */\n  blobAppendOffset?: string;\n  /**\n   * The number of committed blocks present in the blob. This header is returned only for append\n   * blobs.\n   */\n  blobCommittedBlockCount?: number;\n  errorCode?: string;\n}\n\n/**\n * Defines values for PublicAccessType.\n * Possible values include: 'container', 'blob'\n * @readonly\n * @enum {string}\n */\nexport type PublicAccessType = 'container' | 'blob';\n\n/**\n * Defines values for CopyStatusType.\n * Possible values include: 'pending', 'success', 'aborted', 'failed'\n * @readonly\n * @enum {string}\n */\nexport type CopyStatusType = 'pending' | 'success' | 'aborted' | 'failed';\n\n/**\n * Defines values for LeaseDurationType.\n * Possible values include: 'infinite', 'fixed'\n * @readonly\n * @enum {string}\n */\nexport type LeaseDurationType = 'infinite' | 'fixed';\n\n/**\n * Defines values for LeaseStateType.\n * Possible values include: 'available', 'leased', 'expired', 'breaking', 'broken'\n * @readonly\n * @enum {string}\n */\nexport type LeaseStateType = 'available' | 'leased' | 'expired' | 'breaking' | 'broken';\n\n/**\n * Defines values for LeaseStatusType.\n * Possible values include: 'locked', 'unlocked'\n * @readonly\n * @enum {string}\n */\nexport type LeaseStatusType = 'locked' | 'unlocked';\n\n/**\n * Defines values for AccessTier.\n * Possible values include: 'P4', 'P6', 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n * @readonly\n * @enum {string}\n */\nexport type AccessTier = 'P4' | 'P6' | 'P10' | 'P20' | 'P30' | 'P40' | 'P50' | 'Hot' | 'Cool' | 'Archive';\n\n/**\n * Defines values for ArchiveStatus.\n * Possible values include: 'rehydrate-pending-to-hot', 'rehydrate-pending-to-cool'\n * @readonly\n * @enum {string}\n */\nexport type ArchiveStatus = 'rehydrate-pending-to-hot' | 'rehydrate-pending-to-cool';\n\n/**\n * Defines values for BlobType.\n * Possible values include: 'BlockBlob', 'PageBlob', 'AppendBlob'\n * @readonly\n * @enum {string}\n */\nexport type BlobType = 'BlockBlob' | 'PageBlob' | 'AppendBlob';\n\n/**\n * Defines values for StorageErrorCode.\n * Possible values include: 'AccountAlreadyExists', 'AccountBeingCreated', 'AccountIsDisabled',\n * 'AuthenticationFailed', 'AuthorizationFailure', 'ConditionHeadersNotSupported',\n * 'ConditionNotMet', 'EmptyMetadataKey', 'InsufficientAccountPermissions', 'InternalError',\n * 'InvalidAuthenticationInfo', 'InvalidHeaderValue', 'InvalidHttpVerb', 'InvalidInput',\n * 'InvalidMd5', 'InvalidMetadata', 'InvalidQueryParameterValue', 'InvalidRange',\n * 'InvalidResourceName', 'InvalidUri', 'InvalidXmlDocument', 'InvalidXmlNodeValue', 'Md5Mismatch',\n * 'MetadataTooLarge', 'MissingContentLengthHeader', 'MissingRequiredQueryParameter',\n * 'MissingRequiredHeader', 'MissingRequiredXmlNode', 'MultipleConditionHeadersNotSupported',\n * 'OperationTimedOut', 'OutOfRangeInput', 'OutOfRangeQueryParameterValue', 'RequestBodyTooLarge',\n * 'ResourceTypeMismatch', 'RequestUrlFailedToParse', 'ResourceAlreadyExists', 'ResourceNotFound',\n * 'ServerBusy', 'UnsupportedHeader', 'UnsupportedXmlNode', 'UnsupportedQueryParameter',\n * 'UnsupportedHttpVerb', 'AppendPositionConditionNotMet', 'BlobAlreadyExists', 'BlobNotFound',\n * 'BlobOverwritten', 'BlobTierInadequateForContentLength', 'BlockCountExceedsLimit',\n * 'BlockListTooLong', 'CannotChangeToLowerTier', 'CannotVerifyCopySource',\n * 'ContainerAlreadyExists', 'ContainerBeingDeleted', 'ContainerDisabled', 'ContainerNotFound',\n * 'ContentLengthLargerThanTierLimit', 'CopyAcrossAccountsNotSupported', 'CopyIdMismatch',\n * 'FeatureVersionMismatch', 'IncrementalCopyBlobMismatch',\n * 'IncrementalCopyOfEralierVersionSnapshotNotAllowed', 'IncrementalCopySourceMustBeSnapshot',\n * 'InfiniteLeaseDurationRequired', 'InvalidBlobOrBlock', 'InvalidBlobTier', 'InvalidBlobType',\n * 'InvalidBlockId', 'InvalidBlockList', 'InvalidOperation', 'InvalidPageRange',\n * 'InvalidSourceBlobType', 'InvalidSourceBlobUrl', 'InvalidVersionForPageBlobOperation',\n * 'LeaseAlreadyPresent', 'LeaseAlreadyBroken', 'LeaseIdMismatchWithBlobOperation',\n * 'LeaseIdMismatchWithContainerOperation', 'LeaseIdMismatchWithLeaseOperation', 'LeaseIdMissing',\n * 'LeaseIsBreakingAndCannotBeAcquired', 'LeaseIsBreakingAndCannotBeChanged',\n * 'LeaseIsBrokenAndCannotBeRenewed', 'LeaseLost', 'LeaseNotPresentWithBlobOperation',\n * 'LeaseNotPresentWithContainerOperation', 'LeaseNotPresentWithLeaseOperation',\n * 'MaxBlobSizeConditionNotMet', 'NoPendingCopyOperation',\n * 'OperationNotAllowedOnIncrementalCopyBlob', 'PendingCopyOperation',\n * 'PreviousSnapshotCannotBeNewer', 'PreviousSnapshotNotFound',\n * 'PreviousSnapshotOperationNotSupported', 'SequenceNumberConditionNotMet',\n * 'SequenceNumberIncrementTooLarge', 'SnapshotCountExceeded', 'SnaphotOperationRateExceeded',\n * 'SnapshotsPresent', 'SourceConditionNotMet', 'SystemInUse', 'TargetConditionNotMet',\n * 'UnauthorizedBlobOverwrite', 'BlobBeingRehydrated', 'BlobArchived', 'BlobNotArchived'\n * @readonly\n * @enum {string}\n */\nexport type StorageErrorCode = 'AccountAlreadyExists' | 'AccountBeingCreated' | 'AccountIsDisabled' | 'AuthenticationFailed' | 'AuthorizationFailure' | 'ConditionHeadersNotSupported' | 'ConditionNotMet' | 'EmptyMetadataKey' | 'InsufficientAccountPermissions' | 'InternalError' | 'InvalidAuthenticationInfo' | 'InvalidHeaderValue' | 'InvalidHttpVerb' | 'InvalidInput' | 'InvalidMd5' | 'InvalidMetadata' | 'InvalidQueryParameterValue' | 'InvalidRange' | 'InvalidResourceName' | 'InvalidUri' | 'InvalidXmlDocument' | 'InvalidXmlNodeValue' | 'Md5Mismatch' | 'MetadataTooLarge' | 'MissingContentLengthHeader' | 'MissingRequiredQueryParameter' | 'MissingRequiredHeader' | 'MissingRequiredXmlNode' | 'MultipleConditionHeadersNotSupported' | 'OperationTimedOut' | 'OutOfRangeInput' | 'OutOfRangeQueryParameterValue' | 'RequestBodyTooLarge' | 'ResourceTypeMismatch' | 'RequestUrlFailedToParse' | 'ResourceAlreadyExists' | 'ResourceNotFound' | 'ServerBusy' | 'UnsupportedHeader' | 'UnsupportedXmlNode' | 'UnsupportedQueryParameter' | 'UnsupportedHttpVerb' | 'AppendPositionConditionNotMet' | 'BlobAlreadyExists' | 'BlobNotFound' | 'BlobOverwritten' | 'BlobTierInadequateForContentLength' | 'BlockCountExceedsLimit' | 'BlockListTooLong' | 'CannotChangeToLowerTier' | 'CannotVerifyCopySource' | 'ContainerAlreadyExists' | 'ContainerBeingDeleted' | 'ContainerDisabled' | 'ContainerNotFound' | 'ContentLengthLargerThanTierLimit' | 'CopyAcrossAccountsNotSupported' | 'CopyIdMismatch' | 'FeatureVersionMismatch' | 'IncrementalCopyBlobMismatch' | 'IncrementalCopyOfEralierVersionSnapshotNotAllowed' | 'IncrementalCopySourceMustBeSnapshot' | 'InfiniteLeaseDurationRequired' | 'InvalidBlobOrBlock' | 'InvalidBlobTier' | 'InvalidBlobType' | 'InvalidBlockId' | 'InvalidBlockList' | 'InvalidOperation' | 'InvalidPageRange' | 'InvalidSourceBlobType' | 'InvalidSourceBlobUrl' | 'InvalidVersionForPageBlobOperation' | 'LeaseAlreadyPresent' | 'LeaseAlreadyBroken' | 'LeaseIdMismatchWithBlobOperation' | 'LeaseIdMismatchWithContainerOperation' | 'LeaseIdMismatchWithLeaseOperation' | 'LeaseIdMissing' | 'LeaseIsBreakingAndCannotBeAcquired' | 'LeaseIsBreakingAndCannotBeChanged' | 'LeaseIsBrokenAndCannotBeRenewed' | 'LeaseLost' | 'LeaseNotPresentWithBlobOperation' | 'LeaseNotPresentWithContainerOperation' | 'LeaseNotPresentWithLeaseOperation' | 'MaxBlobSizeConditionNotMet' | 'NoPendingCopyOperation' | 'OperationNotAllowedOnIncrementalCopyBlob' | 'PendingCopyOperation' | 'PreviousSnapshotCannotBeNewer' | 'PreviousSnapshotNotFound' | 'PreviousSnapshotOperationNotSupported' | 'SequenceNumberConditionNotMet' | 'SequenceNumberIncrementTooLarge' | 'SnapshotCountExceeded' | 'SnaphotOperationRateExceeded' | 'SnapshotsPresent' | 'SourceConditionNotMet' | 'SystemInUse' | 'TargetConditionNotMet' | 'UnauthorizedBlobOverwrite' | 'BlobBeingRehydrated' | 'BlobArchived' | 'BlobNotArchived';\n\n/**\n * Defines values for GeoReplicationStatusType.\n * Possible values include: 'live', 'bootstrap', 'unavailable'\n * @readonly\n * @enum {string}\n */\nexport type GeoReplicationStatusType = 'live' | 'bootstrap' | 'unavailable';\n\n/**\n * Defines values for BlockListType.\n * Possible values include: 'committed', 'uncommitted', 'all'\n * @readonly\n * @enum {string}\n */\nexport type BlockListType = 'committed' | 'uncommitted' | 'all';\n\n/**\n * Defines values for DeleteSnapshotsOptionType.\n * Possible values include: 'include', 'only'\n * @readonly\n * @enum {string}\n */\nexport type DeleteSnapshotsOptionType = 'include' | 'only';\n\n/**\n * Defines values for ListBlobsIncludeItem.\n * Possible values include: 'copy', 'deleted', 'metadata', 'snapshots', 'uncommittedblobs'\n * @readonly\n * @enum {string}\n */\nexport type ListBlobsIncludeItem = 'copy' | 'deleted' | 'metadata' | 'snapshots' | 'uncommittedblobs';\n\n/**\n * Defines values for ListContainersIncludeType.\n * Possible values include: 'metadata'\n * @readonly\n * @enum {string}\n */\nexport type ListContainersIncludeType = 'metadata';\n\n/**\n * Defines values for SequenceNumberActionType.\n * Possible values include: 'max', 'update', 'increment'\n * @readonly\n * @enum {string}\n */\nexport type SequenceNumberActionType = 'max' | 'update' | 'increment';\n\n/**\n * Defines values for SkuName.\n * Possible values include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS',\n * 'Premium_LRS'\n * @readonly\n * @enum {string}\n */\nexport type SkuName = 'Standard_LRS' | 'Standard_GRS' | 'Standard_RAGRS' | 'Standard_ZRS' | 'Premium_LRS';\n\n/**\n * Defines values for AccountKind.\n * Possible values include: 'Storage', 'BlobStorage', 'StorageV2'\n * @readonly\n * @enum {string}\n */\nexport type AccountKind = 'Storage' | 'BlobStorage' | 'StorageV2';\n\n/**\n * Defines values for SyncCopyStatusType.\n * Possible values include: 'success'\n * @readonly\n * @enum {string}\n */\nexport type SyncCopyStatusType = 'success';\n\n/**\n * Contains response data for the setProperties operation.\n */\nexport type ServiceSetPropertiesResponse = ServiceSetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceSetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type ServiceGetPropertiesResponse = StorageServiceProperties & ServiceGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetPropertiesHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: StorageServiceProperties;\n    };\n};\n\n/**\n * Contains response data for the getStatistics operation.\n */\nexport type ServiceGetStatisticsResponse = StorageServiceStats & ServiceGetStatisticsHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetStatisticsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: StorageServiceStats;\n    };\n};\n\n/**\n * Contains response data for the listContainersSegment operation.\n */\nexport type ServiceListContainersSegmentResponse = ListContainersSegmentResponse & ServiceListContainersSegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceListContainersSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListContainersSegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the getUserDelegationKey operation.\n */\nexport type ServiceGetUserDelegationKeyResponse = UserDelegationKey & ServiceGetUserDelegationKeyHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetUserDelegationKeyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: UserDelegationKey;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type ServiceGetAccountInfoResponse = ServiceGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type ContainerCreateResponse = ContainerCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type ContainerGetPropertiesResponse = ContainerGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type ContainerDeleteResponse = ContainerDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the setMetadata operation.\n */\nexport type ContainerSetMetadataResponse = ContainerSetMetadataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerSetMetadataHeaders;\n    };\n};\n\n/**\n * Contains response data for the getAccessPolicy operation.\n */\nexport type ContainerGetAccessPolicyResponse = Array<SignedIdentifier> & ContainerGetAccessPolicyHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccessPolicyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifier[];\n    };\n};\n\n/**\n * Contains response data for the setAccessPolicy operation.\n */\nexport type ContainerSetAccessPolicyResponse = ContainerSetAccessPolicyHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerSetAccessPolicyHeaders;\n    };\n};\n\n/**\n * Contains response data for the acquireLease operation.\n */\nexport type ContainerAcquireLeaseResponse = ContainerAcquireLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerAcquireLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the releaseLease operation.\n */\nexport type ContainerReleaseLeaseResponse = ContainerReleaseLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerReleaseLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the renewLease operation.\n */\nexport type ContainerRenewLeaseResponse = ContainerRenewLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerRenewLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the breakLease operation.\n */\nexport type ContainerBreakLeaseResponse = ContainerBreakLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerBreakLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the changeLease operation.\n */\nexport type ContainerChangeLeaseResponse = ContainerChangeLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerChangeLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the listBlobFlatSegment operation.\n */\nexport type ContainerListBlobFlatSegmentResponse = ListBlobsFlatSegmentResponse & ContainerListBlobFlatSegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobFlatSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsFlatSegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the listBlobHierarchySegment operation.\n */\nexport type ContainerListBlobHierarchySegmentResponse = ListBlobsHierarchySegmentResponse & ContainerListBlobHierarchySegmentHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerListBlobHierarchySegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListBlobsHierarchySegmentResponse;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type ContainerGetAccountInfoResponse = ContainerGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the download operation.\n */\nexport type BlobDownloadResponse = BlobDownloadHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   */\n  blobBody?: Promise<Blob>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobDownloadHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type BlobGetPropertiesResponse = BlobGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type BlobDeleteResponse = BlobDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the undelete operation.\n */\nexport type BlobUndeleteResponse = BlobUndeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobUndeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the setHTTPHeaders operation.\n */\nexport type BlobSetHTTPHeadersResponse = BlobSetHTTPHeadersHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetHTTPHeadersHeaders;\n    };\n};\n\n/**\n * Contains response data for the setMetadata operation.\n */\nexport type BlobSetMetadataResponse = BlobSetMetadataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetMetadataHeaders;\n    };\n};\n\n/**\n * Contains response data for the acquireLease operation.\n */\nexport type BlobAcquireLeaseResponse = BlobAcquireLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobAcquireLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the releaseLease operation.\n */\nexport type BlobReleaseLeaseResponse = BlobReleaseLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobReleaseLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the renewLease operation.\n */\nexport type BlobRenewLeaseResponse = BlobRenewLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobRenewLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the changeLease operation.\n */\nexport type BlobChangeLeaseResponse = BlobChangeLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobChangeLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the breakLease operation.\n */\nexport type BlobBreakLeaseResponse = BlobBreakLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobBreakLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the createSnapshot operation.\n */\nexport type BlobCreateSnapshotResponse = BlobCreateSnapshotHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobCreateSnapshotHeaders;\n    };\n};\n\n/**\n * Contains response data for the startCopyFromURL operation.\n */\nexport type BlobStartCopyFromURLResponse = BlobStartCopyFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobStartCopyFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the copyFromURL operation.\n */\nexport type BlobCopyFromURLResponse = BlobCopyFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobCopyFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the abortCopyFromURL operation.\n */\nexport type BlobAbortCopyFromURLResponse = BlobAbortCopyFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobAbortCopyFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the setTier operation.\n */\nexport type BlobSetTierResponse = BlobSetTierHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobSetTierHeaders;\n    };\n};\n\n/**\n * Contains response data for the getAccountInfo operation.\n */\nexport type BlobGetAccountInfoResponse = BlobGetAccountInfoHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlobGetAccountInfoHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type PageBlobCreateResponse = PageBlobCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the uploadPages operation.\n */\nexport type PageBlobUploadPagesResponse = PageBlobUploadPagesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobUploadPagesHeaders;\n    };\n};\n\n/**\n * Contains response data for the clearPages operation.\n */\nexport type PageBlobClearPagesResponse = PageBlobClearPagesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobClearPagesHeaders;\n    };\n};\n\n/**\n * Contains response data for the uploadPagesFromURL operation.\n */\nexport type PageBlobUploadPagesFromURLResponse = PageBlobUploadPagesFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobUploadPagesFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the getPageRanges operation.\n */\nexport type PageBlobGetPageRangesResponse = PageList & PageBlobGetPageRangesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobGetPageRangesHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PageList;\n    };\n};\n\n/**\n * Contains response data for the getPageRangesDiff operation.\n */\nexport type PageBlobGetPageRangesDiffResponse = PageList & PageBlobGetPageRangesDiffHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PageList;\n    };\n};\n\n/**\n * Contains response data for the resize operation.\n */\nexport type PageBlobResizeResponse = PageBlobResizeHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobResizeHeaders;\n    };\n};\n\n/**\n * Contains response data for the updateSequenceNumber operation.\n */\nexport type PageBlobUpdateSequenceNumberResponse = PageBlobUpdateSequenceNumberHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobUpdateSequenceNumberHeaders;\n    };\n};\n\n/**\n * Contains response data for the copyIncremental operation.\n */\nexport type PageBlobCopyIncrementalResponse = PageBlobCopyIncrementalHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PageBlobCopyIncrementalHeaders;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type AppendBlobCreateResponse = AppendBlobCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: AppendBlobCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the appendBlock operation.\n */\nexport type AppendBlobAppendBlockResponse = AppendBlobAppendBlockHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: AppendBlobAppendBlockHeaders;\n    };\n};\n\n/**\n * Contains response data for the appendBlockFromUrl operation.\n */\nexport type AppendBlobAppendBlockFromUrlResponse = AppendBlobAppendBlockFromUrlHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: AppendBlobAppendBlockFromUrlHeaders;\n    };\n};\n\n/**\n * Contains response data for the upload operation.\n */\nexport type BlockBlobUploadResponse = BlockBlobUploadHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobUploadHeaders;\n    };\n};\n\n/**\n * Contains response data for the stageBlock operation.\n */\nexport type BlockBlobStageBlockResponse = BlockBlobStageBlockHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobStageBlockHeaders;\n    };\n};\n\n/**\n * Contains response data for the stageBlockFromURL operation.\n */\nexport type BlockBlobStageBlockFromURLResponse = BlockBlobStageBlockFromURLHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobStageBlockFromURLHeaders;\n    };\n};\n\n/**\n * Contains response data for the commitBlockList operation.\n */\nexport type BlockBlobCommitBlockListResponse = BlockBlobCommitBlockListHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobCommitBlockListHeaders;\n    };\n};\n\n/**\n * Contains response data for the getBlockList operation.\n */\nexport type BlockBlobGetBlockListResponse = BlockList & BlockBlobGetBlockListHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: BlockBlobGetBlockListHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BlockList;\n    };\n};\n","import { AbortSignalLike, isNode } from \"@azure/ms-rest-js\";\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call Aborter.none to create a new Aborter instance without timeout.\n * - Call Aborter.timeout() to create a new Aborter instance with timeout.\n *\n * For an existing instance aborter:\n * - Call aborter.withTimeout() to create and return a child Aborter instance with timeout.\n * - Call aborter.withValue(key, value) to create and return a child Aborter instance with key/value pair.\n * - Call aborter.abort() to abort current instance and all children instances.\n * - Call aborter.getValue(key) to search and get value with corresponding key from current aborter to all parents.\n *\n * @example\n * // Abort without timeout\n * await blockBlobURL.upload(Aborter.none, buf, buf.length);\n *\n * @example\n * // Abort container create in 1000ms\n * await blockBlobURL.upload(Aborter.timeout(1000), buf, buf.length);\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time, abort another when any of them is finished\n * const aborter = Aborter.timeout(30 * 1000);\n * blockBlobURL1.upload(aborter, buf, buf.length).then(aborter.abort);\n * blockBlobURL2.upload(aborter, buf, buf.length).then(aborter.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n *\n * @export\n * @class Aborter\n * @implements {AbortSignalLike}\n */\n\nexport class Aborter implements AbortSignalLike {\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof Aborter\n   */\n  public get aborted(): boolean {\n    return this._aborted;\n  }\n\n  /**\n   * Creates a new Aborter instance without timeout.\n   *\n   * @readonly\n   * @static\n   * @type {Aborter}\n   * @memberof Aborter\n   */\n  public static get none(): Aborter {\n    return new Aborter(undefined, 0);\n  }\n\n  /**\n   * Creates a new Aborter instance with timeout in milliseconds.\n   * Set parameter timeout to 0 will not create a timer.\n   *\n   * @static\n   * @param {number} {timeout} in milliseconds\n   * @returns {Aborter}\n   * @memberof Aborter\n   */\n  public static timeout(timeout: number): Aborter {\n    return new Aborter(undefined, timeout);\n  }\n\n  /**\n   * onabort event listener.\n   *\n   * @memberof Aborter\n   */\n  public onabort: ((this: AbortSignalLike, ev: any) => any) | null = null;\n\n  // tslint:disable-next-line:variable-name\n  private _aborted: boolean = false;\n  private timer?: any;\n  private readonly parent?: Aborter;\n  private readonly children: Aborter[] = []; // When child object calls dispose(), remove child from here\n  private readonly abortEventListeners: ((this: AbortSignalLike, ev?: any) => any)[] = [];\n  // Pipeline proxies need to use \"abortSignal as Aborter\" in order to access non AbortSignalLike methods\n  // immutable primitive types\n  private readonly key?: string;\n  private readonly value?: string | number | boolean | null;\n  // private disposed: boolean = false;\n\n  /**\n   * Private constructor for internal usage, creates an instance of Aborter.\n   *\n   * @param {Aborter} [parent] Optional. Parent aborter.\n   * @param {number} [timeout=0] Optional. Timeout before abort in millisecond, 0 means no timeout.\n   * @param {string} [key] Optional. Immutable key in string.\n   * @param {(string | number | boolean | null)} [value] Optional. Immutable value.\n   * @memberof Aborter\n   */\n  private constructor(\n    parent?: Aborter,\n    timeout: number = 0,\n    key?: string,\n    value?: string | number | boolean | null\n  ) {\n    this.parent = parent;\n    this.key = key;\n    this.value = value;\n\n    if (timeout > 0) {\n      this.timer = setTimeout(() => {\n        this.abort.call(this);\n      }, timeout);\n\n      // When called, the active Timeout object will not require the Node.js event loop\n      // to remain active. If there is no other activity keeping the event loop running,\n      // the process may exit before the Timeout object's callback is invoked.\n      if (this.timer && isNode) {\n        this.timer!.unref();\n      }\n    }\n  }\n\n  /**\n   * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n   * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n   * triggers timeout event, all children nodes abort event will be triggered too.\n   *\n   * When timeout parameter (in millisecond) is larger than 0, the abort event will be triggered when timeout.\n   * Otherwise, call abort() method to manually abort.\n   *\n   * @param {number} {timeout} Timeout in millisecond.\n   * @returns {Aborter} The new Aborter instance created.\n   * @memberof Aborter\n   */\n  public withTimeout(timeout: number): Aborter {\n    const childCancelContext = new Aborter(this, timeout);\n    this.children.push(childCancelContext);\n    return childCancelContext;\n  }\n\n  /**\n   * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n   * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n   * triggers timeout event, all children nodes abort event will be triggered too.\n   *\n   * Immutable key value pair will be set into the new created Aborter instance.\n   * Call getValue() to find out latest value with corresponding key in the chain of\n   * [current node] -> [parent node] and [grand parent node]....\n   *\n   * @param {string} key\n   * @param {(string | number | boolean | null)} [value]\n   * @returns {Aborter}\n   * @memberof Aborter\n   */\n  public withValue(key: string, value?: string | number | boolean | null): Aborter {\n    const childCancelContext = new Aborter(this, 0, key, value);\n    this.children.push(childCancelContext);\n    return childCancelContext;\n  }\n\n  /**\n   * Find out latest value with corresponding key in the chain of\n   * [current node] -> [parent node] -> [grand parent node] -> ... -> [root node].\n   *\n   * If key is not found, undefined will be returned.\n   *\n   * @param {string} key\n   * @returns {(string | number | boolean | null | undefined)}\n   * @memberof Aborter\n   */\n  public getValue(key: string): string | number | boolean | null | undefined {\n    for (let parent: Aborter | undefined = this; parent; parent = parent.parent) {\n      if (parent.key === key) {\n        return parent.value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Trigger abort event immediately, the onabort and all abort event listeners will be triggered.\n   * Will try to trigger abort event for all children Aborter nodes.\n   *\n   * - If there is a timeout, the timer will be cancelled.\n   * - If aborted is true, nothing will happen.\n   *\n   * @returns\n   * @memberof Aborter\n   */\n  public abort() {\n    if (this.aborted) {\n      return;\n    }\n    this.cancelTimer();\n\n    if (this.onabort) {\n      this.onabort.call(this, { type: \"abort\" } as any);\n    }\n\n    this.abortEventListeners.forEach((listener) => {\n      listener.call(this, { type: \"abort\" } as any);\n    });\n\n    this.children.forEach((child) => child.cancelByParent());\n\n    this._aborted = true;\n  }\n\n  // public dispose() {\n  //   if (this.disposed || this.aborted) {\n  //     return;\n  //   }\n\n  //   this.cancelTimer();\n\n  //   // (parent)A <- B <- C(child), if B disposes, when A abort, C will not abort\n  //   if (this.parent) {\n  //     const index = this.parent.children.indexOf(this);\n  //     if (index > -1) {\n  //       this.parent.children.splice(index, 1);\n  //     }\n  //   }\n\n  //   this.disposed = true;\n  // }\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof Aborter\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    this.abortEventListeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof Aborter\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    const index = this.abortEventListeners.indexOf(listener);\n    if (index > -1) {\n      this.abortEventListeners.splice(index, 1);\n    }\n  }\n\n  public dispatchEvent(): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  private cancelByParent() {\n    // if (!this.disposed) {\n    this.abort();\n    // }\n  }\n\n  private cancelTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n}\n","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link IAccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {AccountSASPermissions}\n   * @memberof AccountSASPermissions\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set IAccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASPermissions\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link IAccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @static\n   * @param {string} resourceTypes\n   * @returns {AccountSASResourceTypes}\n   * @memberof AccountSASResourceTypes\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASResourceTypes\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link IAccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @static\n   * @param {string} services\n   * @returns {AccountSASServices}\n   * @memberof AccountSASServices\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   * @returns {string}\n   * @memberof AccountSASServices\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","/**\n * Allowed IP range for a SAS.\n *\n * @export\n * @interface IIPRange\n */\nexport interface IIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof IPRange\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof IPRange\n   */\n  end?: string;\n}\n\n/**\n * Generate IPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {IIPRange} ipRange\n * @returns {string}\n */\nexport function ipRangeToString(ipRange: IIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","import { AbortSignalLike, isNode, URLBuilder } from \"@azure/ms-rest-js\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JSv10 SDKs\n *\n * When customers pass a URL string into XXXURL classes constrcutor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXURL constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `BlobURL.fromContainerURL(containerURL, blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @export\n * @param {number} timeInMs\n * @param {AbortSignalLike} [aborter]\n * @param {Error} [abortError]\n */\nexport async function delay(timeInMs: number, aborter?: AbortSignalLike, abortError?: Error) {\n  return new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    }\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n","import { IIPRange, ipRangeToString } from \"./IIPRange\";\nimport { UserDelegationKey } from \"./ServiceURL\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  HTTPS = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HTTPSandHTTP = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link IAccountSASSignatureValues} and {@link IBlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startTime?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiryTime?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link IBlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage container or blob (only for {@link IBlobSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {IIPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: IIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedTid?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedStart?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedExpiry?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(IIPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): IIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startTime] Representing the start time for this SAS token\n   * @param {Date} [expiryTime] Representing the expiry time for this SAS token\n   * @param {IIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @param {userDelegationKey} [userDelegationKey] Representing the user delegation key properties\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startTime?: Date,\n    expiryTime?: Date,\n    ipRange?: IIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiryTime = expiryTime;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startTime = startTime;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n\n    if (userDelegationKey) {\n      this.signedOid = userDelegationKey.signedOid;\n      this.signedTid = userDelegationKey.signedTid;\n      this.signedStart = userDelegationKey.signedStart;\n      this.signedExpiry = userDelegationKey.signedExpiry;\n      this.signedService = userDelegationKey.signedService;\n      this.signedVersion = userDelegationKey.signedVersion;\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startTime ? truncatedISO8061Date(this.startTime, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiryTime ? truncatedISO8061Date(this.expiryTime, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTid);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStart ? truncatedISO8061Date(this.signedStart, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiry ? truncatedISO8061Date(this.signedExpiry, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","export const SDK_VERSION: string = \"10.4.1\";\nexport const SERVICE_VERSION: string = \"2018-11-09\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 100 * 1024 * 1024; // 100MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HTTPURLConnection = {\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"content-encoding\",\n  CONTENT_LANGUAGE: \"content-language\",\n  CONTENT_LENGTH: \"content-length\",\n  CONTENT_MD5: \"content-md5\",\n  CONTENT_TYPE: \"content-type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_DATE: \"x-ms-date\"\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n","import { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { IIPRange, ipRangeToString } from \"./IIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * IAccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call generateSASQueryParameters() to obtain a representation of the SAS\n * which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters} exist because\n * the former is mutable and a logical representation while the latter is immutable and used to generate actual REST\n * requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n *\n * @export\n * @class IAccountSASSignatureValues\n */\nexport interface IAccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   *\n   * @type {string}\n   * @memberof IAccountSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   *\n   * @type {SASProtocol}\n   * @memberof IAccountSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof IAccountSASSignatureValues\n   */\n  startTime?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof IAccountSASSignatureValues\n   */\n  expiryTime: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   *\n   * @type {string}\n   * @memberof IAccountSASSignatureValues\n   */\n  permissions: string;\n\n  /**\n   * Optional. IP range allowed.\n   *\n   * @type {IIPRange}\n   * @memberof IAccountSASSignatureValues\n   */\n  ipRange?: IIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   *\n   * @type {string}\n   * @memberof IAccountSASSignatureValues\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   *\n   * @type {string}\n   * @memberof IAccountSASSignatureValues\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof IAccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: IAccountSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions\n  ).toString();\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startTime\n      ? truncatedISO8061Date(accountSASSignatureValues.startTime, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiryTime, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startTime,\n    accountSASSignatureValues.expiryTime,\n    accountSASSignatureValues.ipRange\n  );\n}\n","import { RestError, TransferProgressEvent } from \"@azure/ms-rest-js\";\nimport { Readable } from \"stream\";\n\nimport { Aborter } from \"../Aborter\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface IRetriableReadableStreamOptions {\n  /**\n   * Max retry count (>=0), undefined or invalid value means no retry\n   *\n   * @type {number}\n   * @memberof IRetriableReadableStreamOptions\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   *\n   * @memberof IRetriableReadableStreamOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   *\n   * @type {boolean}\n   * @memberof IRetriableReadableStreamOptions\n   */\n  doInjectErrorOnce?: boolean;\n}\n\nconst ABORT_ERROR = new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR);\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n *\n * @class RetriableReadableStream\n * @extends {Readable}\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: Aborter;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private progress?: (progress: TransferProgressEvent) => void;\n  private options: IRetriableReadableStreamOptions;\n  private abortHandler = () => {\n    this.source.pause();\n    this.emit(\"error\", ABORT_ERROR);\n  };\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {NodeJS.ReadableStream} source The current ReadableStream returned from getter\n   * @param {ReadableStreamGetter} getter A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param {number} offset Offset position in original data source to read\n   * @param {number} count How much data in original data source to read\n   * @param {IRetriableReadableStreamOptions} [options={}]\n   * @memberof RetriableReadableStream\n   */\n  public constructor(\n    aborter: Aborter,\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: IRetriableReadableStreamOptions = {}\n  ) {\n    super();\n    this.aborter = aborter;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.progress = options.progress;\n    this.options = options;\n\n    aborter.addEventListener(\"abort\", this.abortHandler);\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read() {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.progress) {\n        this.progress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.aborter.removeEventListener(\"abort\", this.abortHandler);\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              // tslint:disable-next-line:max-line-length\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this\n                .offset - 1}, data needed offset: ${this.end}, retries: ${\n                this.retries\n              }, max retries: ${this.maxRetryRequests}`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n","import { HttpResponse, isNode } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport * as Models from \"./generated/src/models\";\nimport { IMetadata } from \"./models\";\nimport { IRetriableReadableStreamOptions } from \"./utils/RetriableReadableStream\";\nimport { ReadableStreamGetter, RetriableReadableStream } from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements Models.BlobDownloadResponse interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The readableStreamBody stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n *\n * @export\n * @class BlobDownloadResponse\n * @implements {Models.BlobDownloadResponse}\n */\nexport class BlobDownloadResponse implements Models.BlobDownloadResponse {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   * @type {(Models.BlobType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobType(): Models.BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyCompletionTime(): Date | undefined {\n    return this.originalResponse.copyCompletionTime;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   * @type {(Models.CopyStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatus(): Models.CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   * @type {(Models.LeaseDurationType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseDuration(): Models.LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   * @type {(Models.LeaseStateType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseState(): Models.LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   * @type {(Models.LeaseStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseStatus(): Models.LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get eTag(): string | undefined {\n    return this.originalResponse.eTag;\n  }\n\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   * @type {(boolean | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   * @type {(IMetadata | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get metadata(): IMetadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   * @type {(Promise<Blob> | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobBody(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   * @type {(NodeJS.ReadableStream | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  public get _response(): HttpResponse & {\n    parsedHeaders: Models.BlobDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: Models.BlobDownloadResponse;\n  private blobDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of BlobDownloadResponse.\n   *\n   * @param {Aborter} aborter\n   * @param {Models.BlobDownloadResponse} originalResponse\n   * @param {ReadableStreamGetter} getter\n   * @param {number} offset\n   * @param {number} count\n   * @param {IRetriableReadableStreamOptions} [options={}]\n   * @memberof BlobDownloadResponse\n   */\n  public constructor(\n    aborter: Aborter,\n    originalResponse: Models.BlobDownloadResponse,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: IRetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new RetriableReadableStream(\n      aborter,\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const KeyInfo: msRest.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        xmlName: \"Expiry\",\n        required: true,\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserDelegationKey: msRest.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedOid: {\n        xmlName: \"SignedOid\",\n        required: true,\n        serializedName: \"SignedOid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedTid: {\n        xmlName: \"SignedTid\",\n        required: true,\n        serializedName: \"SignedTid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedStart: {\n        xmlName: \"SignedStart\",\n        required: true,\n        serializedName: \"SignedStart\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedExpiry: {\n        xmlName: \"SignedExpiry\",\n        required: true,\n        serializedName: \"SignedExpiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedService: {\n        xmlName: \"SignedService\",\n        required: true,\n        serializedName: \"SignedService\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedVersion: {\n        xmlName: \"SignedVersion\",\n        required: true,\n        serializedName: \"SignedVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        xmlName: \"Value\",\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: msRest.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      code: {\n        xmlName: \"Code\",\n        serializedName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        xmlName: \"Message\",\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: msRest.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiry: {\n        xmlName: \"Expiry\",\n        required: true,\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permission: {\n        xmlName: \"Permission\",\n        required: true,\n        serializedName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobProperties: msRest.CompositeMapper = {\n  xmlName: \"Properties\",\n  serializedName: \"BlobProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobProperties\",\n    modelProperties: {\n      creationTime: {\n        xmlName: \"Creation-Time\",\n        serializedName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        xmlName: \"Content-Length\",\n        serializedName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        xmlName: \"Content-Type\",\n        serializedName: \"Content-Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        xmlName: \"Content-Encoding\",\n        serializedName: \"Content-Encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        xmlName: \"Content-Language\",\n        serializedName: \"Content-Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        xmlName: \"Content-MD5\",\n        serializedName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentDisposition: {\n        xmlName: \"Content-Disposition\",\n        serializedName: \"Content-Disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        xmlName: \"Cache-Control\",\n        serializedName: \"Cache-Control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        xmlName: \"x-ms-blob-sequence-number\",\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        xmlName: \"BlobType\",\n        serializedName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      copyId: {\n        xmlName: \"CopyId\",\n        serializedName: \"CopyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        xmlName: \"CopyStatus\",\n        serializedName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      copySource: {\n        xmlName: \"CopySource\",\n        serializedName: \"CopySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        xmlName: \"CopyProgress\",\n        serializedName: \"CopyProgress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyCompletionTime: {\n        xmlName: \"CopyCompletionTime\",\n        serializedName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        xmlName: \"CopyStatusDescription\",\n        serializedName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEncrypted: {\n        xmlName: \"ServerEncrypted\",\n        serializedName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      incrementalCopy: {\n        xmlName: \"IncrementalCopy\",\n        serializedName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        xmlName: \"DestinationSnapshot\",\n        serializedName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedTime: {\n        xmlName: \"DeletedTime\",\n        serializedName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        xmlName: \"RemainingRetentionDays\",\n        serializedName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        xmlName: \"AccessTier\",\n        serializedName: \"AccessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        xmlName: \"AccessTierInferred\",\n        serializedName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        xmlName: \"ArchiveStatus\",\n        serializedName: \"ArchiveStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        xmlName: \"AccessTierChangeTime\",\n        serializedName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobItem: msRest.CompositeMapper = {\n  xmlName: \"Blob\",\n  serializedName: \"BlobItem\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        xmlName: \"Deleted\",\n        required: true,\n        serializedName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      snapshot: {\n        xmlName: \"Snapshot\",\n        required: true,\n        serializedName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobFlatListSegment: msRest.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobFlatListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsFlatSegmentResponse: msRest.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        xmlName: \"Delimiter\",\n        serializedName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\"\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobPrefix: msRest.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHierarchyListSegment: msRest.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobHierarchyListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        serializedName: \"BlobPrefixes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\"\n            }\n          }\n        }\n      },\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsHierarchySegmentResponse: msRest.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        xmlName: \"Delimiter\",\n        serializedName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\"\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Block: msRest.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        xmlName: \"Size\",\n        required: true,\n        serializedName: \"Size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockList: msRest.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"CommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"CommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      },\n      uncommittedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"UncommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"UncommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlockLookupList: msRest.CompositeMapper = {\n  xmlName: \"BlockList\",\n  serializedName: \"BlockLookupList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        serializedName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uncommitted: {\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        serializedName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      latest: {\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        serializedName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProperties: msRest.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      publicAccess: {\n        xmlName: \"PublicAccess\",\n        serializedName: \"PublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        xmlName: \"HasImmutabilityPolicy\",\n        serializedName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        xmlName: \"HasLegalHold\",\n        serializedName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerItem: msRest.CompositeMapper = {\n  xmlName: \"Container\",\n  serializedName: \"ContainerItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainersSegmentResponse: msRest.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListContainersSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      containerItems: {\n        xmlIsWrapped: true,\n        xmlName: \"Containers\",\n        xmlElementName: \"Container\",\n        required: true,\n        serializedName: \"ContainerItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\"\n            }\n          }\n        }\n      },\n      nextMarker: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: msRest.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        xmlName: \"AllowedOrigins\",\n        required: true,\n        serializedName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        xmlName: \"AllowedMethods\",\n        required: true,\n        serializedName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        xmlName: \"AllowedHeaders\",\n        required: true,\n        serializedName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        xmlName: \"ExposedHeaders\",\n        required: true,\n        serializedName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        xmlName: \"MaxAgeInSeconds\",\n        required: true,\n        serializedName: \"MaxAgeInSeconds\",\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoReplication: msRest.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        xmlName: \"Status\",\n        required: true,\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSyncTime: {\n        xmlName: \"LastSyncTime\",\n        required: true,\n        serializedName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: msRest.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        xmlName: \"Days\",\n        serializedName: \"Days\",\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Logging: msRest.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        required: true,\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteProperty: {\n        xmlName: \"Delete\",\n        required: true,\n        serializedName: \"Delete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      read: {\n        xmlName: \"Read\",\n        required: true,\n        serializedName: \"Read\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      write: {\n        xmlName: \"Write\",\n        required: true,\n        serializedName: \"Write\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        required: true,\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: msRest.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        xmlName: \"IncludeAPIs\",\n        serializedName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageRange: msRest.CompositeMapper = {\n  serializedName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: msRest.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageList: msRest.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        serializedName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\"\n            }\n          }\n        }\n      },\n      clearRange: {\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        serializedName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: msRest.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        xmlName: \"Id\",\n        required: true,\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        xmlName: \"AccessPolicy\",\n        required: true,\n        serializedName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const StaticWebsite: msRest.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      indexDocument: {\n        xmlName: \"IndexDocument\",\n        serializedName: \"IndexDocument\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDocument404Path: {\n        xmlName: \"ErrorDocument404Path\",\n        serializedName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageServiceProperties: msRest.CompositeMapper = {\n  serializedName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageServiceProperties\",\n    modelProperties: {\n      logging: {\n        xmlName: \"Logging\",\n        serializedName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\"\n        }\n      },\n      hourMetrics: {\n        xmlName: \"HourMetrics\",\n        serializedName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        xmlName: \"MinuteMetrics\",\n        serializedName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        xmlIsWrapped: true,\n        xmlName: \"Cors\",\n        xmlElementName: \"CorsRule\",\n        serializedName: \"Cors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      defaultServiceVersion: {\n        xmlName: \"DefaultServiceVersion\",\n        serializedName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRetentionPolicy: {\n        xmlName: \"DeleteRetentionPolicy\",\n        serializedName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      },\n      staticWebsite: {\n        xmlName: \"StaticWebsite\",\n        serializedName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageServiceStats: msRest.CompositeMapper = {\n  serializedName: \"StorageServiceStats\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageServiceStats\",\n    modelProperties: {\n      geoReplication: {\n        xmlName: \"GeoReplication\",\n        serializedName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseAccessConditions: msRest.CompositeMapper = {\n  xmlName: \"lease-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"LeaseAccessConditions\",\n    modelProperties: {\n      leaseId: {\n        xmlName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModifiedAccessConditions: msRest.CompositeMapper = {\n  xmlName: \"modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"ModifiedAccessConditions\",\n    modelProperties: {\n      ifModifiedSince: {\n        xmlName: \"ifModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifUnmodifiedSince: {\n        xmlName: \"ifUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifMatch: {\n        xmlName: \"ifMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ifNoneMatch: {\n        xmlName: \"ifNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHTTPHeaders: msRest.CompositeMapper = {\n  xmlName: \"blob-HTTP-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHTTPHeaders\",\n    modelProperties: {\n      blobCacheControl: {\n        xmlName: \"blobCacheControl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentType: {\n        xmlName: \"blobContentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        xmlName: \"blobContentMD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobContentEncoding: {\n        xmlName: \"blobContentEncoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLanguage: {\n        xmlName: \"blobContentLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentDisposition: {\n        xmlName: \"blobContentDisposition\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceModifiedAccessConditions: msRest.CompositeMapper = {\n  xmlName: \"source-modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SourceModifiedAccessConditions\",\n    modelProperties: {\n      sourceIfModifiedSince: {\n        xmlName: \"sourceIfModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfUnmodifiedSince: {\n        xmlName: \"sourceIfUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfMatch: {\n        xmlName: \"sourceIfMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceIfNoneMatch: {\n        xmlName: \"sourceIfNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SequenceNumberAccessConditions: msRest.CompositeMapper = {\n  xmlName: \"sequence-number-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SequenceNumberAccessConditions\",\n    modelProperties: {\n      ifSequenceNumberLessThanOrEqualTo: {\n        xmlName: \"ifSequenceNumberLessThanOrEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberLessThan: {\n        xmlName: \"ifSequenceNumberLessThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberEqualTo: {\n        xmlName: \"ifSequenceNumberEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendPositionAccessConditions: msRest.CompositeMapper = {\n  xmlName: \"append-position-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendPositionAccessConditions\",\n    modelProperties: {\n      maxSize: {\n        xmlName: \"maxSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appendPosition: {\n        xmlName: \"appendPosition\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetStatisticsHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-getstatistics-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListContainersSegmentHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-listcontainerssegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetUserDelegationKeyHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-getuserdelegationkey-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetAccountInfoHeaders: msRest.CompositeMapper = {\n  serializedName: \"service-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerCreateHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetPropertiesHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerDeleteHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetMetadataHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccessPolicyHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-getaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetAccessPolicyHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-setaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAcquireLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerReleaseLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenewLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerBreakLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerChangeLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobFlatSegmentHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-listblobflatsegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobHierarchySegmentHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-listblobhierarchysegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobHierarchySegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccountInfoHeaders: msRest.CompositeMapper = {\n  serializedName: \"container-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDownloadHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-download-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetPropertiesHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      creationTime: {\n        serializedName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletionTime: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCreateHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobCreateHeaders: msRest.CompositeMapper = {\n  serializedName: \"appendblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobUploadHeaders: msRest.CompositeMapper = {\n  serializedName: \"blockblob-upload-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobUndeleteHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-undelete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetHTTPHeadersHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-sethttpheaders-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHTTPHeadersHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetMetadataHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAcquireLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReleaseLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenewLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobChangeLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobBreakLeaseHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCreateSnapshotHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-createsnapshot-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStartCopyFromURLHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-startcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCopyFromURLHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-copyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"success\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAbortCopyFromURLHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-abortcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTierHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-settier-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccountInfoHeaders: msRest.CompositeMapper = {\n  serializedName: \"blob-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockHeaders: msRest.CompositeMapper = {\n  serializedName: \"blockblob-stageblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: msRest.CompositeMapper = {\n  serializedName: \"blockblob-stageblockfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobCommitBlockListHeaders: msRest.CompositeMapper = {\n  serializedName: \"blockblob-commitblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobGetBlockListHeaders: msRest.CompositeMapper = {\n  serializedName: \"blockblob-getblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-uploadpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobClearPagesHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-clearpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-uploadpagesfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-getpageranges-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesDiffHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-getpagerangesdiff-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobResizeHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-resize-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-updatesequencenumber-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCopyIncrementalHeaders: msRest.CompositeMapper = {\n  serializedName: \"pageblob-copyincremental-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockHeaders: msRest.CompositeMapper = {\n  serializedName: \"appendblob-appendblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockFromUrlHeaders: msRest.CompositeMapper = {\n  serializedName: \"appendblob-appendblockfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ContainerItem,\n  ContainerProperties,\n  CorsRule,\n  GeoReplication,\n  KeyInfo,\n  ListContainersSegmentResponse,\n  Logging,\n  Metrics,\n  RetentionPolicy,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  StaticWebsite,\n  StorageError,\n  StorageServiceProperties,\n  StorageServiceStats,\n  UserDelegationKey\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const access: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"access\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action0: msRest.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'acquire',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action1: msRest.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'release',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action2: msRest.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'renew',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action3: msRest.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'break',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action4: msRest.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'change',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const appendPosition: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobCacheControl: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobCacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentDisposition: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentEncoding: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLanguage: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLength: msRest.OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobContentMD5: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const blobContentType: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobSequenceNumber: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobSequenceNumber\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-sequence-number\",\n    defaultValue: 0,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobType0: msRest.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'PageBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType1: msRest.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'AppendBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType2: msRest.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'BlockBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blockId: msRest.OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    required: true,\n    serializedName: \"blockid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const breakPeriod: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"breakPeriod\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const comp0: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'properties',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp1: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'stats',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp10: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'tier',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp11: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'page',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp12: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'pagelist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp13: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'incrementalcopy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp14: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'appendblock',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp15: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'block',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp16: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'blocklist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp2: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'list',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp3: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'userdelegationkey',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp4: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'metadata',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp5: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'acl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp6: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'lease',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp7: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'undelete',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp8: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'snapshot',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp9: msRest.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'copy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLength: msRest.OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const copyActionAbortConstant: msRest.OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    defaultValue: 'abort',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copyId: msRest.OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    required: true,\n    serializedName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copySource: msRest.OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deleteSnapshots: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"deleteSnapshots\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"include\",\n        \"only\"\n      ]\n    }\n  }\n};\nexport const delimiter: msRest.OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    required: true,\n    serializedName: \"delimiter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const duration: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"duration\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifMatch: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifModifiedSince: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const ifNoneMatch: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifSequenceNumberEqualTo: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThan: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThanOrEqualTo: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifUnmodifiedSince: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const include0: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"metadata\"\n      ]\n    }\n  }\n};\nexport const include1: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\"\n          ]\n        }\n      }\n    }\n  },\n  collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport const leaseId0: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"leaseAccessConditions\",\n    \"leaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const leaseId1: msRest.OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const listType: msRest.OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    required: true,\n    serializedName: \"blocklisttype\",\n    defaultValue: 'committed',\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"committed\",\n        \"uncommitted\",\n        \"all\"\n      ]\n    }\n  }\n};\nexport const marker: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"marker\"\n  ],\n  mapper: {\n    serializedName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxresults: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxresults\"\n  ],\n  mapper: {\n    serializedName: \"maxresults\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const maxSize: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"maxSize\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const metadata: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"metadata\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: {\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\nexport const pageWrite0: msRest.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'update',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const pageWrite1: msRest.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'clear',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prefix: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prefix\"\n  ],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prevsnapshot: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prevsnapshot\"\n  ],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId0: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"proposedLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId1: msRest.OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range0: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"range\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range1: msRest.OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const rangeGetContentMD5: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rangeGetContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const requestId: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"requestId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype0: msRest.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'service',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype1: msRest.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'account',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype2: msRest.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'container',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sequenceNumberAction: msRest.OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"max\",\n        \"update\",\n        \"increment\"\n      ]\n    }\n  }\n};\nexport const snapshot: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"snapshot\"\n  ],\n  mapper: {\n    serializedName: \"snapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceContentMD5: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceIfMatch: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfModifiedSince: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceIfNoneMatch: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfUnmodifiedSince: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceRange0: msRest.OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceRange1: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceRange\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceUrl: msRest.OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tier: msRest.OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-access-tier\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timeout: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timeout\"\n  ],\n  mapper: {\n    serializedName: \"timeout\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const transactionalContentMD5: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"transactionalContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const url: msRest.OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    required: true,\n    serializedName: \"url\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const version: msRest.OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    defaultValue: '2018-11-09',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xMsRequiresSync: msRest.OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Service.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param storageServiceProperties The StorageService properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceSetPropertiesResponse>\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;\n  /**\n   * @param storageServiceProperties The StorageService properties.\n   * @param callback The callback\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param storageServiceProperties The StorageService properties.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setProperties(storageServiceProperties: Models.StorageServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        storageServiceProperties,\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: msRest.ServiceCallback<Models.StorageServiceProperties>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: msRest.ServiceCallback<Models.StorageServiceProperties>): void;\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams | msRest.ServiceCallback<Models.StorageServiceProperties>, callback?: msRest.ServiceCallback<Models.StorageServiceProperties>): Promise<Models.ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the\n   * storage account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetStatisticsResponse>\n   */\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams): Promise<Models.ServiceGetStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getStatistics(callback: msRest.ServiceCallback<Models.StorageServiceStats>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStatistics(options: Models.ServiceGetStatisticsOptionalParams, callback: msRest.ServiceCallback<Models.StorageServiceStats>): void;\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams | msRest.ServiceCallback<Models.StorageServiceStats>, callback?: msRest.ServiceCallback<Models.StorageServiceStats>): Promise<Models.ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getStatisticsOperationSpec,\n      callback) as Promise<Models.ServiceGetStatisticsResponse>;\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified\n   * account\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceListContainersSegmentResponse>\n   */\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams): Promise<Models.ServiceListContainersSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listContainersSegment(callback: msRest.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listContainersSegment(options: Models.ServiceListContainersSegmentOptionalParams, callback: msRest.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams | msRest.ServiceCallback<Models.ListContainersSegmentResponse>, callback?: msRest.ServiceCallback<Models.ListContainersSegmentResponse>): Promise<Models.ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listContainersSegmentOperationSpec,\n      callback) as Promise<Models.ServiceListContainersSegmentResponse>;\n  }\n\n  /**\n   * Retrieves a user delgation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetUserDelegationKeyResponse>\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options?: Models.ServiceGetUserDelegationKeyOptionalParams): Promise<Models.ServiceGetUserDelegationKeyResponse>;\n  /**\n   * @param keyInfo\n   * @param callback The callback\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, callback: msRest.ServiceCallback<Models.UserDelegationKey>): void;\n  /**\n   * @param keyInfo\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options: Models.ServiceGetUserDelegationKeyOptionalParams, callback: msRest.ServiceCallback<Models.UserDelegationKey>): void;\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options?: Models.ServiceGetUserDelegationKeyOptionalParams | msRest.ServiceCallback<Models.UserDelegationKey>, callback?: msRest.ServiceCallback<Models.UserDelegationKey>): Promise<Models.ServiceGetUserDelegationKeyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        keyInfo,\n        options\n      },\n      getUserDelegationKeyOperationSpec,\n      callback) as Promise<Models.ServiceGetUserDelegationKeyResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: msRest.RequestOptionsBase): Promise<Models.ServiceGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  getAccountInfo(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ServiceGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst setPropertiesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"storageServiceProperties\",\n    mapper: {\n      ...Mappers.StorageServiceProperties,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getStatisticsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp1\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageServiceStats,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listContainersSegmentOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include0,\n    Parameters.timeout,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getUserDelegationKeyOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype0,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"keyInfo\",\n    mapper: {\n      ...Mappers.KeyInfo,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AccessPolicy,\n  BlobFlatListSegment,\n  BlobHierarchyListSegment,\n  BlobItem,\n  BlobPrefix,\n  BlobProperties,\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerChangeLeaseHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccountInfoHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerReleaseLeaseHeaders,\n  ContainerRenewLeaseHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  SignedIdentifier,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/containerMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Container. */\nexport class Container {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Container.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerCreateResponse>\n   */\n  create(options?: Models.ContainerCreateOptionalParams): Promise<Models.ContainerCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.ContainerCreateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  create(options?: Models.ContainerCreateOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ContainerCreateResponse>;\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams): Promise<Models.ContainerGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ContainerGetPropertiesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ContainerGetPropertiesResponse>;\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained\n   * within it are later deleted during garbage collection\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerDeleteResponse>\n   */\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams): Promise<Models.ContainerDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.ContainerDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ContainerDeleteResponse>;\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetMetadataResponse>\n   */\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams): Promise<Models.ContainerSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.ContainerSetMetadataOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.ContainerSetMetadataResponse>;\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container\n   * data may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams): Promise<Models.ContainerGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: msRest.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.ContainerGetAccessPolicyOptionalParams, callback: msRest.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams | msRest.ServiceCallback<Models.SignedIdentifier[]>, callback?: msRest.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerGetAccessPolicyResponse>;\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams): Promise<Models.ContainerSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.ContainerSetAccessPolicyOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerSetAccessPolicyResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams): Promise<Models.ContainerAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.ContainerAcquireLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.ContainerAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams): Promise<Models.ContainerReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.ContainerReleaseLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.ContainerReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams): Promise<Models.ContainerRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.ContainerRenewLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.ContainerRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerBreakLeaseResponse>\n   */\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams): Promise<Models.ContainerBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.ContainerBreakLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.ContainerBreakLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams): Promise<Models.ContainerChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.ContainerChangeLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.ContainerChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobFlatSegmentResponse>\n   */\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams): Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBlobFlatSegment(callback: msRest.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobFlatSegment(options: Models.ContainerListBlobFlatSegmentOptionalParams, callback: msRest.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams | msRest.ServiceCallback<Models.ListBlobsFlatSegmentResponse>, callback?: msRest.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBlobFlatSegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobHierarchySegmentResponse>\n   */\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams): Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, callback: msRest.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, options: Models.ContainerListBlobHierarchySegmentOptionalParams, callback: msRest.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams | msRest.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>, callback?: msRest.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        delimiter,\n        options\n      },\n      listBlobHierarchySegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: msRest.RequestOptionsBase): Promise<Models.ContainerGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  getAccountInfo(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ContainerGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"containerAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"containerAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobFlatSegmentOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include1,\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobHierarchySegmentOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.delimiter,\n    Parameters.marker,\n    Parameters.maxresults,\n    Parameters.include1,\n    Parameters.timeout,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BlobAbortCopyFromURLHeaders,\n  BlobAcquireLeaseHeaders,\n  BlobBreakLeaseHeaders,\n  BlobChangeLeaseHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDownloadHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesHeaders,\n  BlobReleaseLeaseHeaders,\n  BlobRenewLeaseHeaders,\n  BlobSetHTTPHeadersHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Blob. */\nexport class Blob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Blob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDownloadResponse>\n   */\n  download(options?: Models.BlobDownloadOptionalParams): Promise<Models.BlobDownloadResponse>;\n  /**\n   * @param callback The callback\n   */\n  download(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  download(options: Models.BlobDownloadOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  download(options?: Models.BlobDownloadOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobDownloadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      downloadOperationSpec,\n      callback) as Promise<Models.BlobDownloadResponse>;\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and\n   * system properties for the blob. It does not return the content of the blob.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetPropertiesResponse>\n   */\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams): Promise<Models.BlobGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.BlobGetPropertiesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.BlobGetPropertiesResponse>;\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days\n   * specified by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data\n   * is permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify\n   * the \"include=deleted\" query parameter to discover which blobs and snapshots have been soft\n   * deleted. You can then use the Undelete Blob API to restore a soft-deleted blob. All other\n   * operations on a soft-deleted blob or snapshot causes the service to return an HTTP status code\n   * of 404 (ResourceNotFound).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDeleteResponse>\n   */\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams): Promise<Models.BlobDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.BlobDeleteMethodOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.BlobDeleteResponse>;\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobUndeleteResponse>\n   */\n  undelete(options?: Models.BlobUndeleteOptionalParams): Promise<Models.BlobUndeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  undelete(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  undelete(options: Models.BlobUndeleteOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  undelete(options?: Models.BlobUndeleteOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobUndeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      undeleteOperationSpec,\n      callback) as Promise<Models.BlobUndeleteResponse>;\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetHTTPHeadersResponse>\n   */\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams): Promise<Models.BlobSetHTTPHeadersResponse>;\n  /**\n   * @param callback The callback\n   */\n  setHTTPHeaders(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setHTTPHeaders(options: Models.BlobSetHTTPHeadersOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobSetHTTPHeadersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setHTTPHeadersOperationSpec,\n      callback) as Promise<Models.BlobSetHTTPHeadersResponse>;\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetMetadataResponse>\n   */\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams): Promise<Models.BlobSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.BlobSetMetadataOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.BlobSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams): Promise<Models.BlobAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.BlobAcquireLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.BlobAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams): Promise<Models.BlobReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.BlobReleaseLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.BlobReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams): Promise<Models.BlobRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.BlobRenewLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.BlobRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams): Promise<Models.BlobChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.BlobChangeLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.BlobChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobBreakLeaseResponse>\n   */\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams): Promise<Models.BlobBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.BlobBreakLeaseOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.BlobBreakLeaseResponse>;\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobCreateSnapshotResponse>\n   */\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams): Promise<Models.BlobCreateSnapshotResponse>;\n  /**\n   * @param callback The callback\n   */\n  createSnapshot(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createSnapshot(options: Models.BlobCreateSnapshotOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createSnapshotOperationSpec,\n      callback) as Promise<Models.BlobCreateSnapshotResponse>;\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobStartCopyFromURLResponse>\n   */\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams): Promise<Models.BlobStartCopyFromURLResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, options: Models.BlobStartCopyFromURLOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      startCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobStartCopyFromURLResponse>;\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobCopyFromURLResponse>\n   */\n  copyFromURL(copySource: string, options?: Models.BlobCopyFromURLOptionalParams): Promise<Models.BlobCopyFromURLResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyFromURL(copySource: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyFromURL(copySource: string, options: Models.BlobCopyFromURLOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  copyFromURL(copySource: string, options?: Models.BlobCopyFromURLOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyFromURLOperationSpec,\n      callback) as Promise<Models.BlobCopyFromURLResponse>;\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a\n   * destination blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAbortCopyFromURLResponse>\n   */\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams): Promise<Models.BlobAbortCopyFromURLResponse>;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, options: Models.BlobAbortCopyFromURLOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copyId,\n        options\n      },\n      abortCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobAbortCopyFromURLResponse>;\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a\n   * premium storage account and on a block blob in a blob storage account (locally redundant storage\n   * only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob.\n   * A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the\n   * blob's ETag.\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetTierResponse>\n   */\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams): Promise<Models.BlobSetTierResponse>;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P20', 'P30', 'P40', 'P50', 'Hot', 'Cool', 'Archive'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, options: Models.BlobSetTierOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tier,\n        options\n      },\n      setTierOperationSpec,\n      callback) as Promise<Models.BlobSetTierResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: msRest.RequestOptionsBase): Promise<Models.BlobGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  getAccountInfo(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.BlobGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst downloadOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.rangeGetContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.deleteSnapshots,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst undeleteOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setHTTPHeadersOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createSnapshotOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp8\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst startCopyFromURLOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyFromURLOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst abortCopyFromURLOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.copyId,\n    Parameters.timeout,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.copyActionAbortConstant,\n    Parameters.leaseId0\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setTierOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.tier,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ClearRange,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList,\n  PageRange,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a PageBlob. */\nexport class PageBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a PageBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCreateResponse>\n   */\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams): Promise<Models.PageBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, options: Models.PageBlobCreateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        blobContentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.PageBlobCreateResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesResponse>\n   */\n  uploadPages(body: msRest.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams): Promise<Models.PageBlobUploadPagesResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  uploadPages(body: msRest.HttpRequestBody, contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPages(body: msRest.HttpRequestBody, contentLength: number, options: Models.PageBlobUploadPagesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  uploadPages(body: msRest.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadPagesOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesResponse>;\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobClearPagesResponse>\n   */\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams): Promise<Models.PageBlobClearPagesResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, options: Models.PageBlobClearPagesOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      clearPagesOperationSpec,\n      callback) as Promise<Models.PageBlobClearPagesResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read\n   * from a URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesFromURLResponse>\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams): Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options: Models.PageBlobUploadPagesFromURLOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sourceUrl,\n        sourceRange,\n        contentLength,\n        range,\n        options\n      },\n      uploadPagesFromURLOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot\n   * of a page blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesResponse>\n   */\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams): Promise<Models.PageBlobGetPageRangesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRanges(callback: msRest.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRanges(options: Models.PageBlobGetPageRangesOptionalParams, callback: msRest.ServiceCallback<Models.PageList>): void;\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams | msRest.ServiceCallback<Models.PageList>, callback?: msRest.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesResponse>;\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that\n   * were changed between target blob and previous snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesDiffResponse>\n   */\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams): Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRangesDiff(callback: msRest.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRangesDiff(options: Models.PageBlobGetPageRangesDiffOptionalParams, callback: msRest.ServiceCallback<Models.PageList>): void;\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams | msRest.ServiceCallback<Models.PageList>, callback?: msRest.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesDiffOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobResizeResponse>\n   */\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams): Promise<Models.PageBlobResizeResponse>;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, options: Models.PageBlobResizeOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blobContentLength,\n        options\n      },\n      resizeOperationSpec,\n      callback) as Promise<Models.PageBlobResizeResponse>;\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUpdateSequenceNumberResponse>\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams): Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options: Models.PageBlobUpdateSequenceNumberOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sequenceNumberAction,\n        options\n      },\n      updateSequenceNumberOperationSpec,\n      callback) as Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page\n   * blob. The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination. The copied snapshots are complete copies of\n   * the original snapshot and can be read or copied from as usual. This API is supported since REST\n   * version 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCopyIncrementalResponse>\n   */\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams): Promise<Models.PageBlobCopyIncrementalResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, options: Models.PageBlobCopyIncrementalOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyIncrementalOperationSpec,\n      callback) as Promise<Models.PageBlobCopyIncrementalResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType0,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst clearPagesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite1,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesFromURLOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.sourceUrl,\n    Parameters.sourceRange0,\n    Parameters.sourceContentMD5,\n    Parameters.contentLength,\n    Parameters.range1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesDiffOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeout,\n    Parameters.prevsnapshot,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst resizeOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.blobContentLength,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst updateSequenceNumberOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.sequenceNumberAction,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyIncrementalOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp13\n  ],\n  headerParameters: [\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/appendBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a AppendBlob. */\nexport class AppendBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a AppendBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobCreateResponse>\n   */\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams): Promise<Models.AppendBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  create(contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, options: Models.AppendBlobCreateOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.AppendBlobCreateResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob.\n   * The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobAppendBlockResponse>\n   */\n  appendBlock(body: msRest.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams): Promise<Models.AppendBlobAppendBlockResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  appendBlock(body: msRest.HttpRequestBody, contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendBlock(body: msRest.HttpRequestBody, contentLength: number, options: Models.AppendBlobAppendBlockOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  appendBlock(body: msRest.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      appendBlockOperationSpec,\n      callback) as Promise<Models.AppendBlobAppendBlockResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url. The Append Block operation is permitted only if\n   * the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on\n   * version 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobAppendBlockFromUrlResponse>\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options?: Models.AppendBlobAppendBlockFromUrlOptionalParams): Promise<Models.AppendBlobAppendBlockFromUrlResponse>;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options: Models.AppendBlobAppendBlockFromUrlOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options?: Models.AppendBlobAppendBlockFromUrlOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.AppendBlobAppendBlockFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sourceUrl,\n        contentLength,\n        options\n      },\n      appendBlockFromUrlOperationSpec,\n      callback) as Promise<Models.AppendBlobAppendBlockFromUrlResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType1,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst appendBlockOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp14\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst appendBlockFromUrlOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp14\n  ],\n  headerParameters: [\n    Parameters.sourceUrl,\n    Parameters.sourceRange1,\n    Parameters.sourceContentMD5,\n    Parameters.contentLength,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Block,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  BlockList,\n  BlockLookupList,\n  StorageError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blockBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a BlockBlob. */\nexport class BlockBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a BlockBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an\n   * existing block blob overwrites any existing metadata on the blob. Partial updates are not\n   * supported with Put Blob; the content of the existing blob is overwritten with the content of the\n   * new blob. To perform a partial update of the content of a block blob, use the Put Block List\n   * operation.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobUploadResponse>\n   */\n  upload(body: msRest.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams): Promise<Models.BlockBlobUploadResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  upload(body: msRest.HttpRequestBody, contentLength: number, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  upload(body: msRest.HttpRequestBody, contentLength: number, options: Models.BlockBlobUploadOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  upload(body: msRest.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadOperationSpec,\n      callback) as Promise<Models.BlockBlobUploadResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockResponse>\n   */\n  stageBlock(blockId: string, contentLength: number, body: msRest.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams): Promise<Models.BlockBlobStageBlockResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: msRest.HttpRequestBody, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: msRest.HttpRequestBody, options: Models.BlockBlobStageBlockOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  stageBlock(blockId: string, contentLength: number, body: msRest.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        body,\n        options\n      },\n      stageBlockOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the\n   * contents are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockFromURLResponse>\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams): Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options: Models.BlockBlobStageBlockFromURLOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        sourceUrl,\n        options\n      },\n      stageBlockFromURLOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up\n   * the blob. In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior Put Block operation. You can call Put Block List to update a blob by\n   * uploading only those blocks that have changed, then committing the new and existing blocks\n   * together. You can do this by specifying whether to commit a block from the committed block list\n   * or from the uncommitted block list, or to commit the most recently uploaded version of the\n   * block, whichever list it may belong to.\n   * @param blocks\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobCommitBlockListResponse>\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams): Promise<Models.BlockBlobCommitBlockListResponse>;\n  /**\n   * @param blocks\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param blocks\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options: Models.BlockBlobCommitBlockListOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<Models.BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blocks,\n        options\n      },\n      commitBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobCommitBlockListResponse>;\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a\n   * block blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobGetBlockListResponse>\n   */\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams): Promise<Models.BlockBlobGetBlockListResponse>;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, callback: msRest.ServiceCallback<Models.BlockList>): void;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, options: Models.BlockBlobGetBlockListOptionalParams, callback: msRest.ServiceCallback<Models.BlockList>): void;\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams | msRest.ServiceCallback<Models.BlockList>, callback?: msRest.ServiceCallback<Models.BlockList>): Promise<Models.BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listType,\n        options\n      },\n      getBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobGetBlockListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers, true);\nconst uploadOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType2,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeout,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockFromURLOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeout,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.sourceUrl,\n    Parameters.sourceRange1,\n    Parameters.sourceContentMD5,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst commitBlockListOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.comp16\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"blocks\",\n    mapper: {\n      ...Mappers.BlockLookupList,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getBlockListOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.listType,\n    Parameters.timeout,\n    Parameters.comp16\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError\n    }\n  },\n  isXML: true,\n  serializer\n};\n","// tslint:disable:max-line-length\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n *\n * @export\n * @interface IRange\n */\nexport interface IRange {\n  /**\n   * StartByte, larger than or equal 0.\n   *\n   * @type {string}\n   * @memberof IRange\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   *\n   * @type {string}\n   * @memberof IRange\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {IRange} iRange\n * @returns {string}\n */\nexport function rangeToString(iRange: IRange): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`IRange.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `IRange.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n","import {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/ms-rest-js\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * BrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * BrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class BrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class BrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of BrowserPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof BrowserPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof BrowserPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { BrowserPolicy } from \"./policies/BrowserPolicy\";\n\n/**\n * BrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n *\n * @export\n * @class BrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class BrowserPolicyFactory implements RequestPolicyFactory {\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): BrowserPolicy {\n    return new BrowserPolicy(nextPolicy, options);\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"1.0.0\";\n\nexport class StorageClientContext extends msRest.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the targe of the desired\n   * operation.\n   * @param [options] The parameter options\n   */\n  constructor(url: string, options?: msRest.ServiceClientOptions) {\n    if (url == undefined) {\n      throw new Error(\"'url' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.version = '2018-11-09';\n    this.baseUri = \"{url}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.url = url;\n  }\n}\n","import {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/ms-rest-js\";\n\nimport { IKeepAliveOptions } from \"../KeepAlivePolicyFactory\";\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n *\n * @class KeepAlivePolicy\n * @extends {BaseRequestPolicy}\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   * \n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {IKeepAliveOptions} [keepAliveOptions]\n   * @memberof KeepAlivePolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, private readonly keepAliveOptions: IKeepAliveOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof KeepAlivePolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { KeepAlivePolicy } from \"./policies/KeepAlivePolicy\";\n\n/**\n * Interface of KeepAlivePolicy options.\n *\n * @export\n * @interface IKeepAliveOptions\n */\nexport interface IKeepAliveOptions {\n  enable: boolean;\n}\n\n/**\n * KeepAlivePolicyFactory is a factory class helping generating KeepAlivePolicy objects.\n *\n * @export\n * @class KeepAlivePolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class KeepAlivePolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates an instance of KeepAlivePolicyFactory.\n   *\n   * @param {IKeepAliveOptions} [telemetry]\n   * @memberof KeepAlivePolicyFactory\n   */\n  constructor(private readonly keepAliveOptions: IKeepAliveOptions = { enable: true }) {}\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): KeepAlivePolicy {\n    return new KeepAlivePolicy(nextPolicy, options, this.keepAliveOptions);\n  }\n}\n","import {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/ms-rest-js\";\n\nimport { IRequestLogOptions } from \"../LoggingPolicyFactory\";\nimport { HTTPURLConnection, URLConstants } from \"../utils/constants\";\nimport { getURLParameter, setURLParameter } from \"../utils/utils.common\";\n\n// Default values of IRetryOptions\nconst DEFAULT_REQUEST_LOG_OPTIONS: IRequestLogOptions = {\n  logWarningIfTryOverThreshold: 3000\n};\n\n/**\n * LoggingPolicy is a policy used to log requests.\n *\n * @class LoggingPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class LoggingPolicy extends BaseRequestPolicy {\n  private tryCount: number = 0;\n  private operationStartTime: Date = new Date();\n  private requestStartTime: Date = new Date();\n\n  private readonly loggingOptions: IRequestLogOptions;\n\n  /**\n   * Creates an instance of LoggingPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {IRequestLogOptions} [loggingOptions=DEFAULT_REQUEST_LOG_OPTIONS]\n   * @memberof LoggingPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    loggingOptions: IRequestLogOptions = DEFAULT_REQUEST_LOG_OPTIONS\n  ) {\n    super(nextPolicy, options);\n    this.loggingOptions = loggingOptions;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof LoggingPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    this.tryCount++;\n    this.requestStartTime = new Date();\n    if (this.tryCount === 1) {\n      this.operationStartTime = this.requestStartTime;\n    }\n\n    let safeURL: string = request.url;\n    if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n      safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n    }\n    this.log(\n      HttpPipelineLogLevel.INFO,\n      `'${safeURL}'==> OUTGOING REQUEST (Try number=${this.tryCount}).`\n    );\n\n    try {\n      const response = await this._nextPolicy.sendRequest(request);\n\n      const requestEndTime = new Date();\n      const requestCompletionTime = requestEndTime.getTime() - this.requestStartTime.getTime();\n      const operationDuration = requestEndTime.getTime() - this.operationStartTime.getTime();\n\n      let currentLevel: HttpPipelineLogLevel = HttpPipelineLogLevel.INFO;\n      let logMessage: string = \"\";\n      if (this.shouldLog(HttpPipelineLogLevel.INFO)) {\n        // Assume success and default to informational logging.\n        logMessage = \"Successfully Received Response. \";\n      }\n\n      // If the response took too long, we'll upgrade to warning.\n      if (requestCompletionTime >= this.loggingOptions.logWarningIfTryOverThreshold) {\n        // Log a warning if the try duration exceeded the specified threshold.\n        if (this.shouldLog(HttpPipelineLogLevel.WARNING)) {\n          currentLevel = HttpPipelineLogLevel.WARNING;\n          logMessage = `SLOW OPERATION. Duration > ${\n            this.loggingOptions.logWarningIfTryOverThreshold\n          } ms. `;\n        }\n      }\n\n      if (\n        (response.status >= 400 &&\n          response.status <= 499 &&\n          (response.status !== HTTPURLConnection.HTTP_NOT_FOUND &&\n            response.status !== HTTPURLConnection.HTTP_CONFLICT &&\n            response.status !== HTTPURLConnection.HTTP_PRECON_FAILED &&\n            response.status !== HTTPURLConnection.HTTP_RANGE_NOT_SATISFIABLE)) ||\n        (response.status >= 500 && response.status <= 509)\n      ) {\n        const errorString = `REQUEST ERROR: HTTP request failed with status code: ${\n          response.status\n        }. `;\n        logMessage = errorString;\n\n        currentLevel = HttpPipelineLogLevel.ERROR;\n      }\n\n      const messageInfo = `Request try:${this.tryCount}, status:${\n        response.status\n      } request duration:${requestCompletionTime} ms, operation duration:${operationDuration} ms\\n`;\n      this.log(currentLevel, logMessage + messageInfo);\n\n      return response;\n    } catch (err) {\n      this.log(\n        HttpPipelineLogLevel.ERROR,\n        `Unexpected failure attempting to make request. Error message: ${err.message}`\n      );\n      throw err;\n    }\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { LoggingPolicy } from \"./policies/LoggingPolicy\";\n\n/**\n * RequestLogOptions configures the retry policy's behavior.\n *\n * @export\n * @interface IRequestLogOptions\n */\nexport interface IRequestLogOptions {\n  /**\n   * LogWarningIfTryOverThreshold logs a warning if a tried operation takes longer than the specified\n   * duration in ms. Default is 3000ms.\n   * @type {number}\n   * @memberof IRequestLogOptions\n   */\n  logWarningIfTryOverThreshold: number;\n}\n\n/**\n * LoggingPolicyFactory is a factory class helping generating LoggingPolicy objects.\n *\n * @export\n * @class LoggingPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class LoggingPolicyFactory implements RequestPolicyFactory {\n  private readonly loggingOptions?: IRequestLogOptions;\n\n  constructor(loggingOptions?: IRequestLogOptions) {\n    this.loggingOptions = loggingOptions;\n  }\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): LoggingPolicy {\n    return new LoggingPolicy(nextPolicy, options, this.loggingOptions);\n  }\n}\n","import {\n  BaseRequestPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpPipelineLogger as IHttpPipelineLogger,\n  HttpPipelineLogLevel,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource\n} from \"@azure/ms-rest-js\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  IHttpClient,\n  IHttpPipelineLogger,\n  HttpHeaders,\n  HttpPipelineLogLevel,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Option interface for Pipeline constructor.\n *\n * @export\n * @interface IPipelineOptions\n */\nexport interface IPipelineOptions {\n  logger?: IHttpPipelineLogger;\n  HTTPClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling StorageURL.newPipeline().\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n * Refer to StorageURL.newPipeline() and provided policies as reference before\n * implementing your customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nexport class Pipeline {\n  public readonly factories: RequestPolicyFactory[];\n  public readonly options: IPipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param {RequestPolicyFactory[]} factories\n   * @param {IPipelineOptions} [options={}]\n   * @memberof Pipeline\n   */\n  constructor(factories: RequestPolicyFactory[], options: IPipelineOptions = {}) {\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which required by\n   * ServiceClient constructor.\n   *\n   * @returns {ServiceClientOptions}\n   * @memberof Pipeline\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.HTTPClient,\n      httpPipelineLogger: this.options.logger,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n","import {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  HttpPipelineLogLevel,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource,\n} from \"@azure/ms-rest-js\";\n\nimport { IRetryOptions } from \"../RetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {IRetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions?: IRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): RetryPolicy => {\n      return new RetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport enum RetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of IRetryOptions\nconst DEFAULT_RETRY_OPTIONS: IRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: RetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR);\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class RetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   *\n   * @private\n   * @type {IRetryOptions}\n   * @memberof RetryPolicy\n   */\n  private readonly retryOptions: IRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {IRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n   * @memberof RetryPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: IRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof RetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @param {HttpOperationResponse} response\n   * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof RetryPolicy\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      this.logf(\n        HttpPipelineLogLevel.INFO,\n        `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`\n      );\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      this.logf(\n        HttpPipelineLogLevel.ERROR,\n        `RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`\n      );\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return await this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @protected\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {HttpOperationResponse} [response]\n   * @param {RestError} [err]\n   * @returns {boolean}\n   * @memberof RetryPolicy\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      this.logf(\n        HttpPipelineLogLevel.INFO,\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase().includes(retriableError))\n        ) {\n          this.logf(\n            HttpPipelineLogLevel.INFO,\n            `RetryPolicy: Network error ${retriableError} found, will retry.`\n          );\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        this.logf(HttpPipelineLogLevel.INFO, `RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        this.logf(\n          HttpPipelineLogLevel.INFO,\n          `RetryPolicy: Will retry for status code ${statusCode}.`\n        );\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * This is to log for debugging purposes only.\n   * Comment/uncomment as necessary for releasing/debugging.\n   *\n   * @private\n   * @param {HttpPipelineLogLevel} level\n   * @param {string} message\n   * @memberof RetryPolicy\n   */\n  // tslint:disable-next-line:variable-name\n  private logf(_level: HttpPipelineLogLevel, _message: string) {\n    // this.log(_level, _message);\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @private\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {AbortSignalLike} [abortSignal]\n   * @returns\n   * @memberof RetryPolicy\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case RetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case RetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    this.logf(HttpPipelineLogLevel.INFO, `RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { RetryPolicy, RetryPolicyType } from \"./policies/RetryPolicy\";\n\nexport { RetryPolicyType } from \"./policies/RetryPolicy\";\n\n/**\n * Retry options interface.\n *\n * @export\n * @interface IRetryOptions\n */\nexport interface IRetryOptions {\n  /**\n   * Optional. RetryPolicyType, default is exponential retry policy.\n   *\n   * @type {RetryPolicyType}\n   * @memberof RetryOptions\n   */\n  readonly retryPolicyType?: RetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof IRetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   *\n   * @type {number}\n   * @memberof IRetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof IRetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof IRetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   *\n   * @type {string}\n   * @memberof IRetryOptions\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * RetryPolicyFactory is a factory class helping generating RetryPolicy objects.\n *\n * @export\n * @class RetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class RetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: IRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicyFactory.\n   * @param {IRetryOptions} [retryOptions]\n   * @memberof RetryPolicyFactory\n   */\n  constructor(retryOptions?: IRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): RetryPolicy {\n    return new RetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","import {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/ms-rest-js\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   *\n   * @type {string}\n   * @memberof TelemetryPolicy\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {ITelemetryOptions} [telemetry]\n   * @memberof TelemetryPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof TelemetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","import {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"@azure/ms-rest-js\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * Interface of TelemetryPolicy options.\n *\n * @export\n * @interface ITelemetryOptions\n */\nexport interface ITelemetryOptions {\n  value: string;\n}\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating TelemetryPolicy objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  private telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param {ITelemetryOptions} [telemetry]\n   * @memberof TelemetryPolicyFactory\n   */\n  constructor(telemetry?: ITelemetryOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.value;\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. Azure-Storage/10.0.0\n      const libInfo = `Azure-Storage/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","import {\n  BaseRequestPolicy,\n  generateUuid,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/ms-rest-js\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * UniqueRequestIDPolicy generates an UUID as x-ms-request-id header value.\n *\n * @class UniqueRequestIDPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class UniqueRequestIDPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of UniqueRequestIDPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof UniqueRequestIDPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof UniqueRequestIDPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(HeaderConstants.X_MS_CLIENT_REQUEST_ID)) {\n      request.headers.set(HeaderConstants.X_MS_CLIENT_REQUEST_ID, generateUuid());\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { UniqueRequestIDPolicy } from \"./policies/UniqueRequestIDPolicy\";\n\n/**\n * UniqueRequestIDPolicyFactory is a factory class helping generating UniqueRequestIDPolicy objects.\n *\n * @export\n * @class UniqueRequestIDPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class UniqueRequestIDPolicyFactory implements RequestPolicyFactory {\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): UniqueRequestIDPolicy {\n    return new UniqueRequestIDPolicy(nextPolicy, options);\n  }\n}\n","import { deserializationPolicy, RequestPolicyFactory } from \"@azure/ms-rest-js\";\n\nimport { BrowserPolicyFactory } from \"./BrowserPolicyFactory\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { IKeepAliveOptions, KeepAlivePolicyFactory } from \"./KeepAlivePolicyFactory\";\nimport { LoggingPolicyFactory } from \"./LoggingPolicyFactory\";\nimport { IHttpClient, IHttpPipelineLogger, Pipeline } from \"./Pipeline\";\nimport { IRetryOptions, RetryPolicyFactory } from \"./RetryPolicyFactory\";\nimport { ITelemetryOptions, TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { UniqueRequestIDPolicyFactory } from \"./UniqueRequestIDPolicyFactory\";\nimport { escapeURLPath } from \"./utils/utils.common\";\n\nexport { deserializationPolicy };\n\n/**\n * Option interface for Pipeline.newPipeline method.\n *\n * @export\n * @interface INewPipelineOptions\n */\nexport interface INewPipelineOptions {\n  /**\n   * Telemetry configures the built-in telemetry policy behavior.\n   *\n   * @type {ITelemetryOptions}\n   * @memberof INewPipelineOptions\n   */\n  telemetry?: ITelemetryOptions;\n\n  /**\n   * Retry options.\n   *\n   * @type {IRetryOptions}\n   * @memberof INewPipelineOptions\n   */\n  retryOptions?: IRetryOptions;\n\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   *\n   * @type {IKeepAliveOptions}\n   * @memberof INewPipelineOptions\n   */\n  keepAliveOptions?: IKeepAliveOptions;\n\n  logger?: IHttpPipelineLogger;\n  httpClient?: IHttpClient;\n}\n\n/**\n * A ServiceURL represents a based URL class for ServiceURL, ContainerURL and etc.\n *\n * @export\n * @class StorageURL\n */\nexport abstract class StorageURL {\n  /**\n   * A static method used to create a new Pipeline object with Credential provided.\n   *\n   * @static\n   * @param {Credential} credential Such as AnonymousCredential, SharedKeyCredential or TokenCredential.\n   * @param {INewPipelineOptions} [pipelineOptions] Optional. Options.\n   * @returns {Pipeline} A new Pipeline object.\n   * @memberof Pipeline\n   */\n  public static newPipeline(\n    credential: Credential,\n    pipelineOptions: INewPipelineOptions = {}\n  ): Pipeline {\n    // Order is important. Closer to the API at the top & closer to the network at the bottom.\n    // The credential's policy factory must appear close to the wire so it can sign any\n    // changes made by other factories (like UniqueRequestIDPolicyFactory)\n    const factories: RequestPolicyFactory[] = [\n      new KeepAlivePolicyFactory(pipelineOptions.keepAliveOptions),\n      new TelemetryPolicyFactory(pipelineOptions.telemetry),\n      new UniqueRequestIDPolicyFactory(),\n      new BrowserPolicyFactory(),\n      deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n      new RetryPolicyFactory(pipelineOptions.retryOptions),\n      new LoggingPolicyFactory(),\n      credential\n    ];\n\n    return new Pipeline(factories, {\n      HTTPClient: pipelineOptions.httpClient,\n      logger: pipelineOptions.logger\n    });\n  }\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   * @type {Pipeline}\n   * @memberof StorageURL\n   */\n  public readonly pipeline: Pipeline;\n\n  /**\n   * Encoded URL string value.\n   *\n   * @type {string}\n   * @memberof StorageURL\n   */\n  public readonly url: string;\n\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   *\n   * @protected\n   * @type {StorageClient}\n   * @memberof StorageURL\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageURL.\n   * @param {string} url\n   * @param {Pipeline} pipeline\n   * @memberof StorageURL\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      this.url,\n      pipeline.toServiceClientOptions()\n    );\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","import { isNode, TransferProgressEvent } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { ContainerURL } from \"./ContainerURL\";\nimport * as Models from \"./generated/src/models\";\nimport { Blob } from \"./generated/src/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { IBlobAccessConditions, IMetadata } from \"./models\";\nimport { Pipeline } from \"./Pipeline\";\nimport { StorageURL } from \"./StorageURL\";\nimport { DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS, URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n\nexport interface IBlobDownloadOptions {\n  snapshot?: string;\n  rangeGetContentMD5?: boolean;\n  blobAccessConditions?: IBlobAccessConditions;\n  progress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileURL.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   *\n   * @type {number}\n   * @memberof IBlobDownloadOptions\n   */\n  maxRetryRequests?: number;\n}\n\nexport interface IBlobGetPropertiesOptions {\n  blobAccessConditions?: IBlobAccessConditions;\n}\n\nexport interface IBlobDeleteOptions {\n  blobAccessConditions?: IBlobAccessConditions;\n  deleteSnapshots?: Models.DeleteSnapshotsOptionType;\n}\n\nexport interface IBlobSetHTTPHeadersOptions {\n  blobAccessConditions?: IBlobAccessConditions;\n}\n\nexport interface IBlobSetMetadataOptions {\n  blobAccessConditions?: IBlobAccessConditions;\n}\n\nexport interface IBlobAcquireLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobReleaseLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobRenewLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobChangeLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobBreakLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobCreateSnapshotOptions {\n  metadata?: IMetadata;\n  blobAccessConditions?: IBlobAccessConditions;\n}\n\nexport interface IBlobStartCopyFromURLOptions {\n  metadata?: IMetadata;\n  blobAccessConditions?: IBlobAccessConditions;\n  sourceModifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobAbortCopyFromURLOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\nexport interface IBlobSyncCopyFromURLOptions {\n  metadata?: IMetadata;\n  blobAccessConditions?: IBlobAccessConditions;\n  sourceModifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IBlobSetTierOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * A BlobURL represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n *\n * @export\n * @class BlobURL\n * @extends {StorageURL}\n */\nexport class BlobURL extends StorageURL {\n  /**\n   * Creates a BlobURL object from an ContainerURL object.\n   *\n   * @static\n   * @param {ContainerURL} containerURL A ContainerURL object\n   * @param {string} blobName A blob name\n   * @returns\n   * @memberof BlobURL\n   */\n  public static fromContainerURL(containerURL: ContainerURL, blobName: string) {\n    return new BlobURL(\n      appendToURLPath(containerURL.url, encodeURIComponent(blobName)),\n      containerURL.pipeline\n    );\n  }\n\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * @private\n   * @type {Blobs}\n   * @memberof BlobURL\n   */\n  private blobContext: Blob;\n\n  /**\n   * Creates an instance of BlobURL.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.blobContext = new Blob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlobURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {BlobURL}\n   * @memberof BlobURL\n   */\n  public withPipeline(pipeline: Pipeline): BlobURL {\n    return new BlobURL(this.url, pipeline);\n  }\n\n  /**\n   * Creates a new BlobURL object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot\n   * @returns {BlobURL} A new BlobURL object identical to the source but with the specified snapshot timestamp\n   * @memberof BlobURL\n   */\n  public withSnapshot(snapshot: string): BlobURL {\n    return new BlobURL(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} offset From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {IBlobDownloadOptions} [options]\n   * @returns {Promise<Models.BlobDownloadResponse>}\n   * @memberof BlobURL\n   */\n  public async download(\n    aborter: Aborter,\n    offset: number,\n    count?: number,\n    options: IBlobDownloadOptions = {}\n  ): Promise<Models.BlobDownloadResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    options.blobAccessConditions.modifiedAccessConditions =\n      options.blobAccessConditions.modifiedAccessConditions || {};\n\n    const res = await this.blobContext.download({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n      onDownloadProgress: isNode ? undefined : options.progress,\n      range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n      rangeGetContentMD5: options.rangeGetContentMD5,\n      snapshot: options.snapshot\n    });\n\n    // Return browser response immediately\n    if (!isNode) {\n      return res;\n    }\n\n    // We support retrying when download stream unexpected ends in Node.js runtime\n    // Following code shouldn't be bundled into browser build, however some\n    // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n    // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n    // The config is in package.json \"browser\" field\n    if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n      // TODO: Default value or make it a required parameter?\n      options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n    }\n\n    if (res.contentLength === undefined) {\n      throw new RangeError(`File download response doesn't contain valid content length header`);\n    }\n\n    if (!res.eTag) {\n      throw new RangeError(`File download response doesn't contain valid etag header`);\n    }\n\n    return new BlobDownloadResponse(\n      aborter,\n      res,\n      async (start: number): Promise<NodeJS.ReadableStream> => {\n        const updatedOptions: Models.BlobDownloadOptionalParams = {\n          leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions,\n          modifiedAccessConditions: {\n            ifMatch: options.blobAccessConditions!.modifiedAccessConditions!.ifMatch || res.eTag,\n            ifModifiedSince: options.blobAccessConditions!.modifiedAccessConditions!\n              .ifModifiedSince,\n            ifNoneMatch: options.blobAccessConditions!.modifiedAccessConditions!.ifNoneMatch,\n            ifUnmodifiedSince: options.blobAccessConditions!.modifiedAccessConditions!\n              .ifUnmodifiedSince\n          },\n          range: rangeToString({\n            count: offset + res.contentLength! - start,\n            offset: start\n          }),\n          snapshot: options.snapshot\n        };\n\n        // Debug purpose only\n        // console.log(\n        //   `Read from internal stream, range: ${\n        //     updatedOptions.range\n        //   }, options: ${JSON.stringify(updatedOptions)}`\n        // );\n\n        return (await this.blobContext.download({\n          abortSignal: aborter,\n          ...updatedOptions\n        })).readableStreamBody!;\n      },\n      offset,\n      res.contentLength!,\n      {\n        maxRetryRequests: options.maxRetryRequests,\n        progress: options.progress\n      }\n    );\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IBlobGetPropertiesOptions} [options]\n   * @returns {Promise<Models.BlobGetPropertiesResponse>}\n   * @memberof BlobURL\n   */\n  public async getProperties(\n    aborter: Aborter,\n    options: IBlobGetPropertiesOptions = {}\n  ): Promise<Models.BlobGetPropertiesResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.getProperties({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IBlobDeleteOptions} [options]\n   * @returns {Promise<Models.BlobDeleteResponse>}\n   * @memberof BlobURL\n   */\n  public async delete(\n    aborter: Aborter,\n    options: IBlobDeleteOptions = {}\n  ): Promise<Models.BlobDeleteResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.deleteMethod({\n      abortSignal: aborter,\n      deleteSnapshots: options.deleteSnapshots,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @returns {Promise<Models.BlobUndeleteResponse>}\n   * @memberof BlobURL\n   */\n  public async undelete(aborter: Aborter): Promise<Models.BlobUndeleteResponse> {\n    return this.blobContext.undelete({\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specificed blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n   *                                                   the specificed blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   * @param {IBlobSetHTTPHeadersOptions} [options]\n   * @returns {Promise<Models.BlobSetHTTPHeadersResponse>}\n   * @memberof BlobURL\n   */\n  public async setHTTPHeaders(\n    aborter: Aborter,\n    blobHTTPHeaders?: Models.BlobHTTPHeaders,\n    options: IBlobSetHTTPHeadersOptions = {}\n  ): Promise<Models.BlobSetHTTPHeadersResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.setHTTPHeaders({\n      abortSignal: aborter,\n      blobHTTPHeaders,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IMetadata} [metadata] Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param {IBlobSetMetadataOptions} [options]\n   * @returns {Promise<Models.BlobSetMetadataResponse>}\n   * @memberof BlobURL\n   */\n  public async setMetadata(\n    aborter: Aborter,\n    metadata?: IMetadata,\n    options: IBlobSetMetadataOptions = {}\n  ): Promise<Models.BlobSetMetadataResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.setMetadata({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Establishes and manages a lock on a blob for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * In versions prior to 2012-02-12, the lock duration is 60 seconds.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n   * @param {number} duration The lock duration can be 15 to 60 seconds, or can be infinite\n   * @param {IBlobAcquireLeaseOptions} [options]\n   * @returns {Promise<Models.BlobAcquireLeaseResponse>}\n   * @memberof BlobURL\n   */\n  public async acquireLease(\n    aborter: Aborter,\n    proposedLeaseId: string,\n    duration: number,\n    options: IBlobAcquireLeaseOptions = {}\n  ): Promise<Models.BlobAcquireLeaseResponse> {\n    return this.blobContext.acquireLease({\n      abortSignal: aborter,\n      duration,\n      modifiedAccessConditions: options.modifiedAccessConditions,\n      proposedLeaseId\n    });\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may immediately\n   * acquire a lease against the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {IBlobReleaseLeaseOptions} [options]\n   * @returns {Promise<Models.BlobReleaseLeaseResponse>}\n   * @memberof BlobURL\n   */\n  public async releaseLease(\n    aborter: Aborter,\n    leaseId: string,\n    options: IBlobReleaseLeaseOptions = {}\n  ): Promise<Models.BlobReleaseLeaseResponse> {\n    return this.blobContext.releaseLease(leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To renew an existing lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {IBlobRenewLeaseOptions} [options]\n   * @returns {Promise<Models.BlobRenewLeaseResponse>}\n   * @memberof BlobURL\n   */\n  public async renewLease(\n    aborter: Aborter,\n    leaseId: string,\n    options: IBlobRenewLeaseOptions = {}\n  ): Promise<Models.BlobRenewLeaseResponse> {\n    return this.blobContext.renewLease(leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To change the ID of an existing lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {string} proposedLeaseId\n   * @param {IBlobChangeLeaseOptions} [options]\n   * @returns {Promise<Models.BlobChangeLeaseResponse>}\n   * @memberof BlobURL\n   */\n  public async changeLease(\n    aborter: Aborter,\n    leaseId: string,\n    proposedLeaseId: string,\n    options: IBlobChangeLeaseOptions = {}\n  ): Promise<Models.BlobChangeLeaseResponse> {\n    return this.blobContext.changeLease(leaseId, proposedLeaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} [breakPeriod]\n   * @param {IBlobBreakLeaseOptions} [options]\n   * @returns {Promise<Models.BlobBreakLeaseResponse>}\n   * @memberof BlobURL\n   */\n  public async breakLease(\n    aborter: Aborter,\n    breakPeriod?: number,\n    options: IBlobBreakLeaseOptions = {}\n  ): Promise<Models.BlobBreakLeaseResponse> {\n    return this.blobContext.breakLease({\n      abortSignal: aborter,\n      breakPeriod,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IBlobCreateSnapshotOptions} [options]\n   * @returns {Promise<Models.BlobCreateSnapshotResponse>}\n   * @memberof BlobURL\n   */\n  public async createSnapshot(\n    aborter: Aborter,\n    options: IBlobCreateSnapshotOptions = {}\n  ): Promise<Models.BlobCreateSnapshotResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    return this.blobContext.createSnapshot({\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} copySource\n   * @param {IBlobStartCopyFromURLOptions} [options]\n   * @returns {Promise<Models.BlobStartCopyFromURLResponse>}\n   * @memberof BlobURL\n   */\n  public async startCopyFromURL(\n    aborter: Aborter,\n    copySource: string,\n    options: IBlobStartCopyFromURLOptions = {}\n  ): Promise<Models.BlobStartCopyFromURLResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n\n    return this.blobContext.startCopyFromURL(copySource, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n      sourceModifiedAccessConditions: {\n        sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n        sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n        sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n        sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n      }\n    });\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} copyId\n   * @param {IBlobAbortCopyFromURLOptions} [options]\n   * @returns {Promise<Models.BlobAbortCopyFromURLResponse>}\n   * @memberof BlobURL\n   */\n  public async abortCopyFromURL(\n    aborter: Aborter,\n    copyId: string,\n    options: IBlobAbortCopyFromURLOptions = {}\n  ): Promise<Models.BlobAbortCopyFromURLResponse> {\n    return this.blobContext.abortCopyFromURL(copyId, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} copySource The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param {IBlobSyncCopyFromURLOptions} [options={}]\n   * @returns {Promise<Models.BlobCopyFromURLResponse>}\n   * @memberof BlobURL\n   */\n  public async syncCopyFromURL(\n    aborter: Aborter,\n    copySource: string,\n    options: IBlobSyncCopyFromURLOptions = {}\n  ): Promise<Models.BlobCopyFromURLResponse> {\n    options.blobAccessConditions = options.blobAccessConditions || {};\n    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n\n    return this.blobContext.copyFromURL(copySource, {\n      abortSignal: aborter,\n      metadata: options.metadata,\n      leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n      sourceModifiedAccessConditions: {\n        sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n        sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n        sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n        sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n      }\n    });\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.AccessTier} tier\n   * @param {IBlobSetTierOptions} [options]\n   * @returns {Promise<Models.BlobsSetTierResponse>}\n   * @memberof BlobURL\n   */\n  public async setTier(\n    aborter: Aborter,\n    tier: Models.AccessTier,\n    options: IBlobSetTierOptions = {}\n  ): Promise<Models.BlobSetTierResponse> {\n    return await this.blobContext.setTier(tier, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n  }\n}\n","import { HttpRequestBody, TransferProgressEvent } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlobURL } from \"./BlobURL\";\nimport { ContainerURL } from \"./ContainerURL\";\nimport * as Models from \"./generated/src/models\";\nimport { AppendBlob } from \"./generated/src/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { IAppendBlobAccessConditions, IBlobAccessConditions, IMetadata } from \"./models\";\nimport { Pipeline } from \"./Pipeline\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n\nexport interface IAppendBlobCreateOptions {\n  accessConditions?: IBlobAccessConditions;\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  metadata?: IMetadata;\n}\n\nexport interface IAppendBlobAppendBlockOptions {\n  accessConditions?: IAppendBlobAccessConditions;\n  progress?: (progress: TransferProgressEvent) => void;\n  transactionalContentMD5?: Uint8Array;\n}\n\nexport interface IAppendBlobAppendBlockFromURLOptions {\n  accessConditions?: IAppendBlobAccessConditions;\n  sourceModifiedAccessConditions?: Models.ModifiedAccessConditions;\n  sourceContentMD5?: Uint8Array;\n}\n\n/**\n * AppendBlobURL defines a set of operations applicable to append blobs.\n *\n * @export\n * @class AppendBlobURL\n * @extends {StorageURL}\n */\nexport class AppendBlobURL extends BlobURL {\n  /**\n   * Creates a AppendBlobURL object from ContainerURL instance.\n   *\n   * @static\n   * @param {ContainerURL} containerURL A ContainerURL object\n   * @param {string} blobName An append blob name\n   * @returns {AppendBlobURL}\n   * @memberof AppendBlobURL\n   */\n  public static fromContainerURL(containerURL: ContainerURL, blobName: string): AppendBlobURL {\n    return new AppendBlobURL(\n      appendToURLPath(containerURL.url, encodeURIComponent(blobName)),\n      containerURL.pipeline\n    );\n  }\n\n  /**\n   * Creates a AppendBlobURL object from BlobURL instance.\n   *\n   * @static\n   * @param {BlobURL} blobURL\n   * @returns {AppendBlobURL}\n   * @memberof AppendBlobURL\n   */\n  public static fromBlobURL(blobURL: BlobURL): AppendBlobURL {\n    return new AppendBlobURL(blobURL.url, blobURL.pipeline);\n  }\n\n  /**\n   * appendBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {AppendBlobs}\n   * @memberof AppendBlobURL\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   * Creates an instance of AppendBlobURL.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof AppendBlobURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.appendBlobContext = new AppendBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new AppendBlobURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {AppendBlobURL}\n   * @memberof AppendBlobURL\n   */\n  public withPipeline(pipeline: Pipeline): AppendBlobURL {\n    return new AppendBlobURL(this.url, pipeline);\n  }\n\n  /**\n   * Creates a new AppendBlobURL object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot\n   * @returns {AppendBlobURL}\n   * @memberof AppendBlobURL\n   */\n  public withSnapshot(snapshot: string): AppendBlobURL {\n    return new AppendBlobURL(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IAppendBlobCreateOptions} [options]\n   * @returns {Promise<Models.AppendBlobsCreateResponse>}\n   * @memberof AppendBlobURL\n   */\n  public async create(\n    aborter: Aborter,\n    options: IAppendBlobCreateOptions = {}\n  ): Promise<Models.AppendBlobCreateResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.appendBlobContext.create(0, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {HttpRequestBody} body\n   * @param {number} contentLength Length of the body in bytes\n   * @param {IAppendBlobAppendBlockOptions} [options]\n   * @returns {Promise<Models.AppendBlobsAppendBlockResponse>}\n   * @memberof AppendBlobURL\n   */\n  public async appendBlock(\n    aborter: Aborter,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: IAppendBlobAppendBlockOptions = {}\n  ): Promise<Models.AppendBlobAppendBlockResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.appendBlobContext.appendBlock(body, contentLength, {\n      abortSignal: aborter,\n      appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} sourceURL \n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param {number} sourceOffset Offset in source to be appended\n   * @param {number} count Number of bytes to be appended as a block\n   * @param {IAppendBlobAppendBlockFromURLOptions} [options={}]\n   * @returns {Promise<Models.AppendBlobAppendBlockFromUrlResponse>}\n   * @memberof AppendBlobURL\n   */\n  public async appendBlockFromURL(\n    aborter: Aborter,\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: IAppendBlobAppendBlockFromURLOptions = {}\n  ): Promise<Models.AppendBlobAppendBlockFromUrlResponse> {\n    options.accessConditions = options.accessConditions || {};\n    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n    \n    return this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n      abortSignal: aborter,\n      sourceRange: rangeToString({offset: sourceOffset, count}),\n      sourceContentMD5: options.sourceContentMD5,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      sourceModifiedAccessConditions: {\n        sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n        sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n        sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n        sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n      }\n    })\n  }\n}\n","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link IBlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class BlobSASPermissions\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {BlobSASPermissions}\n   * @memberof BlobSASPermissions\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns {string} A string which represents the BlobSASPermissions\n   * @memberof BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link IBlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class ContainerSASPermissions\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns\n   * @memberof ContainerSASPermissions\n   */\n  public static parse(permissions: string) {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @returns {string}\n   * @memberof ContainerSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","import { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/ms-rest-js\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof CredentialPolicy\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in sendRequest().\n   *\n   * @protected\n   * @abstract\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof CredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","import { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/ms-rest-js\";\nimport { SharedKeyCredential } from \"../credentials/SharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * SharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class SharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class SharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to SharedKeyCredential which generates SharedKeyCredentialPolicy\n   *\n   * @type {SharedKeyCredential}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private readonly factory: SharedKeyCredential;\n\n  /**\n   * Creates an instance of SharedKeyCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {SharedKeyCredential} factory\n   * @memberof SharedKeyCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: SharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // Workaround for https://github.com/axios/axios/issues/2107\n    // We should always keep the 'content-length' header once the issue is solved\n    // For a better explanation about this workaround, look here: https://github.com/Azure/azure-sdk-for-js/pull/3273\n    if (typeof request.body !== \"function\" && !(request.body && request.onUploadProgress)) {\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n    }\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @private\n   * @param {WebResource} request\n   * @param {string} headerName\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort(\n      (a, b): number => {\n        return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n      }\n    );\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof SharedKeyCredentialPolicy\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (queries.hasOwnProperty(key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","import { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","import * as Crypto from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { SharedKeyCredentialPolicy } from \"../policies/SharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * SharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class SharedKeyCredential\n * @extends {Credential}\n */\nexport class SharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof SharedKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   *\n   * @type {Buffer}\n   * @memberof SharedKeyCredential\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of SharedKeyCredential.\n   * @param {string} accountName\n   * @param {string} accountKey\n   * @memberof SharedKeyCredential\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a SharedKeyCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {SharedKeyCredentialPolicy}\n   * @memberof SharedKeyCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): SharedKeyCredentialPolicy {\n    return new SharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof SharedKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return Crypto.createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","import * as Crypto from \"crypto\";\nimport { UserDelegationKey } from '../ServiceURL';\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n *\n * @export\n * @class UserDelegationKeyCredential\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   *\n   * @type {UserDelegationKey}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   *\n   * @private\n   * @type {Buffer}\n   * @memberof UserDelegationKeyCredential\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param {string} accountName\n   * @param {UserDelegationKey} userDelegationKey\n   * @memberof UserDelegationKeyCredential\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n    \n    return Crypto.createHmac(\"sha256\", this.key)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}","import { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { SharedKeyCredential } from \"./credentials/SharedKeyCredential\";\nimport { UserDelegationKeyCredential } from \"./credentials/UserDelegationKeyCredential\";\nimport { IIPRange, ipRangeToString } from \"./IIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { UserDelegationKey } from \"./ServiceURL\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * IBlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n *\n * @export\n * @class IBlobSASSignatureValues\n */\nexport interface IBlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   *\n   * @type {SASProtocol}\n   * @memberof IBlobSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof IBlobSASSignatureValues\n   */\n  startTime?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof IBlobSASSignatureValues\n   */\n  expiryTime?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  permissions?: string;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   *\n   * @type {IIPRange}\n   * @memberof IBlobSASSignatureValues\n   */\n  ipRange?: IIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime is provided.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiryTime are required.\n * You MUST assign value to identifier or expiryTime & permissions manually if you initial with\n * this constructor.\n *\n * @example\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\").toString(), // Required\n *     startTime: new Date(), // Required\n *     expiryTime: tmr, // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HTTPSandHTTP, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // SharedKeyCredential\n * ).toString();\n *\n * @example\n * // Generate service level SAS for a container with identifier\n * // startTime & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerURL.setAccessPolicy(Aborter.none, undefined, [\n *   {\n *     accessPolicy: {\n *       expiry: tmr, // Date type\n *       permission: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       start: now // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // SharedKeyCredential\n * ).toString();\n *\n * @example\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\").toString(), // Required\n *     startTime: new Date(), // Required\n *     expiryTime: tmr, // Optional. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HTTPSandHTTP, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // SharedKeyCredential\n * ).toString();\n *\n * @export\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiryTime are required.\n *\n * @example\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await serviceURL.getUserDelegationKey(aborter, startTime, expiryTime);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\").toString(), // Required\n *     startTime, // Required. Date type\n *     expiryTime, // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HTTPSandHTTP, // Optional\n *     version: \"2018-11-09\" // Must >= 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n *\n * @export\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {UserDelegationKey} userDelegationKey Return value of `ServiceURL.getUserDelegationKey()`\n * @param {string} accountName\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey:\n    | SharedKeyCredential\n    | UserDelegationKey,\n  accountName?: string\n): SASQueryParameters {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof SharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (\n    sharedKeyCredential === undefined &&\n    accountName !== undefined\n  ) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\n      \"Invalid sharedKeyCredential, userDelegationKey or accountName.\"\n    );\n  }\n  \n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20181109(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!\n      );\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\"\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiryTime are required.\n * You MUST assign value to identifier or expiryTime & permissions manually if you initial with\n * this constructor.\n *\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters {\n  if (\n    !blobSASSignatureValues.identifier &&\n    (!blobSASSignatureValues.permissions && !blobSASSignatureValues.expiryTime)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiryTime' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"'version' must be >= '2018-11-09' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n      resource = \"b\";\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startTime\n      ? truncatedISO8061Date(blobSASSignatureValues.startTime, false)\n      : \"\",\n    blobSASSignatureValues.expiryTime\n      ? truncatedISO8061Date(blobSASSignatureValues.expiryTime, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startTime,\n    blobSASSignatureValues.expiryTime,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiryTime are required.\n * You MUST assign value to identifier or expiryTime & permissions manually if you initial with\n * this constructor.\n *\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  sharedKeyCredential: SharedKeyCredential\n): SASQueryParameters {\n  if (\n    !blobSASSignatureValues.identifier &&\n    (!blobSASSignatureValues.permissions && !blobSASSignatureValues.expiryTime)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiryTime' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n      resource = \"b\";\n      if (blobSASSignatureValues.snapshotTime) {\n        resource = \"bs\";\n      }\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startTime\n      ? truncatedISO8061Date(blobSASSignatureValues.startTime, false)\n      : \"\",\n    blobSASSignatureValues.expiryTime\n      ? truncatedISO8061Date(blobSASSignatureValues.expiryTime, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    blobSASSignatureValues.snapshotTime,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startTime,\n    blobSASSignatureValues.expiryTime,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: identifier will be ignored, permissions and expiryTime are required.\n *\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {UserDelegationKeyCredential} userDelegationKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: IBlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiryTime) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiryTime' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n      resource = \"b\";\n      if (blobSASSignatureValues.snapshotTime) {\n        resource = \"bs\";\n      }\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startTime\n      ? truncatedISO8061Date(blobSASSignatureValues.startTime, false)\n      : \"\",\n    blobSASSignatureValues.expiryTime\n      ? truncatedISO8061Date(blobSASSignatureValues.expiryTime, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedOid,\n    userDelegationKeyCredential.userDelegationKey.signedTid,\n    userDelegationKeyCredential.userDelegationKey.signedStart ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStart, false): \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiry ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiry, false): \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    blobSASSignatureValues.snapshotTime,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startTime,\n    blobSASSignatureValues.expiryTime,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n","import { HttpRequestBody, TransferProgressEvent } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlobURL } from \"./BlobURL\";\nimport { ContainerURL } from \"./ContainerURL\";\nimport * as Models from \"./generated/src/models\";\nimport { BlockBlob } from \"./generated/src/operations\";\nimport { IRange, rangeToString } from \"./IRange\";\nimport { IBlobAccessConditions, IMetadata } from \"./models\";\nimport { Pipeline } from \"./Pipeline\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n\nexport interface IBlockBlobUploadOptions {\n  accessConditions?: IBlobAccessConditions;\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  metadata?: IMetadata;\n  progress?: (progress: TransferProgressEvent) => void;\n}\n\nexport interface IBlockBlobStageBlockOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n  progress?: (progress: TransferProgressEvent) => void;\n  transactionalContentMD5?: Uint8Array;\n}\n\nexport interface IBlockBlobStageBlockFromURLOptions {\n  range?: IRange;\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n  sourceContentMD5?: Uint8Array;\n}\n\nexport interface IBlockBlobCommitBlockListOptions {\n  accessConditions?: IBlobAccessConditions;\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  metadata?: IMetadata;\n}\n\nexport interface IBlockBlobGetBlockListOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\n/**\n * BlockBlobURL defines a set of operations applicable to block blobs.\n *\n * @export\n * @class BlockBlobURL\n * @extends {StorageURL}\n */\nexport class BlockBlobURL extends BlobURL {\n  /**\n   * Creates a BlockBlobURL object from ContainerURL instance.\n   *\n   * @static\n   * @param {ContainerURL} containerURL A ContainerURL object\n   * @param {string} blobName A block blob name\n   * @returns {BlockBlobURL}\n   * @memberof BlockBlobURL\n   */\n  public static fromContainerURL(containerURL: ContainerURL, blobName: string): BlockBlobURL {\n    return new BlockBlobURL(\n      appendToURLPath(containerURL.url, encodeURIComponent(blobName)),\n      containerURL.pipeline\n    );\n  }\n\n  /**\n   * Creates a BlockBlobURL object from BlobURL instance.\n   *\n   * @static\n   * @param {BlobURL} blobURL\n   * @returns {BlockBlobURL}\n   * @memberof BlockBlobURL\n   */\n  public static fromBlobURL(blobURL: BlobURL): BlockBlobURL {\n    return new BlockBlobURL(blobURL.url, blobURL.pipeline);\n  }\n\n  /**\n   * blockBlobContext provided by protocol layer.\n   *\n   * @private\n   * @type {BlockBlobs}\n   * @memberof BlockBlobURL\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   * Creates an instance of BlockBlobURL.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlockBlobURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.blockBlobContext = new BlockBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlockBlobURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {BlockBlobURL}\n   * @memberof BlockBlobURL\n   */\n  public withPipeline(pipeline: Pipeline): BlockBlobURL {\n    return new BlockBlobURL(this.url, pipeline);\n  }\n\n  /**\n   * Creates a new BlockBlobURL object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot\n   * @returns {BlockBlobURL}\n   * @memberof BlockBlobURL\n   */\n  public withSnapshot(snapshot: string): BlockBlobURL {\n    return new BlockBlobURL(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use stageBlock and commitBlockList.\n   *\n   * This is a non-parallel uploading method, please use uploadFileToBlockBlob(),\n   * uploadStreamToBlockBlob() or uploadBrowserDataToBlockBlob() for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {IBlockBlobUploadOptions} [options]\n   * @returns {Promise<Models.BlockBlobUploadResponse>}\n   * @memberof BlockBlobURL\n   */\n  public async upload(\n    aborter: Aborter,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: IBlockBlobUploadOptions = {}\n  ): Promise<Models.BlockBlobUploadResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.blockBlobContext.upload(body, contentLength, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress\n    });\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {HttpRequestBody} body\n   * @param {number} contentLength\n   * @param {IBlockBlobStageBlockOptions} [options]\n   * @returns {Promise<Models.BlockBlobStageBlockResponse>}\n   * @memberof BlockBlobURL\n   */\n  public async stageBlock(\n    aborter: Aborter,\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: IBlockBlobStageBlockOptions = {}\n  ): Promise<Models.BlockBlobStageBlockResponse> {\n    return this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions,\n      onUploadProgress: options.progress,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {string} sourceURL Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {number} offset From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {IBlockBlobStageBlockFromURLOptions} [options={}]\n   * @returns {Promise<Models.BlockBlobStageBlockFromURLResponse>}\n   * @memberof BlockBlobURL\n   */\n  public async stageBlockFromURL(\n    aborter: Aborter,\n    blockId: string,\n    sourceURL: string,\n    offset: number,\n    count?: number,\n    options: IBlockBlobStageBlockFromURLOptions = {}\n  ): Promise<Models.BlockBlobStageBlockFromURLResponse> {\n    return this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions,\n      sourceContentMD5: options.sourceContentMD5,\n      sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior stageBlock operation. You can call commitBlockList to update a blob\n   * by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n   * @param {IBlockBlobCommitBlockListOptions} [options]\n   * @returns {Promise<Models.BlockBlobCommitBlockListResponse>}\n   * @memberof BlockBlobURL\n   */\n  public async commitBlockList(\n    aborter: Aborter,\n    blocks: string[],\n    options: IBlockBlobCommitBlockListOptions = {}\n  ): Promise<Models.BlockBlobCommitBlockListResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.blockBlobContext.commitBlockList(\n      { latest: blocks },\n      {\n        abortSignal: aborter,\n        blobHTTPHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n      }\n    );\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.BlockListType} listType\n   * @param {IBlockBlobGetBlockListOptions} [options]\n   * @returns {Promise<Models.BlockBlobGetBlockListResponse>}\n   * @memberof BlockBlobURL\n   */\n  public async getBlockList(\n    aborter: Aborter,\n    listType: Models.BlockListType,\n    options: IBlockBlobGetBlockListOptions = {}\n  ): Promise<Models.BlockBlobGetBlockListResponse> {\n    const res = await this.blockBlobContext.getBlockList(listType, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n\n    if (!res.committedBlocks) {\n      res.committedBlocks = [];\n    }\n\n    if (!res.uncommittedBlocks) {\n      res.uncommittedBlocks = [];\n    }\n\n    return res;\n  }\n}\n","import { HttpResponse } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport * as Models from \"./generated/src/models\";\nimport { Container } from \"./generated/src/operations\";\nimport { IContainerAccessConditions, IMetadata } from \"./models\";\nimport { Pipeline } from \"./Pipeline\";\nimport { ServiceURL } from \"./ServiceURL\";\nimport { StorageURL } from \"./StorageURL\";\nimport { ETagNone } from \"./utils/constants\";\nimport { appendToURLPath, truncatedISO8061Date } from \"./utils/utils.common\";\n\nexport interface IContainerCreateOptions {\n  metadata?: IMetadata;\n  access?: Models.PublicAccessType;\n}\n\nexport interface IContainerGetPropertiesOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\nexport interface IContainerDeleteMethodOptions {\n  containerAccessConditions?: IContainerAccessConditions;\n}\n\nexport interface IContainerSetMetadataOptions {\n  containerAccessConditions?: IContainerAccessConditions;\n}\n\nexport interface IContainerGetAccessPolicyOptions {\n  leaseAccessConditions?: Models.LeaseAccessConditions;\n}\n\nexport interface ISignedIdentifier {\n  /**\n   * @member {string} id a unique id\n   */\n  id: string;\n  /**\n   * @member {AccessPolicy} accessPolicy\n   */\n  accessPolicy: {\n    /**\n     * @member {Date} start Optional. The date-time the policy is active\n     */\n    start?: Date;\n    /**\n     * @member {string} expiry Optional. The date-time the policy expires\n     */\n    expiry?: Date;\n    /**\n     * @member {string} permission The permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permission: string;\n  };\n}\n\nexport declare type ContainerGetAccessPolicyResponse = {\n  signedIdentifiers: ISignedIdentifier[];\n} & Models.ContainerGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: Models.ContainerGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Models.SignedIdentifier[];\n    };\n  };\n\nexport interface IContainerSetAccessPolicyOptions {\n  containerAccessConditions?: IContainerAccessConditions;\n}\n\nexport interface IContainerAcquireLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IContainerReleaseLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IContainerRenewLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IContainerBreakLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IContainerChangeLeaseOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\nexport interface IContainerListBlobsSegmentOptions {\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {number} [maxresults] Specifies the maximum number of containers\n   * to return. If the request does not specify maxresults, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxresults, or than the default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * @member {ListBlobsIncludeItem[]} [include] Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: Models.ListBlobsIncludeItem[];\n}\n\n/**\n * A ContainerURL represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n *\n * @export\n * @class ContainerURL\n * @extends {StorageURL}\n */\nexport class ContainerURL extends StorageURL {\n  /**\n   * Creates a ContainerURL object from ServiceURL\n   *\n   * @param serviceURL A ServiceURL object\n   * @param containerName A container name\n   */\n  public static fromServiceURL(serviceURL: ServiceURL, containerName: string): ContainerURL {\n    return new ContainerURL(\n      appendToURLPath(serviceURL.url, encodeURIComponent(containerName)),\n      serviceURL.pipeline\n    );\n  }\n\n  /**\n   * containerContext provided by protocol layer.\n   *\n   * @private\n   * @type {Containers}\n   * @memberof ContainerURL\n   */\n  private containerContext: Container;\n\n  /**\n   * Creates an instance of ContainerURL.\n   * @param {string} url A URL string pointing to Azure Storage blob container, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ContainerURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.containerContext = new Container(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ContainerURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {ContainerURL}\n   * @memberof ContainerURL\n   */\n  public withPipeline(pipeline: Pipeline): ContainerURL {\n    return new ContainerURL(this.url, pipeline);\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IContainerCreateOptions} [options]\n   * @returns {Promise<Models.ContainerCreateResponse>}\n   * @memberof ContainerURL\n   */\n  public async create(\n    aborter: Aborter,\n    options: IContainerCreateOptions = {}\n  ): Promise<Models.ContainerCreateResponse> {\n    // Spread operator in destructuring assignments,\n    // this will filter out unwanted properties from the response object into result object\n    return this.containerContext.create({\n      ...options,\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IContainersGetPropertiesOptions} [options]\n   * @returns {Promise<Models.ContainerGetPropertiesResponse>}\n   * @memberof ContainerURL\n   */\n  public async getProperties(\n    aborter: Aborter,\n    options: IContainerGetPropertiesOptions = {}\n  ): Promise<Models.ContainerGetPropertiesResponse> {\n    if (!options.leaseAccessConditions) {\n      options.leaseAccessConditions = {};\n    }\n\n    return this.containerContext.getProperties({\n      abortSignal: aborter,\n      ...options.leaseAccessConditions\n    });\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.ContainersDeleteMethodOptionalParams} [options]\n   * @returns {Promise<Models.ContainerDeleteResponse>}\n   * @memberof ContainerURL\n   */\n  public async delete(\n    aborter: Aborter,\n    options: IContainerDeleteMethodOptions = {}\n  ): Promise<Models.ContainerDeleteResponse> {\n    if (!options.containerAccessConditions) {\n      options.containerAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.modifiedAccessConditions) {\n      options.containerAccessConditions.modifiedAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.leaseAccessConditions) {\n      options.containerAccessConditions.leaseAccessConditions = {};\n    }\n\n    if (\n      (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfMatch and IfNoneMatch access conditions must have their default\\\n        values because they are ignored by the service\"\n      );\n    }\n\n    return this.containerContext.deleteMethod({\n      abortSignal: aborter,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IMetadata} [metadata] Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param {IContainerSetMetadataOptions} [options]\n   * @returns {Promise<Models.ContainerSetMetadataResponse>}\n   * @memberof ContainerURL\n   */\n  public async setMetadata(\n    aborter: Aborter,\n    metadata?: IMetadata,\n    options: IContainerSetMetadataOptions = {}\n  ): Promise<Models.ContainerSetMetadataResponse> {\n    if (!options.containerAccessConditions) {\n      options.containerAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.modifiedAccessConditions) {\n      options.containerAccessConditions.modifiedAccessConditions = {};\n    }\n\n    if (!options.containerAccessConditions.leaseAccessConditions) {\n      options.containerAccessConditions.leaseAccessConditions = {};\n    }\n\n    if (\n      options.containerAccessConditions.modifiedAccessConditions.ifUnmodifiedSince ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifMatch !== ETagNone) ||\n      (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n        options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\n        because they are ignored by the blob service\"\n      );\n    }\n\n    return this.containerContext.setMetadata({\n      abortSignal: aborter,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      metadata,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {IContainerGetAccessPolicyOptions} [options]\n   * @returns {Promise<ContainerGetAccessPolicyResponse>}\n   * @memberof ContainerURL\n   */\n  public async getAccessPolicy(\n    aborter: Aborter,\n    options: IContainerGetAccessPolicyOptions = {}\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.leaseAccessConditions) {\n      options.leaseAccessConditions = {};\n    }\n\n    const response = await this.containerContext.getAccessPolicy({\n      abortSignal: aborter,\n      leaseAccessConditions: options.leaseAccessConditions\n    });\n\n    const res: ContainerGetAccessPolicyResponse = {\n      _response: response._response,\n      blobPublicAccess: response.blobPublicAccess,\n      date: response.date,\n      eTag: response.eTag,\n      errorCode: response.errorCode,\n      lastModified: response.lastModified,\n      requestId: response.requestId,\n      signedIdentifiers: [],\n      version: response.version\n    };\n\n    for (const identifier of response) {\n      const accessPolicy: any = {\n        permission: identifier.accessPolicy.permission,\n      };\n\n      if (identifier.accessPolicy.expiry) {\n        accessPolicy.expiry = new Date(identifier.accessPolicy.expiry);\n      }\n\n      if (identifier.accessPolicy.start) {\n        accessPolicy.start = new Date(identifier.accessPolicy.start);\n      }\n\n      res.signedIdentifiers.push({\n        accessPolicy,\n        id: identifier.id\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {PublicAccessType} [access]\n   * @param {ISignedIdentifier[]} [containerAcl]\n   * @param {IContainerSetAccessPolicyOptions} [options]\n   * @returns {Promise<Models.ContainerSetAccessPolicyResponse>}\n   * @memberof ContainerURL\n   */\n  public async setAccessPolicy(\n    aborter: Aborter,\n    access?: Models.PublicAccessType,\n    containerAcl?: ISignedIdentifier[],\n    options: IContainerSetAccessPolicyOptions = {}\n  ): Promise<Models.ContainerSetAccessPolicyResponse> {\n    options.containerAccessConditions = options.containerAccessConditions || {};\n    const acl: Models.SignedIdentifier[] = [];\n    for (const identifier of containerAcl || []) {\n      acl.push({\n        accessPolicy: {\n          expiry: identifier.accessPolicy.expiry ? truncatedISO8061Date(identifier.accessPolicy.expiry) : \"\",\n          permission: identifier.accessPolicy.permission,\n          start: identifier.accessPolicy.start? truncatedISO8061Date(identifier.accessPolicy.start) : \"\"\n        },\n        id: identifier.id\n      });\n    }\n\n    return this.containerContext.setAccessPolicy({\n      abortSignal: aborter,\n      access,\n      containerAcl: acl,\n      leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n   * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n   * @param {IContainerAcquireLeaseOptions} [options]\n   * @returns {Promise<Models.ContainerAcquireLeaseResponse>}\n   * @memberof ContainerURL\n   */\n  public async acquireLease(\n    aborter: Aborter,\n    proposedLeaseId: string,\n    duration: number,\n    options: IContainerAcquireLeaseOptions = {}\n  ): Promise<Models.ContainerAcquireLeaseResponse> {\n    return this.containerContext.acquireLease({\n      abortSignal: aborter,\n      duration,\n      modifiedAccessConditions: options.modifiedAccessConditions,\n      proposedLeaseId\n    });\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {IContainerReleaseLeaseOptions} [options]\n   * @returns {Promise<Models.ContainerReleaseLeaseResponse>}\n   * @memberof ContainerURL\n   */\n  public async releaseLease(\n    aborter: Aborter,\n    leaseId: string,\n    options: IContainerReleaseLeaseOptions = {}\n  ): Promise<Models.ContainerReleaseLeaseResponse> {\n    return this.containerContext.releaseLease(leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To renew an existing lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {IContainerRenewLeaseOptions} [options]\n   * @returns {Promise<Models.ContainerRenewLeaseResponse>}\n   * @memberof ContainerURL\n   */\n  public async renewLease(\n    aborter: Aborter,\n    leaseId: string,\n    options: IContainerRenewLeaseOptions = {}\n  ): Promise<Models.ContainerRenewLeaseResponse> {\n    return this.containerContext.renewLease(leaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} period break period\n   * @param {IContainerBreakLeaseOptions} [options]\n   * @returns {Promise<Models.ContainerBreakLeaseResponse>}\n   * @memberof ContainerURL\n   */\n  public async breakLease(\n    aborter: Aborter,\n    period: number,\n    options: IContainerBreakLeaseOptions = {}\n  ): Promise<Models.ContainerBreakLeaseResponse> {\n    return this.containerContext.breakLease({\n      abortSignal: aborter,\n      breakPeriod: period,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * To change the ID of an existing lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} leaseId\n   * @param {string} proposedLeaseId\n   * @param {IContainerChangeLeaseOptions} [options]\n   * @returns {Promise<Models.ContainerChangeLeaseResponse>}\n   * @memberof ContainerURL\n   */\n  public async changeLease(\n    aborter: Aborter,\n    leaseId: string,\n    proposedLeaseId: string,\n    options: IContainerChangeLeaseOptions = {}\n  ): Promise<Models.ContainerChangeLeaseResponse> {\n    return this.containerContext.changeLease(leaseId, proposedLeaseId, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call ListBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} [marker]\n   * @param {IContainerListBlobsSegmentOptions} [options]\n   * @returns {Promise<Models.ContainerListBlobFlatSegmentResponse>}\n   * @memberof ContainerURL\n   */\n  public async listBlobFlatSegment(\n    aborter: Aborter,\n    marker?: string,\n    options: IContainerListBlobsSegmentOptions = {}\n  ): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    return this.containerContext.listBlobFlatSegment({\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call ListBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} delimiter\n   * @param {IContainerListBlobsSegmentOptions} [options]\n   * @returns {Promise<Models.ContainerListBlobHierarchySegmentResponse>}\n   * @memberof ContainerURL\n   */\n  public async listBlobHierarchySegment(\n    aborter: Aborter,\n    delimiter: string,\n    marker?: string,\n    options: IContainerListBlobsSegmentOptions = {}\n  ): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    return this.containerContext.listBlobHierarchySegment(delimiter, {\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n}\n","import { RequestPolicy, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n *\n * @export\n * @class AnonymousCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof AnonymousCredentialPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","import { RequestPolicy, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an AnonymousCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {AnonymousCredentialPolicy}\n   * @memberof AnonymousCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","import { HttpHeaders, RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/ms-rest-js\";\n\nimport { TokenCredential } from \"../credentials/TokenCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * TokenCredentialPolicy is a policy used to sign HTTP request with a token.\n * Such as an OAuth bearer token.\n *\n * @export\n * @class TokenCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class TokenCredentialPolicy extends CredentialPolicy {\n  /**\n   * The value of token.\n   *\n   * @type {TokenCredential}\n   * @memberof TokenCredentialPolicy\n   */\n  public readonly tokenCredential: TokenCredential;\n\n  /**\n   * Token authorization scheme, default header is \"Bearer\".\n   *\n   * @type {string}\n   * @memberof TokenCredentialPolicy\n   */\n  public readonly authorizationScheme: string;\n\n  /**\n   * Creates an instance of TokenCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {TokenCredential} tokenCredential\n   * @memberof TokenCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    tokenCredential: TokenCredential\n  ) {\n    super(nextPolicy, options);\n    this.tokenCredential = tokenCredential;\n    this.authorizationScheme = HeaderConstants.AUTHORIZATION_SCHEME;\n  }\n\n  /**\n   * Sign request with token.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof TokenCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `${this.authorizationScheme} ${this.tokenCredential.token}`\n    );\n    return request;\n  }\n}\n","import { RequestPolicy, RequestPolicyOptions } from \"@azure/ms-rest-js\";\n\nimport { Credential } from \"../credentials/Credential\";\nimport { TokenCredentialPolicy } from \"../policies/TokenCredentialPolicy\";\n\n/**\n * TokenCredential is a Credential used to generate a TokenCredentialPolicy.\n * Renew token by setting a new token string value to token property.\n *\n * @example\n *  const tokenCredential = new TokenCredential(\"token\");\n *  const pipeline = StorageURL.newPipeline(tokenCredential);\n *\n *  // List containers\n *  const serviceURL = new ServiceURL(\"https://mystorageaccount.blob.core.windows.net\", pipeline);\n *\n *  // Set up a timer to refresh the token\n *  const timerID = setInterval(() => {\n *    // Update token by accessing to public tokenCredential.token\n *    tokenCredential.token = \"updatedToken\";\n *    // WARNING: Timer must be manually stopped! It will forbid GC of tokenCredential\n *    if (shouldStop()) {\n *      clearInterval(timerID);\n *    }\n *  }, 60 * 60 * 1000); // Set an interval time before your token expired\n * @export\n * @class TokenCredential\n * @extends {Credential}\n *\n */\nexport class TokenCredential extends Credential {\n  /**\n   * Mutable token value. You can set a renewed token value to this property,\n   * for example, when an OAuth token is expired.\n   *\n   * @type {string}\n   * @memberof TokenCredential\n   */\n  public token: string;\n\n  /**\n   * Creates an instance of TokenCredential.\n   * @param {string} token\n   * @memberof TokenCredential\n   */\n  constructor(token: string) {\n    super();\n    this.token = token;\n  }\n\n  /**\n   * Creates a TokenCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {TokenCredentialPolicy}\n   * @memberof TokenCredential\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TokenCredentialPolicy {\n    return new TokenCredentialPolicy(nextPolicy, options, this);\n  }\n}\n","// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nenum BatchStates {\n  Good,\n  Error\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   *\n   * @type {number}\n   * @memberof Batch\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   *\n   * @private\n   * @type {Operation[]}\n   * @memberof Batch\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   *\n   * @private\n   * @type {BatchStates}\n   * @memberof Batch\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof Batch\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param {number} [concurrency=5]\n   * @memberof Batch\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param {Operation} operation\n   * @memberof Batch\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   * @returns {Promise<void>}\n   * @memberof Batch\n   */\n  public async do(): Promise<void> {\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   * @private\n   * @returns {(Operation | null)}\n   * @memberof Batch\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   * @private\n   * @returns {void}\n   * @memberof Batch\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","import { generateUuid } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlockBlobURL } from \"./BlockBlobURL\";\nimport { BlobUploadCommonResponse, IUploadToBlockBlobOptions } from \"./highlevel.common\";\nimport { Batch } from \"./utils/Batch\";\nimport {\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES\n} from \"./utils/constants\";\nimport { generateBlockID } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nexport async function uploadBrowserDataToBlockBlob(\n  aborter: Aborter,\n  browserData: Blob | ArrayBuffer | ArrayBufferView,\n  blockBlobURL: BlockBlobURL,\n  options?: IUploadToBlockBlobOptions\n): Promise<BlobUploadCommonResponse> {\n  const browserBlob = new Blob([browserData]);\n  return UploadSeekableBlobToBlockBlob(\n    aborter,\n    (offset: number, size: number): Blob => {\n      return browserBlob.slice(offset, offset + size);\n    },\n    browserBlob.size,\n    blockBlobURL,\n    options\n  );\n}\n\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob object to block blob. Requires a blobFactory as the data source,\n * which need to return a Blob object with the offset and size provided.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {(offset: number, size: number) => Blob} blobFactory\n * @param {number} size\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nasync function UploadSeekableBlobToBlockBlob(\n  aborter: Aborter,\n  blobFactory: (offset: number, size: number) => Blob,\n  size: number,\n  blockBlobURL: BlockBlobURL,\n  options: IUploadToBlockBlobOptions = {}\n): Promise<BlobUploadCommonResponse> {\n  if (!options.blockSize) {\n    options.blockSize = 0;\n  }\n  if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n    throw new RangeError(\n      `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n    );\n  }\n\n  if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n    options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n  }\n  if (\n    options.maxSingleShotSize < 0 ||\n    options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n  ) {\n    throw new RangeError(\n      `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n    );\n  }\n\n  if (options.blockSize === 0) {\n    if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n      throw new RangeError(`${size} is too larger to upload to a block blob.`);\n    }\n    if (size > options.maxSingleShotSize) {\n      options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n      if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n        options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n      }\n    }\n  }\n  if (!options.blobHTTPHeaders) {\n    options.blobHTTPHeaders = {};\n  }\n  if (!options.blobAccessConditions) {\n    options.blobAccessConditions = {};\n  }\n\n  if (size <= options.maxSingleShotSize) {\n    return blockBlobURL.upload(aborter, blobFactory(0, size), size, options);\n  }\n\n  const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n  if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n    throw new RangeError(\n      `The buffer's size is too big or the BlockSize is too small;` +\n        `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n    );\n  }\n\n  const blockList: string[] = [];\n  const blockIDPrefix = generateUuid();\n  let transferProgress: number = 0;\n\n  const batch = new Batch(options.parallelism);\n  for (let i = 0; i < numBlocks; i++) {\n    batch.addOperation(\n      async (): Promise<any> => {\n        const blockID = generateBlockID(blockIDPrefix, i);\n        const start = options.blockSize! * i;\n        const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n        const contentLength = end - start;\n        blockList.push(blockID);\n        await blockBlobURL.stageBlock(\n          aborter,\n          blockID,\n          blobFactory(start, contentLength),\n          contentLength,\n          {\n            leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions\n          }\n        );\n        // Update progress after block is successfully uploaded to server, in case of block trying\n        // TODO: Hook with convenience layer progress event in finer level\n        transferProgress += contentLength;\n        if (options.progress) {\n          options.progress!({\n            loadedBytes: transferProgress\n          });\n        }\n      }\n    );\n  }\n  await batch.do();\n\n  return blockBlobURL.commitBlockList(aborter, blockList, options);\n}\n","import { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS <= maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Parallelism should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n * @export\n * @class BufferScheduler\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   *\n   * @private\n   * @type {Readable}\n   * @memberof BufferScheduler\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   *\n   * @private\n   * @type {OutgoingHandler}\n   * @memberof BufferScheduler\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof BufferScheduler\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 < parallelism <= maxBuffers)\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly parallelism: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   *\n   * @private\n   * @type {string}\n   * @memberof BufferScheduler\n   */\n  private encoding?: string;\n\n  /**\n   * How many buffers have been allocated.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param {Readable} readable A Node.js Readable stream\n   * @param {number} bufferSize Buffer size of every maintained buffer\n   * @param {number} maxBuffers How many buffers can be allocated\n   * @param {OutgoingHandler} outgoingHandler An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param {number} parallelism Concurrency of executing outgoingHandlers (>0)\n   * @param {string} [encoding] [Optional] Encoding of Readable stream when it's a string stream\n   * @memberof BufferScheduler\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    parallelism: number,\n    encoding?: string\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (parallelism <= 0) {\n      throw new RangeError(`parallelism must be larger than 0, current is ${parallelism}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.parallelism = parallelism;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   * @returns {Promise<void>}\n   * @memberof BufferScheduler\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @private\n   * @param {Buffer} data\n   * @memberof BufferScheduler\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   * @private\n   * @returns {Buffer}\n   * @memberof BufferScheduler\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @private\n   * @returns {boolean} Return false when buffers in incoming are not enough, else true.\n   * @memberof BufferScheduler\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * parallelism reaches.\n   *\n   * @private\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.parallelism) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @returns {Promise<any>}\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @memberof BufferScheduler\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {number} offset From which position in the buffer to be filled, inclusive\n * @param {number} end To which position in the buffer to be filled, exclusive\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<void>}\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: string\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n","import { generateUuid, TransferProgressEvent } from \"@azure/ms-rest-js\";\nimport * as fs from \"fs\";\nimport { Readable } from \"stream\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlobURL } from \"./BlobURL\";\nimport { BlockBlobURL } from \"./BlockBlobURL\";\nimport { BlobHTTPHeaders } from \"./generated/src/models\";\nimport { BlobUploadCommonResponse, IDownloadFromBlobOptions, IUploadToBlockBlobOptions } from \"./highlevel.common\";\nimport { IBlobAccessConditions } from \"./models\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport {\n  BLOCK_BLOB_MAX_BLOCKS,\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n} from \"./utils/constants\";\nimport { generateBlockID } from \"./utils/utils.common\";\nimport { streamToBuffer } from \"./utils/utils.node\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Uploads a local file in blocks to a block blob.\n *\n * When file size <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {string} filePath Full path of local file\n * @param {BlockBlobURL} blockBlobURL BlockBlobURL\n * @param {IUploadToBlockBlobOptions} [options] IUploadToBlockBlobOptions\n * @returns {(Promise<BlobUploadCommonResponse>)} ICommonResponse\n */\nexport async function uploadFileToBlockBlob(\n  aborter: Aborter,\n  filePath: string,\n  blockBlobURL: BlockBlobURL,\n  options?: IUploadToBlockBlobOptions\n): Promise<BlobUploadCommonResponse> {\n  const size = fs.statSync(filePath).size;\n  return uploadResetableStreamToBlockBlob(\n    aborter,\n    (offset, count) =>\n      fs.createReadStream(filePath, {\n        autoClose: true,\n        end: count ? offset + count - 1 : Infinity,\n        start: offset\n      }),\n    size,\n    blockBlobURL,\n    options\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Accepts a Node.js Readable stream factory, and uploads in blocks to a block blob.\n * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n * is the offset in the block blob to be uploaded.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {(offset: number) => NodeJS.ReadableStream} streamFactory Returns a Node.js Readable stream starting\n *                                                                  from the offset defined\n * @param {number} size Size of the block blob\n * @param {BlockBlobURL} blockBlobURL BlockBlobURL\n * @param {IUploadToBlockBlobOptions} [options] IUploadToBlockBlobOptions\n * @returns {(Promise<BlobUploadCommonResponse>)} ICommonResponse\n */\nasync function uploadResetableStreamToBlockBlob(\n  aborter: Aborter,\n  streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n  size: number,\n  blockBlobURL: BlockBlobURL,\n  options: IUploadToBlockBlobOptions = {}\n): Promise<BlobUploadCommonResponse> {\n  if (!options.blockSize) {\n    options.blockSize = 0;\n  }\n  if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n    throw new RangeError(\n      `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n    );\n  }\n\n  if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n    options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n  }\n  if (\n    options.maxSingleShotSize < 0 ||\n    options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n  ) {\n    throw new RangeError(\n      `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n    );\n  }\n\n  if (options.blockSize === 0) {\n    if (size > BLOCK_BLOB_MAX_BLOCKS * BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(`${size} is too larger to upload to a block blob.`);\n    }\n    if (size > options.maxSingleShotSize) {\n      options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n      if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n        options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n      }\n    }\n  }\n  if (!options.blobHTTPHeaders) {\n    options.blobHTTPHeaders = {};\n  }\n  if (!options.blobAccessConditions) {\n    options.blobAccessConditions = {};\n  }\n\n  if (size <= options.maxSingleShotSize) {\n    return blockBlobURL.upload(aborter, () => streamFactory(0), size, options);\n  }\n\n  const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n  if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n    throw new RangeError(\n      `The buffer's size is too big or the BlockSize is too small;` +\n        `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n    );\n  }\n\n  const blockList: string[] = [];\n  const blockIDPrefix = generateUuid();\n  let transferProgress: number = 0;\n\n  const batch = new Batch(options.parallelism);\n  for (let i = 0; i < numBlocks; i++) {\n    batch.addOperation(\n      async (): Promise<any> => {\n        const blockID = generateBlockID(blockIDPrefix, i);\n        const start = options.blockSize! * i;\n        const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n        const contentLength = end - start;\n        blockList.push(blockID);\n        await blockBlobURL.stageBlock(\n          aborter,\n          blockID,\n          () => streamFactory(start, contentLength),\n          contentLength,\n          {\n            leaseAccessConditions: options.blobAccessConditions!.leaseAccessConditions\n          }\n        );\n        // Update progress after block is successfully uploaded to server, in case of block trying\n        transferProgress += contentLength;\n        if (options.progress) {\n          options.progress({ loadedBytes: transferProgress });\n        }\n      }\n    );\n  }\n  await batch.do();\n\n  return blockBlobURL.commitBlockList(aborter, blockList, options);\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Downloads an Azure Blob in parallel to a buffer.\n * Offset and count are optional, pass 0 for both to download the entire blob.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Buffer} buffer Buffer to be fill, must have length larger than count\n * @param {BlobURL} blobURL A BlobURL object\n * @param {number} offset From which position of the block blob to download, in bytes\n * @param {number} [count] How much data in bytes to be downloaded. Will download to the end when passing undefined\n * @param {IDownloadFromBlobOptions} [options] IDownloadFromBlobOptions\n * @returns {Promise<void>}\n */\nexport async function downloadBlobToBuffer(\n  aborter: Aborter,\n  buffer: Buffer,\n  blobURL: BlobURL,\n  offset: number,\n  count?: number,\n  options: IDownloadFromBlobOptions = {}\n): Promise<void> {\n  if (!options.blockSize) {\n    options.blockSize = 0;\n  }\n  if (options.blockSize < 0) {\n    throw new RangeError(\"blockSize option must be >= 0\");\n  }\n  if (options.blockSize === 0) {\n    options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n  }\n\n  if (offset < 0) {\n    throw new RangeError(\"offset option must be >= 0\");\n  }\n\n  if (count && count <= 0) {\n    throw new RangeError(\"count option must be > 0\");\n  }\n\n  if (!options.blobAccessConditions) {\n    options.blobAccessConditions = {};\n  }\n\n  // Customer doesn't specify length, get it\n  if (!count) {\n    const response = await blobURL.getProperties(aborter, options);\n    count = response.contentLength! - offset;\n    if (count < 0) {\n      throw new RangeError(\n        `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`\n      );\n    }\n  }\n\n  if (buffer.length < count) {\n    throw new RangeError(\n      `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n    );\n  }\n\n  let transferProgress: number = 0;\n  const batch = new Batch(options.parallelism);\n  for (let off = offset; off < offset + count; off = off + options.blockSize) {\n    batch.addOperation(async () => {\n      // Exclusive chunk end position\n      let chunkEnd = offset + count!;\n      if (off + options.blockSize! < chunkEnd) {\n        chunkEnd = off + options.blockSize!;\n      }\n\n      const response = await blobURL.download(aborter, off, chunkEnd - off, {\n        blobAccessConditions: options.blobAccessConditions,\n        maxRetryRequests: options.maxRetryRequestsPerBlock\n      });\n      const stream = response.readableStreamBody!;\n      await streamToBuffer(stream, buffer, off - offset, chunkEnd - offset);\n      // Update progress after block is downloaded, in case of block trying\n      // Could provide finer grained progress updating inside HTTP requests,\n      // only if convenience layer download try is enabled\n      transferProgress += chunkEnd - off;\n      if (options.progress) {\n        options.progress({ loadedBytes: transferProgress });\n      }\n    });\n  }\n  await batch.do();\n}\n\n/**\n * Option interface for uploadStreamToBlockBlob.\n *\n * @export\n * @interface IUploadStreamToBlockBlobOptions\n */\nexport interface IUploadStreamToBlockBlobOptions {\n  /**\n   * Blob HTTP Headers.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof IUploadStreamToBlockBlobOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof IUploadStreamToBlockBlobOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {IBlobAccessConditions}\n   * @memberof IUploadStreamToBlockBlobOptions\n   */\n  accessConditions?: IBlobAccessConditions;\n\n  /**\n   * Progress updater.\n   *\n   * @memberof IUploadStreamToBlockBlobOptions\n   */\n  progress?: (progress: TransferProgressEvent) => void;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Uploads a Node.js Readable stream into block blob.\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * * Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Readable} stream Node.js Readable stream\n * @param {BlockBlobURL} blockBlobURL A BlockBlobURL instance\n * @param {number} bufferSize Size of every buffer allocated, also the block size in the uploaded block blob\n * @param {number} maxBuffers Max buffers will allocate during uploading, positive correlation\n *                            with max uploading concurrency\n * @param {IUploadStreamToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nexport async function uploadStreamToBlockBlob(\n  aborter: Aborter,\n  stream: Readable,\n  blockBlobURL: BlockBlobURL,\n  bufferSize: number,\n  maxBuffers: number,\n  options: IUploadStreamToBlockBlobOptions = {}\n): Promise<BlobUploadCommonResponse> {\n  if (!options.blobHTTPHeaders) {\n    options.blobHTTPHeaders = {};\n  }\n  if (!options.accessConditions) {\n    options.accessConditions = {};\n  }\n\n  let blockNum = 0;\n  const blockIDPrefix = generateUuid();\n  let transferProgress: number = 0;\n  const blockList: string[] = [];\n\n  const scheduler = new BufferScheduler(\n    stream,\n    bufferSize,\n    maxBuffers,\n    async (buffer: Buffer) => {\n      const blockID = generateBlockID(blockIDPrefix, blockNum);\n      blockList.push(blockID);\n      blockNum++;\n\n      await blockBlobURL.stageBlock(aborter, blockID, buffer, buffer.length, {\n        leaseAccessConditions: options.accessConditions!.leaseAccessConditions\n      });\n\n      // Update progress after block is successfully uploaded to server, in case of block trying\n      transferProgress += buffer.length;\n      if (options.progress) {\n        options.progress({ loadedBytes: transferProgress });\n      }\n    },\n    // Parallelism should set a smaller value than maxBuffers, which is helpful to\n    // reduce the possibility when a outgoing handler waits for stream data, in\n    // this situation, outgoing handlers are blocked.\n    // Outgoing queue shouldn't be empty.\n    Math.ceil((maxBuffers / 4) * 3)\n  );\n  await scheduler.do();\n\n  return blockBlobURL.commitBlockList(aborter, blockList, options);\n}\n","import { HttpRequestBody, TransferProgressEvent } from \"@azure/ms-rest-js\";\n\nimport { Aborter } from \"./Aborter\";\nimport { BlobURL } from \"./BlobURL\";\nimport { ContainerURL } from \"./ContainerURL\";\nimport * as Models from \"./generated/src/models\";\nimport { PageBlob } from \"./generated/src/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { IBlobAccessConditions, IMetadata, IPageBlobAccessConditions } from \"./models\";\nimport { Pipeline } from \"./Pipeline\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n\nexport interface IPageBlobCreateOptions {\n  accessConditions?: IBlobAccessConditions;\n  blobSequenceNumber?: number;\n  blobHTTPHeaders?: Models.BlobHTTPHeaders;\n  metadata?: IMetadata;\n}\n\nexport interface IPageBlobUploadPagesOptions {\n  accessConditions?: IPageBlobAccessConditions;\n  progress?: (progress: TransferProgressEvent) => void;\n  transactionalContentMD5?: Uint8Array;\n}\n\nexport interface IPageBlobUploadPagesFromURLOptions {\n  accessConditions?: IPageBlobAccessConditions;\n  sourceModifiedAccessConditions?: Models.ModifiedAccessConditions;\n  sourceContentMD5?: Uint8Array;\n}\n\nexport interface IPageBlobClearPagesOptions {\n  accessConditions?: IPageBlobAccessConditions;\n}\n\nexport interface IPageBlobGetPageRangesOptions {\n  accessConditions?: IBlobAccessConditions;\n}\n\nexport interface IPageBlobGetPageRangesDiffOptions {\n  accessConditions?: IBlobAccessConditions;\n  range?: string;\n}\n\nexport interface IPageBlobResizeOptions {\n  accessConditions?: IBlobAccessConditions;\n}\n\nexport interface IPageBlobUpdateSequenceNumberOptions {\n  accessConditions?: IBlobAccessConditions;\n}\n\nexport interface IPageBlobStartCopyIncrementalOptions {\n  modifiedAccessConditions?: Models.ModifiedAccessConditions;\n}\n\n/**\n * PageBlobURL defines a set of operations applicable to page blobs.\n *\n * @export\n * @class PageBlobURL\n * @extends {StorageURL}\n */\nexport class PageBlobURL extends BlobURL {\n  /**\n   * Creates a PageBlobURL object from ContainerURL instance.\n   *\n   * @static\n   * @param {ContainerURL} containerURL A ContainerURL object\n   * @param {string} blobName A page blob name\n   * @returns {PageBlobURL}\n   * @memberof PageBlobURL\n   */\n  public static fromContainerURL(containerURL: ContainerURL, blobName: string): PageBlobURL {\n    return new PageBlobURL(\n      appendToURLPath(containerURL.url, encodeURIComponent(blobName)),\n      containerURL.pipeline\n    );\n  }\n\n  /**\n   * Creates a PageBlobURL object from BlobURL instance.\n   *\n   * @static\n   * @param {BlobURL} blobURL\n   * @returns {PageBlobURL}\n   * @memberof PageBlobURL\n   */\n  public static fromBlobURL(blobURL: BlobURL): PageBlobURL {\n    return new PageBlobURL(blobURL.url, blobURL.pipeline);\n  }\n\n  /**\n   * pageBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {PageBlobs}\n   * @memberof PageBlobURL\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   * Creates an instance of PageBlobURL.\n   * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof PageBlobURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.pageBlobContext = new PageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new PageBlobURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {PageBlobURL}\n   * @memberof PageBlobURL\n   */\n  public withPipeline(pipeline: Pipeline): PageBlobURL {\n    return new PageBlobURL(this.url, pipeline);\n  }\n\n  /**\n   * Creates a new PageBlobURL object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot\n   * @returns {PageBlobURL}\n   * @memberof PageBlobURL\n   */\n  public withSnapshot(snapshot: string): PageBlobURL {\n    return new PageBlobURL(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} size\n   * @param {IPageBlobCreateOptions} [options]\n   * @returns {Promise<Models.PageBlobCreateResponse>}\n   * @memberof PageBlobURL\n   */\n  public async create(\n    aborter: Aborter,\n    size: number,\n    options: IPageBlobCreateOptions = {}\n  ): Promise<Models.PageBlobCreateResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.create(0, size, {\n      abortSignal: aborter,\n      blobHTTPHeaders: options.blobHTTPHeaders,\n      blobSequenceNumber: options.blobSequenceNumber,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      metadata: options.metadata,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {HttpRequestBody} body\n   * @param {number} offset Offset of destination page blob\n   * @param {number} count Content length of the body, also number of bytes to be uploaded\n   * @param {IPageBlobUploadPagesOptions} [options]\n   * @returns {Promise<Models.PageBlobsUploadPagesResponse>}\n   * @memberof PageBlobURL\n   */\n  public async uploadPages(\n    aborter: Aborter,\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: IPageBlobUploadPagesOptions = {}\n  ): Promise<Models.PageBlobUploadPagesResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.uploadPages(body, count, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      onUploadProgress: options.progress,\n      range: rangeToString({ offset, count }),\n      sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n      transactionalContentMD5: options.transactionalContentMD5\n    });\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} sourceURL Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param {number} sourceOffset The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param {number} destOffset Offset of destination page blob\n   * @param {number} count Number of bytes to be uploaded from source page blob\n   * @param {IPageBlobUploadPagesFromURLOptions} [options={}]\n   * @returns {Promise<Models.PageBlobUploadPagesFromURLResponse>}\n   * @memberof PageBlobURL\n   */\n  public async uploadPagesFromURL(\n    aborter: Aborter,\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: IPageBlobUploadPagesFromURLOptions = {}\n  ): Promise<Models.PageBlobUploadPagesFromURLResponse> {\n    options.accessConditions = options.accessConditions || {};\n    options.sourceModifiedAccessConditions = options.sourceModifiedAccessConditions || {};\n\n    return this.pageBlobContext.uploadPagesFromURL(\n      sourceURL,\n      rangeToString({ offset: sourceOffset, count }),\n      0,\n      rangeToString({ offset: destOffset, count }),\n      {\n        abortSignal: aborter,\n        sourceContentMD5: options.sourceContentMD5,\n        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n        sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n        }\n      }\n    );\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} offset\n   * @param {number} count\n   * @param {IPageBlobClearPagesOptions} [options]\n   * @returns {Promise<Models.PageBlobClearPagesResponse>}\n   * @memberof PageBlobURL\n   */\n  public async clearPages(\n    aborter: Aborter,\n    offset: number,\n    count: number,\n    options: IPageBlobClearPagesOptions = {}\n  ): Promise<Models.PageBlobClearPagesResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.clearPages(0, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      range: rangeToString({ offset, count }),\n      sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions\n    });\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} offset\n   * @param {number} count\n   * @param {IPageBlobGetPageRangesOptions} [options]\n   * @returns {Promise<Models.PageBlobGetPageRangesResponse>}\n   * @memberof PageBlobURL\n   */\n  public async getPageRanges(\n    aborter: Aborter,\n    offset: number,\n    count: number,\n    options: IPageBlobGetPageRangesOptions = {}\n  ): Promise<Models.PageBlobGetPageRangesResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.getPageRanges({\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      range: rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} offset\n   * @param {number} count\n   * @param {string} prevSnapshot\n   * @param {IPageBlobGetPageRangesDiffOptions} [options]\n   * @returns {Promise<Models.PageBlobGetPageRangesDiffResponse>}\n   * @memberof PageBlobURL\n   */\n  public async getPageRangesDiff(\n    aborter: Aborter,\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: IPageBlobGetPageRangesDiffOptions = {}\n  ): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.getPageRangesDiff({\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n      prevsnapshot: prevSnapshot,\n      range: rangeToString({ offset, count })\n    });\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {number} size\n   * @param {IPageBlobResizeOptions} [options]\n   * @returns {Promise<Models.PageBlobResizeResponse>}\n   * @memberof PageBlobURL\n   */\n  public async resize(\n    aborter: Aborter,\n    size: number,\n    options: IPageBlobResizeOptions = {}\n  ): Promise<Models.PageBlobResizeResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.resize(size, {\n      abortSignal: aborter,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.SequenceNumberActionType} sequenceNumberAction\n   * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n   * @param {IPageBlobUpdateSequenceNumberOptions} [options]\n   * @returns {Promise<Models.PageBlobUpdateSequenceNumberResponse>}\n   * @memberof PageBlobURL\n   */\n  public async updateSequenceNumber(\n    aborter: Aborter,\n    sequenceNumberAction: Models.SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: IPageBlobUpdateSequenceNumberOptions = {}\n  ): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    options.accessConditions = options.accessConditions || {};\n    return this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n      abortSignal: aborter,\n      blobSequenceNumber: sequenceNumber,\n      leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n      modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n    });\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {IPageBlobStartCopyIncrementalOptions} [options]\n   * @returns {Promise<Models.PageBlobCopyIncrementalResponse>}\n   * @memberof PageBlobURL\n   */\n  public async startCopyIncremental(\n    aborter: Aborter,\n    copySource: string,\n    options: IPageBlobStartCopyIncrementalOptions = {}\n  ): Promise<Models.PageBlobCopyIncrementalResponse> {\n    return this.pageBlobContext.copyIncremental(copySource, {\n      abortSignal: aborter,\n      modifiedAccessConditions: options.modifiedAccessConditions\n    });\n  }\n}\n","import { HttpResponse } from \"@azure/ms-rest-js\";\n\nimport * as Models from \"./generated/src/models\";\nimport { Aborter } from \"./Aborter\";\nimport { ListContainersIncludeType } from \"./generated/src/models\";\nimport { Service } from \"./generated/src/operations\";\nimport { Pipeline } from \"./Pipeline\";\nimport { StorageURL } from \"./StorageURL\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\nexport interface IServiceListContainersSegmentOptions {\n  /**\n   * @member {string} [prefix] Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * @member {number} [maxresults] Specifies the maximum number of containers\n   * to return. If the request does not specify maxresults, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxresults, or than the default of 5000.\n   */\n  maxresults?: number;\n  /**\n   * @member {ListContainersIncludeType} [include] Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n}\n\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedOid: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedTid: string;\n  /**\n   * The date-time the key is active.\n   *\n   * @type {Date}\n   * @memberof UserDelegationKey\n   */\n  signedStart: Date;\n  /**\n   * The date-time the key expires.\n   *\n   * @type {Date}\n   * @memberof UserDelegationKey\n   */\n  signedExpiry: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  value: string;\n}\n\nexport declare type ServiceGetUserDelegationKeyResponse = UserDelegationKey &\n  Models.ServiceGetUserDelegationKeyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: Models.ServiceGetUserDelegationKeyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Models.UserDelegationKey;\n    };\n  };\n\n/**\n * A ServiceURL represents a URL to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n *\n * @export\n * @class ServiceURL\n * @extends {StorageURL}\n */\nexport class ServiceURL extends StorageURL {\n  /**\n   * serviceContext provided by protocol layer.\n   *\n   * @private\n   * @type {Service}\n   * @memberof ServiceURL\n   */\n  private serviceContext: Service;\n\n  /**\n   * Creates an instance of ServiceURL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ServiceURL\n   */\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ServiceURL object identical to the source but with the\n   * specified request policy pipeline.\n   *\n   * @param {Pipeline} pipeline\n   * @returns {ServiceURL}\n   * @memberof ServiceURL\n   */\n  public withPipeline(pipeline: Pipeline): ServiceURL {\n    return new ServiceURL(this.url, pipeline);\n  }\n\n  /**\n   * Gets the properties of a storage account’s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties}\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @returns {Promise<Models.ServiceGetPropertiesResponse>}\n   * @memberof ServiceURL\n   */\n  public async getProperties(aborter: Aborter): Promise<Models.ServiceGetPropertiesResponse> {\n    return this.serviceContext.getProperties({\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * Sets properties for a storage account’s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Models.StorageServiceProperties} properties\n   * @returns {Promise<Models.ServiceSetPropertiesResponse>}\n   * @memberof ServiceURL\n   */\n  public async setProperties(\n    aborter: Aborter,\n    properties: Models.StorageServiceProperties\n  ): Promise<Models.ServiceSetPropertiesResponse> {\n    return this.serviceContext.setProperties(properties, {\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n   *\n   *  @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @returns {Promise<Models.ServiceGetStatisticsResponse>}\n   * @memberof ServiceURL\n   */\n  public async getStatistics(aborter: Aborter): Promise<Models.ServiceGetStatisticsResponse> {\n    return this.serviceContext.getStatistics({\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @returns {Promise<Models.ServiceGetAccountInfoResponse>}\n   * @memberof ServiceURL\n   */\n  public async getAccountInfo(aborter: Aborter): Promise<Models.ServiceGetAccountInfoResponse> {\n    return this.serviceContext.getAccountInfo({\n      abortSignal: aborter\n    });\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of containers to be returned with the next listing operation. The\n   *                          operation returns the NextMarker value within the response body if the\n   *                          listing operation did not return all containers remaining to be listed\n   *                          with the current page. The NextMarker value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {IServiceListContainersSegmentOptions} [options]\n   * @returns {Promise<Models.ServiceListContainersSegmentResponse>}\n   * @memberof ServiceURL\n   */\n  public async listContainersSegment(\n    aborter: Aborter,\n    marker?: string,\n    options: IServiceListContainersSegmentOptions = {}\n  ): Promise<Models.ServiceListContainersSegmentResponse> {\n    return this.serviceContext.listContainersSegment({\n      abortSignal: aborter,\n      marker,\n      ...options\n    });\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param {Date} start      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param {Date} expiry     The end time for the user delegation SAS. Must be within 7 days of the current time\n   * @returns {Promise<ServiceGetUserDelegationKeyResponse>}\n   * @memberof ServiceURL\n   */\n  public async getUserDelegationKey(\n    aborter: Aborter,\n    start: Date,\n    expiry: Date\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    const response = await this.serviceContext.getUserDelegationKey(\n      {\n        start: truncatedISO8061Date(start, false),\n        expiry: truncatedISO8061Date(expiry, false)\n      },\n      {\n        abortSignal: aborter\n      }\n    );\n\n    const userDelegationKey = {\n      signedOid: response.signedOid,\n      signedTid: response.signedTid,\n      signedStart: new Date(response.signedStart),\n      signedExpiry: new Date(response.signedExpiry),\n      signedService: response.signedService,\n      signedVersion: response.signedVersion,\n      value: response.value\n    };\n\n    const res: ServiceGetUserDelegationKeyResponse = {\n      _response: response._response,\n      requestId: response.requestId,\n      version: response.version,\n      date: response.date,\n      errorCode: response.errorCode,\n      ...userDelegationKey,\n    };\n\n    return res;\n  }\n}\n"],"names":["isNode","URLBuilder","SASProtocol","RestError","tslib_1.__extends","Readable","msRest.QueryCollectionFormat","msRest.Serializer","Parameters.url","Parameters.timeout","Parameters.restype0","Parameters.comp0","Parameters.version","Parameters.requestId","Mappers.StorageServiceProperties","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","Mappers.ServiceGetPropertiesHeaders","Parameters.comp1","Mappers.StorageServiceStats","Mappers.ServiceGetStatisticsHeaders","Parameters.prefix","Parameters.marker","Parameters.maxresults","Parameters.include0","Parameters.comp2","Mappers.ListContainersSegmentResponse","Mappers.ServiceListContainersSegmentHeaders","Parameters.comp3","Mappers.KeyInfo","Mappers.UserDelegationKey","Mappers.ServiceGetUserDelegationKeyHeaders","Parameters.restype1","Mappers.ServiceGetAccountInfoHeaders","getPropertiesOperationSpec","getAccountInfoOperationSpec","serializer","Mappers","Parameters.restype2","Parameters.metadata","Parameters.access","Mappers.ContainerCreateHeaders","Parameters.leaseId0","Mappers.ContainerGetPropertiesHeaders","Parameters.ifModifiedSince","Parameters.ifUnmodifiedSince","Mappers.ContainerDeleteHeaders","Parameters.comp4","Mappers.ContainerSetMetadataHeaders","Parameters.comp5","Mappers.ContainerGetAccessPolicyHeaders","Mappers.ContainerSetAccessPolicyHeaders","Parameters.comp6","Parameters.duration","Parameters.proposedLeaseId0","Parameters.action0","Mappers.ContainerAcquireLeaseHeaders","Parameters.leaseId1","Parameters.action1","Mappers.ContainerReleaseLeaseHeaders","Parameters.action2","Mappers.ContainerRenewLeaseHeaders","Parameters.breakPeriod","Parameters.action3","Mappers.ContainerBreakLeaseHeaders","Parameters.proposedLeaseId1","Parameters.action4","Mappers.ContainerChangeLeaseHeaders","Parameters.include1","Mappers.ListBlobsFlatSegmentResponse","Mappers.ContainerListBlobFlatSegmentHeaders","Parameters.delimiter","Mappers.ListBlobsHierarchySegmentResponse","Mappers.ContainerListBlobHierarchySegmentHeaders","Mappers.ContainerGetAccountInfoHeaders","deleteMethodOperationSpec","setMetadataOperationSpec","acquireLeaseOperationSpec","releaseLeaseOperationSpec","renewLeaseOperationSpec","changeLeaseOperationSpec","breakLeaseOperationSpec","Parameters.snapshot","Parameters.range0","Parameters.rangeGetContentMD5","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.BlobDownloadHeaders","Mappers.BlobGetPropertiesHeaders","Parameters.deleteSnapshots","Mappers.BlobDeleteHeaders","Parameters.comp7","Mappers.BlobUndeleteHeaders","Parameters.blobCacheControl","Parameters.blobContentType","Parameters.blobContentMD5","Parameters.blobContentEncoding","Parameters.blobContentLanguage","Parameters.blobContentDisposition","Mappers.BlobSetHTTPHeadersHeaders","Mappers.BlobSetMetadataHeaders","Mappers.BlobAcquireLeaseHeaders","Mappers.BlobReleaseLeaseHeaders","Mappers.BlobRenewLeaseHeaders","Mappers.BlobChangeLeaseHeaders","Mappers.BlobBreakLeaseHeaders","Parameters.comp8","Mappers.BlobCreateSnapshotHeaders","Parameters.copySource","Parameters.sourceIfModifiedSince","Parameters.sourceIfUnmodifiedSince","Parameters.sourceIfMatch","Parameters.sourceIfNoneMatch","Mappers.BlobStartCopyFromURLHeaders","Parameters.xMsRequiresSync","Mappers.BlobCopyFromURLHeaders","Parameters.copyId","Parameters.comp9","Parameters.copyActionAbortConstant","Mappers.BlobAbortCopyFromURLHeaders","Parameters.comp10","Parameters.tier","Mappers.BlobSetTierHeaders","Mappers.BlobGetAccountInfoHeaders","createOperationSpec","Parameters.contentLength","Parameters.blobContentLength","Parameters.blobSequenceNumber","Parameters.blobType0","Mappers.PageBlobCreateHeaders","Parameters.comp11","Parameters.transactionalContentMD5","Parameters.pageWrite0","Parameters.ifSequenceNumberLessThanOrEqualTo","Parameters.ifSequenceNumberLessThan","Parameters.ifSequenceNumberEqualTo","Mappers.PageBlobUploadPagesHeaders","Parameters.pageWrite1","Mappers.PageBlobClearPagesHeaders","Parameters.sourceUrl","Parameters.sourceRange0","Parameters.sourceContentMD5","Parameters.range1","Mappers.PageBlobUploadPagesFromURLHeaders","Parameters.comp12","Mappers.PageList","Mappers.PageBlobGetPageRangesHeaders","Parameters.prevsnapshot","Mappers.PageBlobGetPageRangesDiffHeaders","Mappers.PageBlobResizeHeaders","Parameters.sequenceNumberAction","Mappers.PageBlobUpdateSequenceNumberHeaders","Parameters.comp13","Mappers.PageBlobCopyIncrementalHeaders","Parameters.blobType1","Mappers.AppendBlobCreateHeaders","Parameters.comp14","Parameters.maxSize","Parameters.appendPosition","Mappers.AppendBlobAppendBlockHeaders","Parameters.sourceRange1","Mappers.AppendBlobAppendBlockFromUrlHeaders","Parameters.blobType2","Mappers.BlockBlobUploadHeaders","Parameters.blockId","Parameters.comp15","Mappers.BlockBlobStageBlockHeaders","Mappers.BlockBlobStageBlockFromURLHeaders","Parameters.comp16","Mappers.BlockLookupList","Mappers.BlockBlobCommitBlockListHeaders","Parameters.listType","Mappers.BlockList","Mappers.BlockBlobGetBlockListHeaders","BaseRequestPolicy","msRest.getDefaultUserAgentValue","msRest.ServiceClient","HttpPipelineLogLevel","RetryPolicyType","HttpHeaders","os.type","os.release","generateUuid","deserializationPolicy","Blob","Crypto.createHmac","EventEmitter","fs.statSync","fs.createReadStream"],"mappings":"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"}